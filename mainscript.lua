--[[

  _   _            ____ ____   __     _______ 
 | | | | _____  __/ ___/ ___|  \ \   / /___ / 
 | |_| |/ _ \ \/ /\___ \___ \   \ \ / /  |_ \ 
 |  _  |  __/>  <  ___) |__) |   \ V /  ___) |
 |_| |_|\___/_/\_\|____/____/     \_/  |____/ 

        By HexHub Softworks | Powered By OKDOOR Backdoor Systems

 ------------------------------------------------
 |                -- CREDITS --                 |
 |                                              |
 | HexerMaster1929         Creator,Co-Scripter  |
 |                                              |
 | MrolivesGaming                     Scripter  |
 |                                              |
 | MissSavannah                    UI Designer  |
 |                                              |
 ------------------------------------------------

]]--

--do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==5) then v16=nil;v16=function(v17,v18,...)local v27=0;local v28;local v29;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;while true do if (v27==7) then v39=function(v40,v41,v42)local v48=v40[1];local v49=v40[2];local v50=v40[3];return function(...)local v76=0;local v77;local v78;local v79;local v80;local v81;while true do if (v76==3) then A,B=v37(v12(v81));if  not A[1] then local v103=v40[4][v77] or "?" ;error("Script error at ["   .. v103   .. "]:"   .. A[2] );else return v14(A,2,B);end break;end if (v76==1) then v79={...};v80=v13("#",...) -1 ;v76=2;end if (2==v76) then v81=nil;v81=function()local v93=v48;local v94=v49;local v95=v50;local v96=v37;local v97={};local v98={};local v99={};for v104=0 -(0 + 0) ,v80 do if ((v104>=v95) or (1575==((23427 -13694) -5783))) then v97[v104-v95 ]=v79[v104 + 1 ];else v99[v104]=v79[v104 + 1 ];end end local v100=(v80-v95) + 1 ;local v101;local v102;while true do local v105=0 + 0 ;local v106;while true do if ((v105==0) or ((6074 -4716)>4182)) then v106=0 -0 ;while true do if (((1120 -478)<2911) and ((1050 -(534 + 515))==v106)) then if (((3890 -1501)>=(3550 -(1133 + 134))) and (v102<=(1020 -(658 + 330)))) then if ((v102<=(32 -17)) or ((2741 + 39 + 27)<(268 + 338))) then if (((1597 -(329 + 251))>(20 + 54)) and (v102<=(17 -10))) then if ((4027>(3547 -(1422 + 131))) and (v102<=(1897 -(1866 + 28)))) then if ((v102<=(1 + 0)) or ((3077 -1914)>=(1844 + 248))) then if (((4524 -(398 + 453))<=(6238 -(1341 + 420))) and (v102==(0 -0))) then local v139=0;local v140;local v141;while true do if (((18428 -13495)>=(2633 -840)) and (v139==0)) then v140=0;v141=nil;v139=879 -(621 + (648 -391)) ;end if (((1 + 0)==v139) or ((1208 -((2153 -1619) + 434))>3561)) then while true do if ((((1560 + 1545) -(1053 + (173 -125)))<(5435 -(480 + 20))) and (v140==0)) then v141=v99[v101[6 -2 ]];if ((((26 -16) + 756)==(1617 -(549 + 302))) and  not v141) then v77=v77 + (1 -0) ;else local v401=1270 -((1199 -(535 + 154)) + 760) ;local v402;local v403;while true do if (((425 + 594 + 418)<=(8853 -5062)) and (v401==(1 + 0))) then while true do if (((1706 -1094)>(520 -(154 + 100))) and (v402==0)) then v403=0 -0 ;while true do if (((0 + 0)==v403) or ((869 + 2777)>(14072 -9210))) then v99[v101[1 + 1 ]]=v141;v77=v101[5 -2 ];break;end end break;end end break;end if ((4479==4479) and (v401==(0 + 0))) then v402=0 + 0 ;v403=nil;v401=1135 -(432 + 702) ;end end end break;end end break;end end else v99[v101[1 + (1 -0) ]]=v99[v101[3]] * v99[v101[11 -7 ]] ;end elseif ((v102>(5 -3)) or (1143==(10200 -6500))) then local v143=0 + 0 ;local v144;local v145;local v146;while true do if (((236 + 2337)==2573) and (v143==(0 -0))) then v144=0 -(0 -0) ;v145=nil;v143=1;end if ((2862>(805 -413)) and (v143==1)) then v146=nil;while true do if (((4475 -(685 + 1079))==(4317 -(446 + 1160))) and (((511 -364) -(48 + 99))==v144)) then v145=0 + 0 ;v146=nil;v144=2 -1 ;end if ((v144==(1205 -(799 + 405))) or ((4112 -(1558 + (2223 -(1517 + 470))))<=((577 + 484) -420))) then while true do if ((v145==0) or ((2818 -(106 + 39))>((5909 -3670) + 2445))) then v146=v99[v101[4]];if (v146 or (2931>=(3271 -(68 + 120)))) then v77=v77 + (1 -0) ;else local v442=394 -(202 + 192) ;local v443;local v444;while true do if ((v442==(0 -0)) or (536>=801)) then v443=0 -0 ;v444=nil;v442=2 -1 ;end if (((873 + 3549)>=(589 + 1351)) and (v442==1)) then while true do if ((0==v443) or ((1337 -(40 + 31 + 6))>1701)) then v444=0 -0 ;while true do if ((v444==(0 + 0)) or ((8129 -3984)>(10817 -6467))) then v99[v101[1 + 1 ]]=v146;v77=v101[471 -(272 + 196) ];break;end end break;end end break;end end end break;end end break;end end break;end end else v99[v101[2 + 0 ]]=v101[3 -0 ] -v99[v101[9 -5 ]] ;end elseif ((v102<=(885 -(262 + 618))) or ((1805 + 1909)==(652 + 244))) then if (((3734 -2322)==1412) and (v102==(6 -2))) then local v148=0 -0 ;local v149;local v150;local v151;local v152;local v153;while true do if ((882==((1039 + 700) -(633 + 224))) and ((0 + 0)==v148)) then v149=(379 + 722) -(62 + 1039) ;v150=nil;v148=1451 -(753 + 697) ;end if ((3226<(563 + 3814)) and (v148==(1152 -(218 + 932)))) then v153=nil;while true do if ((v149==(1 + 0)) or (((891 + 2831) -(822 + 178))==(202 + 22))) then local v343=1274 -(313 + 961) ;while true do if (((4737 -(137 + 105))>(1940 -(4 + 7))) and (v343==((675 + 1313) -(1749 + 239)))) then v78=(v152 + v150) -(1981 -(454 + 313 + (2942 -(181 + 1548)))) ;v153=672 -(225 + 447) ;v343=1;end if (((18028 -13229)==(4010 + 789)) and (v343==(1 -0))) then v149=479 -((845 -(239 + 502)) + 373) ;break;end end end if (((3034 -1775)>(1333 -(940 + 350))) and (v149==(7 -5))) then for v381=v150,v78 do local v382=0 -0 ;local v383;while true do if ((v382==0) or (4611>4760)) then v383=1305 -(674 + 631) ;while true do if ((v383==(1738 -(477 + 1261))) or ((3429 + 6)<=(1381 + 1167))) then v153=v153 + ((11 -7) -3) ;v99[v381]=v151[v153];break;end end break;end end end break;end if ((v149==(1814 -(1104 + 710))) or (4568>=4739)) then v150=v101[2 -0 ];v151,v152=v96(v99[v150](v14(v99,v150 + (1585 -(578 + 1006)) ,v101[1887 -(358 + 1526) ])));v149=1 -0 ;end end break;end if (((3332 -671)==(4555 -(1463 + 431))) and (v148==(2 -1))) then v151=nil;v152=nil;v148=7 -5 ;end end else v99[v101[2]][v99[v101[7 -4 ]]]=v99[v101[537 -(355 + 178) ]];end elseif (((612 + 1057 + 373)>(6448 -4731)) and (v102==(3 + 3))) then if (((856 + 973)<=(7882 -3196)) and (v99[v101[2 + 0 ]]==v101[5 -1 ])) then v77=v77 + 1 + (734 -(481 + 253)) ;else v77=v101[3 + 0 ];end else v99[v101[2 + 0 ]]=v101[426 -((341 -62) + 65 + 79) ]~=(70 -(17 + 53)) ;end elseif ((2651>=(5490 -3234)) and (v102<=(35 -24))) then if ((v102<=(1440 -(645 + 786))) or ((3101 + 1678)<1038)) then if ((4207>(3667 -(105 + 1027))) and (v102>(134 -(109 + 17)))) then v99[v101[2]]();else v42[v101[223 -((827 -609) + 2) ]]=v99[v101[5 -3 ]];end elseif ((v102>10) or ((1381 + (798 -545))>(4225 -(399 + 29)))) then v99[v101[577 -((1092 -(567 + 139)) + 189) ]]=v99[v101[1476 -(242 + 1231) ]] + v101[517 -(223 + 290) ] ;else local v160=1328 -(622 + 706) ;local v161;while true do if ((4676>(869 -(14 + 126))) and (0==v160)) then v161=v101[2];do return v99[v161](v14(v99,v161 + 1 ,v101[11 -8 ]));end break;end end end elseif ((v102<=13) or (((2430 -1753) + 1079)==(4753 -(53 + 250)))) then if (((11076 -6223)>=4668) and (v102>12)) then local v162=0 + 0 ;local v163;local v164;local v165;local v166;while true do if (((6394 -3826)<=(7507 -4162)) and (v162==(0 -0))) then v163=(0 -0) -0 ;v164=nil;v162=1 + 0 ;end if ((v162==(1 + 1)) or ((1523 -872)>(1077 + (888 -275)))) then while true do if ((v163==(0 -0)) or ((690 + 395)<=(64 + 260))) then v164=v101[1 + 1 ];v165=v99[v164];v163=2 -1 ;end if ((v163==(830 -(208 + 491 + 130))) or ((207 + 50)>=(14258 -9885))) then v166=v101[302 -(128 + 171) ];for v384=1 + 0 ,v166 do v165[v384]=v99[v164 + v384 ];end break;end end break;end if (((4521 -(729 + 1130))>=1407) and (v162==(1 + 0))) then v165=nil;v166=nil;v162=1820 -(1578 + 240) ;end end else local v167=832 -(539 + 293) ;local v168;local v169;while true do if ((v167==(1061 -(520 + 540))) or ((4338 -1434)>(954 + 2219))) then v99[v168 + ((1500 + 27) -(457 + 1069)) ]=v169;v99[v168]=v169[v101[1 + 3 ]];break;end if ((v167==(120 -(54 + 66))) or (932>=3655)) then local v306=0 + 0 ;while true do if (((1934 -(1319 + 390))<(4088 -2560)) and (v306==((2 -1) -0))) then v167=758 -(71 + 686) ;break;end if (((4501 -(505 + 3))==3993) and (v306==(0 -0))) then v168=v101[9 -7 ];v169=v99[v101[3]];v306=(1459 -(986 + 472)) + 0 ;end end end end end elseif ((v102==(2 + 12)) or ((2292 -(600 + 791))==(4573 -2407))) then local v170=1151 -(99 + 1052) ;local v171;local v172;while true do if (((5046 -(349 + 94))>1369) and ((0 + 0)==v170)) then v171=0 + 0 + 0 ;v172=nil;v170=1346 -(190 + 1155) ;end if (((10035 -7635)>=(9746 -7682)) and (v170==((2827 -(1059 + 869)) -((2945 -2208) + (1442 -(190 + 1091)))))) then while true do if ((2968<4691) and (v171==(221 -(89 + 132)))) then v172=v101[258 -(120 + 136) ];v99[v172]=v99[v172](v14(v99,v172 + (232 -(157 + 74)) ,v78));break;end end break;end end else local v173=0;local v174;local v175;local v176;local v177;local v178;while true do if (((12902 -8494)>(876 -(6 + 7))) and (v173==(2 -1))) then v176=nil;v177=nil;v173=1 + 1 ;end if (((6026 -(548 + 966))>=(443 + (1493 -(100 + 413)))) and (v173==(809 -(22 + 387 + 398)))) then v178=nil;while true do if ((1202>(2152 -(683 + 533))) and ((615 -(496 + 117))==v174)) then while true do if (((3349 -(168 + 624))>=(1112 -(150 + 248 + 185))) and (v175==(0 + 0 + 0))) then local v409=0 -(0 -0) ;local v410;while true do if (((4645 -(1262 + 723))>7) and (v409==0)) then v410=1727 -(23 + 1704) ;while true do if (((365 + 257)>(391 -139)) and (v410==(0 + 0))) then v176=v101[(6 -2) -2 ];v177=v99[v176];v410=2 -1 ;end if ((v410==1) or ((2603 -1629)==(4987 -(374 + 538)))) then v175=(1 + 1) -1 ;break;end end break;end end end if ((v175==(3 -2)) or ((3549 + 10)>(11535 -6868))) then v178=v99[v176 + (879 -(550 + 327)) + 0 ];if (((2465 -1572)>=(234 + 175)) and (v178>((0 -0) + 0))) then if (((7237 -2458)>=(623 + 244)) and (v177>v99[v176 + (1 -0) ])) then v77=v101[95 -(76 + 16) ];else v99[v176 + 3 ]=v177;end elseif ((v177<v99[v176 + 1 + 0 ]) or ((4324 -((1365 -552) + 412))<982)) then v77=v101[5 -2 ];else v99[v176 + (817 -(743 + 71)) ]=v177;end break;end end break;end if ((v174==(1865 -(333 + 1531))) or ((1665 -(75 + 725 + 811))>(6426 -4350))) then v177=nil;v178=nil;v174=893 -(349 + 542) ;end if ((v174==(0 -0)) or ((1314 + 1417)<(416 -(90 + 5)))) then local v352=0;while true do if (((780 -267)==(668 -155)) and ((0 -0)==v352)) then v175=0 -(0 + 0) ;v176=nil;v352=1 + 0 ;end if (((2601 -2066)<=(3797 -2803)) and (v352==1)) then v174=1 + 0 ;break;end end end end break;end if (((3998 -(906 + 43))<(7804 -3794)) and (v173==(119 -(103 + 16)))) then v174=0 + 0 ;v175=nil;v173=412 -(173 + 238) ;end end end elseif ((v102<=(113 -90)) or ((1165 + 661)<(2108 -1643))) then if ((v102<=(28 -9)) or ((4333 -(568 + 33))<=1836)) then if ((v102<=17) or ((7858 -4324)==(495 + (676 -(179 + 350))))) then if (((152 + 336)==(159 + 329)) and (v102>(2 + 0 + 14))) then local v179=0 -(933 -(281 + 652)) ;local v180;local v181;while true do if ((v179==(0 + 0)) or ((6101 -2710)>=(3581 + 887))) then v180=1740 -(750 + 990) ;v181=nil;v179=16 -(13 + 2) ;end if (((35 + (404 -122))==((3645 -2910) -418)) and (v179==(1 + 0))) then while true do if ((v180==(0 -0)) or ((2517 + 2145)<(7469 -(451 + 4014)))) then v181=v101[6 -4 ];v99[v181]=v99[v181](v99[v181 + 1 + (0 -0) ]);break;end end break;end end else v99[v101[(3269 -1510) -(505 + 1252) ]]= #v99[v101[12 -9 ]];end elseif (((1590 -(15 + 1 + 3))<=(4646 -(369 + 509))) and (v102==(1 + 17))) then local v183=0 -0 ;local v184;local v185;local v186;local v187;local v188;while true do if (((1982 -(23 + 124))<(5498 -(128 + 529))) and (v183==1)) then v186=nil;v187=nil;v183=6 -4 ;end if ((116<(3533 -1388)) and ((0 -0)==v183)) then v184=0;v185=nil;v183=933 -((2599 -(1764 + 128)) + 225) ;end if ((((342 -(236 + 65)) + 318)<=4014) and (v183==2)) then v188=nil;while true do if ((v184==(2 -0)) or (719>4960)) then for v387=v185,v78 do local v388=0;local v389;while true do if ((v388==0) or ((3210 -(168 + 591))<458)) then v389=0 + 0 ;while true do if (((584 + 4204)>3410) and (v389==(1826 -(311 + 1515)))) then v188=v188 + 1 + 0 ;v99[v387]=v186[v188];break;end end break;end end end break;end if ((v184==(0 -(0 + 0))) or ((4558 -799)==3292)) then v185=v101[2];v186,v187=v96(v99[v185](v14(v99,v185 + 1 + 0 ,v78)));v184=942 -(661 + 280) ;end if ((v184==(2 -1)) or (1603>(6350 -(84 + 1739)))) then v78=(v187 + v185) -(1 + (1412 -(322 + 1090))) ;v188=0 + 0 ;v184=2;end end break;end end else for v278=v101[2],v101[2 + 1 + 0 ] do v99[v278]=nil;end end elseif ((v102<=21) or (4855<=(2571 -(697 + 249)))) then if (((4257 -(164 + 700))==(5155 -(254 + (1826 -(70 + 248))))) and (v102==20)) then local v189=1029 -(977 + 52) ;local v190;local v191;local v192;while true do if ((v189==0) or ((10837 -7530)<(867 -620))) then v190=(1949 -(1434 + 515)) -0 ;v191=nil;v189=1 + 0 ;end if (((1 + 0)==v189) or ((2543 + 39)==(168 + 1934))) then v192=nil;while true do if (((2490 -1854)<=(5664 -(1126 + 119 + 678))) and (v190==1)) then while true do if ((v191==0) or (716>(7348 -4500))) then v192=v101[6 -4 ];v99[v192](v14(v99,v192 + 1 ,v101[2 + 1 ]));break;end end break;end if ((v190==(858 -(381 + 477))) or ((11776 -7506)<=1904)) then local v356=0 -0 ;while true do if (((0 + 0)==v356) or (3274>(16044 -12068))) then v191=1854 -(796 + 1058) ;v192=nil;v356=1;end if (((6103 -3516)>=(1473 -535)) and (v356==(1582 -(1451 + 130)))) then v190=1 + 0 ;break;end end end end break;end end else v99[v101[3 -(1 + 0) ]]=v99[v101[6 -3 ]] * v101[12 -8 ] ;end elseif (((570 + 284)>(2178 -(562 + 1283))) and (v102>(403 -(369 + 12)))) then do return;end else v99[v101[(7 -5) -0 ]]=v99[v101[3]]/v99[v101[2 + 2 ]] ;end elseif (((5217 -3626)>=(777 -317)) and (v102<=(25 + 2))) then if ((v102<=(51 -26)) or ((6257 -(613 + (3165 -(80 + 1722))))==3779)) then if ((v102==((3843 -2600) -(934 + 285))) or (3650<(1477 -851))) then local v195=0 + 0 ;local v196;local v197;while true do if (((1608 -(1586 + (1388 -(944 + 422))))==v195) or ((5089 -2504)>=(14652 -(12452 -(1156 + 563))))) then v196=0 + 0 ;v197=nil;v195=(377 + 124) -(237 + 263) ;end if ((((8070 -(1009 + 849)) -2598)>(8724 -6343)) and (v195==(1 + 0))) then while true do if (((14 + 216 + 735)>(558 -176)) and (v196==0)) then v197=v101[(1748 -(529 + 215)) -(529 + 473) ];do return v14(v99,v197,v197 + v101[1 + (6 -4) ] );end break;end end break;end end else local v198=0 + 0 ;local v199;local v200;local v201;while true do if ((4772>=(365 + 838 + 2302)) and (v198==((1673 -(117 + 1555)) + 0))) then v201={};v200=v11({},{__index=function(v307,v308)local v328=0;local v329;while true do if (((675 -(491 + 184))==v328) or ((10685 -8165)>((2559 -1044) + 2428))) then local v390=0 + 0 ;while true do if ((v390==(0 -0)) or (((2996 + 3002) -(600 + 727))<(5372 -(509 + 1250)))) then v329=v201[v308];return v329[890 -(593 + 296) ][v329[2]];end end end end end,__newindex=function(v307,v308,v309)local v330=0 -0 ;local v331;while true do if (((1502 -(240 + 603 + 659))==v330) or (830>=(2549 -(2386 -(778 + 122))))) then v331=v201[v308];v331[(1 + 2) -2 ][v331[2 + (1025 -(507 + 518)) ]]=v309;break;end end end});v198=2 + 0 ;end if (((4953 -(1288 + 53))>(254 -(73 + (350 -(180 + 37))))) and (((1012 -(770 + 235)) -5)==v198)) then for v332=1,v101[11 -7 ] do local v333=(0 -0) + 0 ;local v334;while true do if ((v333==(1 + 0)) or (1967>(5933 -3693))) then if ((v334[1]==(21 + 19)) or ((7347 -5318)>(6234 -(521 + 1283)))) then v201[v332-(1912 -(563 + 1348)) ]={v99,v334[1269 -((2441 -(798 + 939)) + 562) ]};else v201[v332-(1 + 0) ]={v41,v334[1449 -(1077 + 369) ]};end v98[ #v98 + 1 ]=v201;break;end if ((v333==(0 -(0 -0))) or ((1660 -(100 + 202))>=(4356 -(2 + 4 + 12)))) then local v394=892 -(205 + 173 + (1226 -(706 + 6))) ;while true do if ((1662<=(14697 -10488)) and (v394==0)) then v77=v77 + (636 -(136 + 499)) ;v334=v93[v77];v394=1676 -(1303 + 372) ;end if ((v394==(1 + 0)) or ((2671 -(719 + (1594 -1170)))==3373)) then v333=2 -1 ;break;end end end end end v99[v101[4 -2 ]]=v39(v199,v200,v42);break;end if ((v198==(0 -0)) or ((5427 -4320)>(2294 + 144))) then v199=v94[v101[241 -(221 + 17) ]];v200=nil;v198=1261 -(127 + 1133) ;end end end elseif ((v102==26) or ((453 -167)==(352 + 834))) then if (((3727 + 1160)>=(8360 -4978)) and  not v99[v101[2 + 0 ]]) then v77=v77 + (71 -(8 + 62)) ;else v77=v101[1576 -(82 + 1491) ];end else v41[v101[4 -1 ]]=v99[v101[2 + 0 ]];end elseif (((3982 -(64 + 104 + 62))>=(7300 -5454)) and (v102<=29)) then if (((1788 -(175 + 42))==(4550 -2979)) and (v102==(129 -101))) then local v204=0;local v205;local v206;local v207;local v208;local v209;while true do if ((((3055 + 1748) -(1138 + 175))<=(3561 + 95)) and (v204==(261 -(172 + 87)))) then local v312=0 + 0 ;while true do if ((v312==0) or (((9960 -(434 + 39)) -6753)<2548)) then for v395=1,v206 do v99[v207 + v395 ]=v208[v395];end v209=v208[630 -(276 + 353) ];v312=(1314 -(589 + 262)) -(93 + 369) ;end if ((v312==(1 -0)) or ((5347 -3418)>(3868 + 342))) then v204=3 -0 ;break;end end end if ((v204==((2 -1) -0)) or ((1300 -(891 + 380))>(2174 -(35 + 708)))) then local v313=0;while true do if ((4902>=(2121 + 2291)) and (v313==(0 + 0))) then v207=v205 + 2 ;v208={v99[v205](v99[v205 + (1 -0) ],v99[v207])};v313=1;end if (((3725 -(3757 -(907 + 578)))==(728 + 725)) and (v313==(3 -(4 -2)))) then v204=2 + 0 ;break;end end end if ((v204==(2 + 1)) or ((4548 -2658)>=((1023 + 3886) -(167 + 78 + 131)))) then if (((4675 -(135 + (2975 -2071)))>(6540 -3590)) and v209) then local v338=0 + 0 ;local v339;local v340;while true do if ((v338==1) or ((4388 -(92 + 3 + 414))==(4781 + 7))) then while true do if ((v339==(742 -(658 + 84))) or (4234<(4108 -(325 + 303)))) then v340=0 + 0 ;while true do if ((v340==((797 -(711 + 86)) -0)) or (1342>=(13333 -10510))) then v99[v207]=v209;v77=v101[6 -3 ];break;end end break;end end break;end if ((v338==(580 -(251 + 329))) or ((1268 + 2486)==1812)) then v339=67 -(55 + 12) ;v340=nil;v338=268 -(164 + 9 + 94) ;end end else v77=v77 + (249 -(130 + 118)) ;end break;end if ((v204==(1452 -(1136 + 316))) or ((5203 -1248)>=(6377 -(1304 + 531)))) then local v314=1268 -(1194 + 74) ;while true do if (((1283 -379)<(6105 -(285 + 850))) and (v314==(0 + 0))) then v205=v101[1687 -(63 + 1622) ];v206=v101[4 + 0 ];v314=1 + 0 ;end if (((1793 + 1700)<=(1292 + (4558 -(827 + 844)))) and (v314==(3 -2))) then v204=1661 -(959 + 701) ;break;end end end end else v99[v101[1 + 1 ]]=v101[1209 -(979 + 227) ] + v99[v101[4]] ;end elseif (((3475 -1100)<(3891 + 624)) and (v102<=(1 + 29))) then do return v99[v101[2]];end elseif (((693 + 339)>=(256 + 3)) and (v102==31)) then v99[v101[468 -(169 + 297) ]]=v99[v101[9 -6 ]]%v99[v101[1 + 3 ]] ;else local v283=802 -(605 + 197) ;local v284;local v285;local v286;while true do if ((v283==0) or ((12600 -7778)<=(2945 -(1042 + 181)))) then v284=0;v285=nil;v283=1 + (0 -0) ;end if ((v283==(3 -2)) or ((652 + 646)>=(6318 -3923))) then v286=nil;while true do if ((v284==(0 -0)) or (2441==2718)) then local v404=0 + 0 ;while true do if ((v404==(0 + 0)) or ((2381 + 104)<=((6356 -4950) -(596 + 137)))) then v285=v101[1 + 1 ];v286={};v404=(1 -0) + 0 ;end if ((v404==1) or (4780<(19037 -15225))) then v284=1018 -(415 + 602) ;break;end end end if (((1402 -(200 + 1201))==v284) or ((10393 -6798)<=2195)) then for v415=1, #v98 do local v416=0 -0 ;local v417;local v418;while true do if (((3570 -1195)==2375) and (v416==(1 -0))) then while true do if (((2542 -(11 + 202))>=1890) and ((0 + 0)==v417)) then v418=v98[v415];for v477=1435 -(319 + 1116) , #v418 do local v478=(299 + 470) -(179 + 590) ;local v479;local v480;local v481;local v482;while true do if ((4911>2710) and (v478==(0 + 0))) then v479=0 + 0 ;v480=nil;v478=1664 -(879 + 784) ;end if ((82<=(2935 + 1033)) and (v478==(204 -(51 + 152)))) then v481=nil;v482=nil;v478=4 -2 ;end if ((v478==(1718 -(1175 + 541))) or ((3656 + 1123)<=(722 + 239))) then while true do if (((1797 -(303 + 157))>(2239 -(627 + 294))) and (v479==((65 + 48) -(40 + 73)))) then local v501=0;while true do if (((1098 -(271 + 35))>=727) and (v501==0)) then v480=v418[v477];v481=v480[2 -1 ];v501=1625 -(367 + 1257) ;end if (((537 -(958 -717))<341) and (1==v501)) then v479=1 -0 ;break;end end end if (((3054 -1057)>=(2259 -(1524 + 455))) and (v479==(3 -2))) then v482=v480[1 + 1 ];if (((v481==v99) and (v482>=v285)) or (4995<=(3207 -(457 + 1027)))) then local v505=0 -0 ;local v506;local v507;while true do if ((v505==(0 + (1699 -(1678 + 21)))) or ((944 + 10)==(1502 + 1263))) then v506=0 -0 ;v507=nil;v505=230 -(75 + 154) ;end if (((4904 -(4102 -1926))>(213 -(6 + 154))) and (v505==(1203 -(122 + 703 + 294 + 83)))) then while true do if ((v506==0) or (((940 -(473 + 230)) + 334)<(20 -9))) then v507=0 + 0 ;while true do if (((4048 + 136)<=(10374 -(2995 + 2415))) and ((297 -(192 + 105))==v507)) then v286[v482]=v481[v482];v480[1154 -(1016 + 137) ]=v286;break;end end break;end end break;end end end break;end end break;end end end break;end end break;end if ((v416==(0 + 0)) or ((3276 -(17 + 724))<=(230 + 2250))) then v417=422 -(285 + 137) ;v418=nil;v416=1381 -(382 + (3781 -2783)) ;end end end break;end end break;end end end elseif ((v102<=49) or (261>(2156 + 517))) then if ((v102<=40) or ((2266 -(408 + 178))<(733 -261))) then if ((v102<=(9 + 27)) or ((2210 + 1444)<((402 + 1965) -(175 + 1527)))) then if (((12653 -9230)>=(3362 -1087)) and (v102<=(390 -(114 + 242)))) then if (((7870 -4973)==(157 + 2740)) and (v102==(155 -122))) then local v211=0 + 0 ;local v212;while true do if ((v211==((0 + 0) -(0 -0))) or (1214>1275)) then v212=v101[2 + 0 ];v99[v212](v99[v212 + (1481 -(1262 + 2 + 216)) ]);break;end end else v99[v101[2 -0 ]][v101[3]]=v99[v101[(16 -4) -(1662 -(606 + 1048)) ]];end elseif (((163 + (940 -(40 + 581)))==(806 -324)) and (v102>35)) then if (v99[v101[2 -0 ]] or ((223 + 3367)<=1129)) then v77=v77 + 1 ;else v77=v101[2 + 1 ];end else local v215=13 -(7 + (1217 -(432 + 779))) ;local v216;local v217;local v218;local v219;while true do if ((709<(5625 -2235)) and (2==v215)) then while true do if (((1088 + 2091)<=(2724 + 649)) and ((212 -(60 + 152))==v216)) then v217=v101[2];v218=v99[v217 + (1509 -(1261 + 246)) ];v216=1 + 0 ;end if ((v216==(1 + 1)) or ((4749 -(424 + 382))<=2286)) then if ((899==(1392 -(79 + 414))) and (v218>(0 + 0 + 0))) then if ((v219<=v99[v217 + 1 + (0 -0) ]) or ((10788 -8228)>=3299)) then local v432=0;while true do if (((720 -(14 + 79))<=(1944 -(299 + 148))) and (v432==(0 -0))) then v77=v101[9 -6 ];v99[v217 + 1 + 2 ]=v219;break;end end end elseif ((v219>=v99[v217 + (952 -(576 + 375)) + 0 ]) or (((102 -51) + 586)>(1391 + 371))) then local v433=(1508 -(1267 + 241)) + 0 ;while true do if ((v433==(0 + 0)) or ((2609 -(84 + 64 + 1505))>=(2774 + 2092))) then v77=v101[3];v99[v217 + ((2340 -1649) -(379 + 309)) ]=v219;break;end end end break;end if ((v216==(1 + 0)) or ((2949 + 1145)<=(4965 -(531 + 469)))) then v219=v99[v217] + v218 ;v99[v217]=v219;v216=1614 -(243 + 1369) ;end end break;end if ((v215==(0 -0)) or ((1833 + 1730)==(3750 + 808))) then v216=1878 -(1833 + 45) ;v217=nil;v215=1;end if (((7814 -4857)<(9622 -6067)) and (v215==1)) then v218=nil;v219=nil;v215=4 -2 ;end end end elseif ((v102<=((20 + 49) -31)) or ((780 + 1378)>=(6368 -3362))) then if ((v102==(663 -(259 + 367))) or ((935 -(576 + 215))==3327)) then local v220=13 -(8 + 5) ;local v221;local v222;while true do if ((v220==(0 -0)) or ((3111 -(1380 + 111))==(9756 -5173))) then v221=0 + 0 ;v222=nil;v220=1;end if ((1913==1913) and (v220==1)) then while true do if ((v221==(0 -(0 -0))) or ((4262 -(586 + 924))<=(1415 -426))) then v222=v101[1652 -(1126 + 524) ];v99[v222](v14(v99,v222 + 1 + 0 + 0 ,v78));break;end end break;end end else v99[v101[(11 -7) -2 ]]={};end elseif ((v102==(120 -81)) or (2104<(1384 -(333 + 102)))) then v99[v101[2 + 0 ]]=v39(v94[v101[1647 -(1535 + 109) ]],nil,v42);else v99[v101[4 -2 ]]=v99[v101[2 + 1 ]];end elseif ((v102<=(808 -(477 + 236 + 51))) or (685<(1708 -(1013 + 15)))) then if ((v102<=(176 -134)) or ((1073 -412)>=2585)) then if (((15 -(5 + 0))<4760) and (v102>41)) then if ((v99[v101[1900 -(1604 + 294) ]]==v99[v101[(23 -15) -4 ]]) or ((267 + 3359)==4882)) then v77=v77 + (2 -1) ;else v77=v101[(1829 -(283 + 1544)) + 1 ];end else v99[v101[2 + (0 -0) ]]=v99[v101[1763 -(1066 + 585 + 109) ]][v99[v101[4 + 0 ]]];end elseif ((v102==(1068 -(685 + 340))) or ((3159 -2209)>(1802 + 565))) then v99[v101[2 + 0 ]]= -v99[v101[(2400 -(1357 + 211)) -(714 + 115) ]];else v99[v101[2 + 0 ]][v101[881 -(669 + 209) ]]=v101[4];end elseif (((2557 + 34)<(5426 -(1264 + 116))) and (v102<=(166 -120))) then if (((6664 -(430 + (4411 -3104)))>(5941 -(259 + 834))) and (v102>(115 -70))) then v77=v101[8 -5 ];else local v233=0 -0 ;local v234;local v235;local v236;local v237;local v238;local v239;while true do if (((555 -(132 + 95))==328) and (v233==(0 + 0))) then v234=0;v235=nil;v233=1 + (0 -0) ;end if ((v233==(3 -2)) or (471>(3374 -1282))) then v236=nil;v237=nil;v233=1 + 1 ;end if ((v233==3) or (2534<=(379 + 467))) then while true do if (((2613 + 1332)>(4164 -(410 + 671))) and (v234==(1323 -(1072 + 249)))) then v239=nil;while true do if ((2558<(2709 -(59 + 76))) and (v235==0)) then local v419=402 -(350 + 52) ;local v420;while true do if ((3776==(3471 + 305)) and (v419==(12 -((670 -(258 + 403)) + 3)))) then v420=0 -0 ;while true do if (((236 + 2654)>(406 + 892)) and (v420==(914 -(622 + 292)))) then local v473=651 -(364 + 287) ;while true do if ((v473==(0 -0)) or ((1654 -936)==(3685 -((2857 -(942 + 195)) + 115)))) then v236=v101[2];v237,v238=v96(v99[v236](v99[v236 + (594 -(355 + 238)) ]));v473=1290 -(1116 + 173) ;end if ((v473==(1913 -(149 + 1763))) or ((517 + 933)>(3753 + 205))) then v420=1 + 0 ;break;end end end if (((5076 -(655 + 262))>=3572) and (v420==1)) then v235=1 + 0 ;break;end end break;end end end if ((v235==(2 -0)) or ((2371 -581)>=(996 + 1487))) then for v434=v236,v78 do local v435=0 -0 ;local v436;while true do if ((4218>3019) and (v435==(0 + 0))) then v436=0 + 0 ;while true do if ((0==v436) or ((3217 + 1750)==(2066 -(23 + 84)))) then v239=v239 + (321 -(117 + 203)) ;v99[v434]=v237[v239];break;end end break;end end end break;end if ((v235==1) or ((3043 -(300 + 1614))>=3595)) then local v421=401 -(139 + 262) ;local v422;while true do if ((2512<(3987 -(1410 + 1))) and (v421==((0 -0) + 0))) then v422=0 -0 ;while true do if (((0 + 0)==v422) or ((257 + 811 + 2063)>4201)) then local v474=0;while true do if ((v474==0) or ((7165 -3671)<=(4344 -2502))) then v78=(v238 + v236) -(737 -(320 + 416)) ;v239=0;v474=790 -(103 + 686) ;end if (((8814 -4014)>(377 + 1546)) and (v474==1)) then v422=1;break;end end end if (((1627 + 851)>(1875 -(132 + 939))) and (v422==1)) then v235=4 -(5 -3) ;break;end end break;end end end end break;end if (((3190 + (2316 -1101))>(866 -535)) and (v234==1)) then local v365=0;while true do if (((14831 -(10887 -(422 + 603)))>=(1549 -(339 + 211))) and ((1803 -(859 + 943))==v365)) then v234=3 -1 ;break;end if (((75 + 350)==(360 + 65)) and (v365==((219 -(38 + 181)) + 0))) then v237=nil;v238=nil;v365=1 + 0 ;end end end if (((208 + 215)>(1897 -(1634 + (708 -(147 + 340))))) and (v234==(0 + 0))) then local v366=1954 -(185 + 1769) ;while true do if ((2754>(455 + 309)) and (v366==((497 -(416 + 81)) -0))) then v235=364 -(275 + 89) ;v236=nil;v366=1947 -(1465 + 481) ;end if (((5134 -(1825 + 41))>=(3373 -1519)) and (v366==(1825 -(693 + 1131)))) then v234=1 + 0 ;break;end end end end break;end if ((v233==(1183 -(1049 + 132))) or ((96 + 955)>=(38 + 1118))) then v238=nil;v239=nil;v233=3 + 0 ;end end end elseif ((v102<=(2 + 45)) or ((1757 -(185 + 9 + 209))>(3683 -(264 + 394)))) then if (((46 + 1)<(2416 -1066)) and (v101[2]==v99[v101[4 + 0 ]])) then v77=v77 + (2 -1) ;else v77=v101[548 -(53 + 492) ];end elseif ((v102>48) or ((268 + 527)==(13372 -8833))) then v99[v101[2]]=v101[1 + 2 ];else local v292=0 + 0 ;local v293;local v294;local v295;local v296;local v297;while true do if (((5000 -(124 + 620))>=(10874 -(14920 -8290))) and (v292==(1 + 1))) then v297=nil;while true do if (((2435 -1345)>538) and (2==v293)) then for v423=v294,v78 do local v424=0 -0 ;local v425;local v426;while true do if ((v424==0) or (978<=((6131 -3390) -(730 + 1201)))) then v425=0;v426=nil;v424=2 -1 ;end if ((v424==1) or ((1240 + 685)>=(4055 + 157))) then while true do if ((v425==0) or (403>=(1347 -(176 + 566)))) then v426=0 -0 ;while true do if ((1240<(5824 -(1277 + 106))) and (v426==0)) then v297=v297 + 1 ;v99[v423]=v295[v297];break;end end break;end end break;end end end break;end if (((166 + 634)>(1253 -(381 + 407))) and (v293==(1218 -(152 + 1066)))) then v294=v101[3 -1 ];v295,v296=v96(v99[v294]());v293=2 -1 ;end if ((((3161 -(242 + 196)) -(366 + 614))>331) and ((1 + 0 + 0)==v293)) then v78=(v296 + v294) -1 ;v297=0;v293=2;end end break;end if ((v292==0) or ((12030 -7582)==(771 + 473))) then v293=850 -(578 + 272) ;v294=nil;v292=2 -(4 -3) ;end if ((v292==(1 -0)) or ((5960 -4436)>((5065 -(425 + 597)) -(141 + (1982 -(1765 + 132)))))) then v295=nil;v296=nil;v292=(275 -(135 + 138)) + 0 ;end end end elseif ((3733>(558 + 87)) and (v102<=(155 -98))) then if ((v102<=(216 -(148 + 15))) or ((2586 + 1312)>=(12000 -7984))) then if ((4184>(4585 -(162 + 1366))) and (v102<=(90 -39))) then if ((v102==50) or ((1370 + 45 + 1799)>(3429 + 633))) then v99[v101[2 + 0 ]]=v99[v101[1360 -(222 + 1135) ]]/v101[1693 -(941 + 748) ] ;else v99[v101[1 + 1 ]]=v99[v101[1673 -(1013 + 657) ]]%v101[2 + 0 + 2 ] ;end elseif ((v102>((1963 -(1216 + 455)) -((560 -(4 + 389)) + 73))) or ((7289 -4916)>(2458 + 303))) then local v242=0 + 0 ;local v243;local v244;local v245;while true do if ((v242==((1 -0) + 0)) or ((7034 -4004)>=(1540 + 2762))) then v245=nil;while true do if ((v243==0) or ((11724 -7001)==(864 + 290))) then v244=v101[1 + 1 ];v245=v99[v244];v243=1 + 0 ;end if (((730 + (3976 -(7 + 252)))>(1988 -(3435 -(1071 + 813)))) and (v243==(1 + 0))) then for v398=v244 + (638 -(14 + 623)) ,v101[1387 -(211 + 1173) ] do v8(v245,v99[v398]);end break;end end break;end if ((v242==(0 + 0)) or ((1638 -(164 + 117))>(2369 + 178))) then v243=0 -0 ;v244=nil;v242=1;end end else v99[v101[8 -6 ]]=v99[v101[14 -11 ]] -v99[v101[4]] ;end elseif (((2123 + 611 + 301)<=3860) and (v102<=(43 + 12))) then if (((1374 + 574)>=(1608 -(403 + 586))) and (v102==((1746 -(14 + 115)) -(423 + (3272 -2132))))) then v99[v101[1230 -(1057 + 171) ]]=v41[v101[3]];else v99[v101[1 + 1 ]]=v42[v101[(653 -(331 + 144)) -(128 + 43 + 4) ]];end elseif ((v102==(77 -21)) or ((456 + 1899)>=(13597 -10358))) then local v251=0;local v252;local v253;local v254;local v255;local v256;while true do if (((4024 -(1676 + 132))>(892 -(276 + 159))) and ((1 + 0)==v251)) then v254=nil;v255=nil;v251=1097 -(74 + 1021) ;end if ((v251==(3 -(1 + 0))) or ((110 + 3206)>=4278)) then v256=nil;while true do if ((v252==(6 -4)) or (2742>=2873)) then while true do if ((v253==(1 + 0)) or ((3994 -(366 + 119))>4451)) then v256=0 -0 ;for v437=v254,v101[2 + (520 -(205 + 313)) ] do local v438=446 -((1697 -(1057 + 369)) + 175) ;local v439;while true do if (((3831 -(697 + 4))>(1105 + 788)) and (v438==((2356 -(1103 + 510)) -(485 + 258)))) then v439=0 -0 ;while true do if ((v439==(0 -0)) or ((2560 -(1224 + 8))==(138 + 248))) then v256=v256 + (1 -0) ;v99[v437]=v255[v256];break;end end break;end end end break;end if ((v253==(0 + 0)) or ((11421 -6839)<(805 + 2035))) then local v427=0 + 0 + 0 ;local v428;while true do if ((v427==0) or ((4613 -(264 + 22))<=140)) then v428=0 -0 ;while true do if ((v428==(0 -0)) or ((5246 -(940 + 52))<=(8298 -5108))) then local v475=1513 -(265 + 1248) ;while true do if ((v475==(1595 -(430 + 1165))) or ((1992 -(61 + (1179 -(26 + 20))))>=(16634 -12383))) then v254=v101[2];v255={v99[v254](v14(v99,v254 + 1 + 0 ,v78))};v475=(445 -290) -(100 + 54) ;end if ((4385>(11226 -7740)) and (v475==((114 + 73) -(120 + 66)))) then v428=1 -0 ;break;end end end if (((48 + 861)<=1824) and (v428==((11 -7) -3))) then v253=944 -(762 + 181) ;break;end end break;end end end end break;end if ((v252==((0 + 0) -0)) or (251>=2648)) then local v369=0 -0 ;while true do if ((((2218 -(1583 + 356)) -(26 + 253))==v369) or ((4321 -(254 + 933))>3374)) then v253=(855 -(58 + 120)) -(290 + 173 + 214) ;v254=nil;v369=1 + 0 ;end if ((v369==(3 -2)) or ((1560 -(1168 -(14 + 529)))<(220 + 446))) then v252=1;break;end end end if (((3286 + 586)>(1934 -(86 + 8))) and ((1 -0)==v252)) then v255=nil;v256=nil;v252=795 -(24 + 769) ;end end break;end if ((3101>=(1390 + 1104)) and (v251==(483 -(301 + 182)))) then v252=(0 + 0) -0 ;v253=nil;v251=2 -1 ;end end else local v257=0 + 0 ;local v258;local v259;while true do if ((v257==(596 -(309 + 287))) or (((10412 -4168) -(1428 + 397))>(2852 + 1881))) then v258=v101[5 -2 ];v259=v99[v258];v257=1 + 0 ;end if ((v257==(1 -0)) or (3901<(1545 -(78 + 4)))) then for v335=v258 + 1 + 0 + 0 ,v101[15 -11 ] do v259=v259   .. v99[v335] ;end v99[v101[181 -(105 + 74) ]]=v259;break;end end end elseif ((v102<=61) or ((14348 -11068)<=(2049 + 809))) then if ((1894<=((5528 -(27 + 44)) -(3098 -(270 + 412)))) and (v102<=(166 -107))) then if ((v102>(20 + 38)) or ((11798 -7939)<(2158 -1371))) then local v260=0 -0 ;local v261;while true do if (((225 + 4)<=(5022 -(11 + 300))) and ((1263 -(131 + 1132))==v260)) then v261=v101[(339 + 41) -(20 + 358) ];v99[v261]=v99[v261]();break;end end else local v262=0 + 0 ;local v263;local v264;local v265;local v266;local v267;while true do if (((575 -(270 + 304))==v262) or ((7813 -4075)==(3333 -(247 + 1139)))) then v265=nil;v266=nil;v262=2 + 0 ;end if ((0==v262) or ((1331 + 1227)<=600)) then v263=0 -0 ;v264=nil;v262=707 -(116 + 590) ;end if ((v262==(1 + (2 -1))) or ((729 -(390 + (600 -298)))>(10877 -7009))) then v267=nil;while true do if (((5164 -(948 + 118))>(4994 -1964)) and (v263==(0 -(1399 -(334 + 1065))))) then v264=0 -(0 -0) ;v265=nil;v263=1;end if (((1086 + 74)>=(48 + 181)) and (1==v263)) then local v370=(2458 -(24 + 454)) -(593 + (3539 -2152)) ;while true do if ((2872<(5670 -(1520 + 62))) and (v370==(0 -(0 -0)))) then v266=nil;v267=nil;v370=(3 + 0) -2 ;end if (((1469 -614)<=(7097 -4243)) and (v370==(1 + 0))) then v263=1 + (309 -(201 + 107)) ;break;end end end if ((v263==(1 + 1)) or ((2550 + 1975)<=(2872 + (2043 -712)))) then while true do if ((v264==(0 + (0 -0))) or ((2500 -(154 + 1472))>=(4709 -2518))) then local v429=0;while true do if ((4426>=(3165 -(59 + 155))) and (v429==0)) then local v450=0;while true do if ((v450==(0 + 0)) or ((76 + 184)>=(294 + 2154))) then v265=v101[(2046 -(549 + 994)) -(251 + 160 + 90) ];v266={v99[v265](v99[v265 + 1 + 0 ])};v450=1 -0 ;end if ((v450==(1 -0)) or ((1172 -(398 + 350))>=(4736 -1715))) then v429=1127 -(265 + 861) ;break;end end end if (((3761 -((1244 -269) + 611))>1991) and (v429==(3 -2))) then v264=1 + 0 ;break;end end end if ((v264==(1 + 0)) or ((5970 -(670 + 1058))<2199)) then v267=0 + 0 + 0 ;for v440=v265,v101[1662 -(1236 + 422) ] do local v441=0 + 0 ;while true do if ((v441==0) or ((5369 -(554 + 137))<=(636 + 5))) then v267=v267 + ((537 + 1084) -(1544 + 76)) ;v99[v440]=v266[v267];break;end end end break;end end break;end end break;end end end elseif (((1657 + 998)<(14396 -9497)) and (v102>(22 + (1539 -(762 + 739))))) then v99[v101[2]]= not v99[v101[1 + 1 + 1 ]];else local v269=1481 -(885 + 596) ;local v270;local v271;local v272;local v273;while true do if (((3654 -(143 + 1457))<=(14138 -9690)) and (v269==(1 + 0))) then local v321=0;while true do if (((6950 -4111)<4714) and (v321==((692 -(367 + 325)) + (0 -0)))) then v272=v101[11 -7 ];v273=272 -(221 + 17 + 34) ;v321=1 + 0 ;end if (((3087 -2138)<(4875 -2088)) and (v321==((1 -0) + (0 -0)))) then v269=1651 -(129 + 1520) ;break;end end end if ((v269==0) or ((558 + 2108)<=(4158 -1522))) then local v322=828 -(668 + 160) ;while true do if (((3507 -(280 + 131))<(5036 -(258 + 658))) and ((0 + 0)==v322)) then v270=v101[2 + 0 ];v271={v99[v270]()};v322=3 -2 ;end if ((1==v322) or ((1506 + 2563)==(2955 -(295 + 216)))) then v269=(1871 -(146 + 1434)) -(22 + 268) ;break;end end end if (((718 + 324)<=(2787 + 1170)) and ((1 + 1)==v269)) then for v336=v270,v272 do local v337=1986 -(840 + 1146) ;while true do if ((v337==((0 -0) -0)) or ((1644 + 95)<=1680)) then v273=v273 + (1 -0) ;v99[v336]=v271[v273];break;end end end break;end end end elseif (((2329 -537)<=(13785 -8852)) and (v102<=(2034 -(1198 + 773)))) then if (((5195 -1599)>((10336 -(88 + 786)) -6590)) and (v102>62)) then do return v99[v101[2]]();end else local v274=0 + 0 ;local v275;local v276;while true do if (((1067 + 662)>(231 -123)) and (v274==(1752 -(1528 + 224)))) then local v323=1325 -(857 + 468) ;while true do if (((0 -0)==v323) or ((1160 + 3827)<=(986 -704))) then v275=0 -0 ;v276=nil;v323=1;end if ((3521<=(9727 -4921)) and (v323==((1 + 0) -0))) then v274=(2292 -(735 + 16)) -(1235 + 305) ;break;end end end if (((283 + 4182)>=((20385 -12713) -5664)) and (v274==(1 + 0))) then while true do if (((3894 -(331 + 752))<=(5228 -(209 + 948))) and (v275==0)) then v276=v101[1346 -(528 + 3 + 813) ];v99[v276]=v99[v276](v14(v99,v276 + 1 + 0 ,v101[(2980 -(822 + 712)) -(1039 + 404) ]));break;end end break;end end end elseif ((v102<=(43 + 21)) or ((12693 -7870)<(819 + 1309))) then v99[v101[4 -(2 + 0) ]]=v99[v101[3]] -v101[4] ;elseif (((626 + 763)<=(4141 -(126 + 132 + 85))) and (v102>(590 -(421 + 104)))) then v99[v101[1198 -(798 + (1061 -663)) ]]=v99[v101[3]][v101[1063 -(520 + 539) ]];else local v300=0;local v301;while true do if ((v300==0) or ((1338 + 968)<131)) then v301=v101[1 + 1 ];do return v14(v99,v301,v78);end break;end end end v77=v77 + (1856 -(1441 + 414)) ;break;end if ((612<=(5574 -(345 + 938))) and (v106==((1166 -(258 + 123)) -(392 + 393)))) then v101=v93[v77];v102=v101[2 -1 ];v106=1 + 0 ;end end break;end end end end;v76=3;end if (v76==0) then v77=1;v78= -1;v76=1;end end end;end;return v39(v38(),{},v18)(...);end if (v27==6) then v38=nil;v38=function()local v51=1922 -(20 + 1902) ;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if ((0 -0)==v51) then local v87=209 -(203 + 6) ;while true do if (v87~=0) then else v52=0 + 0 ;v53=nil;v87=377 -(343 + 33) ;end if ((1 + 0)~=v87) then else v51=1;break;end end end if (v51==(1 + 1)) then local v88=0 + 0 ;while true do if (v88~=1) then else v51=1695 -(1673 + 19) ;break;end if (0==v88) then v56=nil;v57=nil;v88=1 -0 ;end end end if (v51~=1) then else local v89=0 -0 ;while true do if (v89==1) then v51=1 + 1 ;break;end if (v89==0) then v54=nil;v55=nil;v89=1;end end end if (v51==(1 + 2)) then v58=nil;while true do local v90=0 -0 ;while true do if ((0 -0)==v90) then if (v52~=(5 -3)) then else local v113=0 + 0 ;local v114;while true do if (v113==(1535 -(1458 + 77))) then v114=0 + 0 ;while true do local v121=491 -(285 + 206) ;while true do if (v121~=(0 -0)) then else if (v114~=(0 + 0)) then else local v128=0;while true do if ((35 -(15 + 19))==v128) then v114=1;break;end if (0==v128) then for v132=1 + 0 ,v33() do local v133=0;local v134;while true do if (v133~=(989 -(239 + 750))) then else v134=v31();if (v30(v134,2 -1 ,1 -0 )==(242 -(114 + 128))) then local v324=0 -0 ;local v325;local v326;local v327;while true do if (v324~=(422 -(343 + 78))) then else local v375=0 -0 ;local v376;while true do if (v375==0) then v376=0 -0 ;while true do if (v376==(0 -0)) then v327={v32(),v32(),nil,nil};if (v325==(0 -0)) then local v467=0;local v468;local v469;while true do if (v467==0) then local v490=1706 -(429 + 1277) ;while true do if (v490==(1 + 0)) then v467=1 -0 ;break;end if (v490~=(0 -0)) then else v468=0 -0 ;v469=nil;v490=1;end end end if ((4 -3)~=v467) then else while true do if (v468~=0) then else v469=348 -(304 + 44) ;while true do if (v469==0) then v327[1 + 2 ]=v32();v327[4]=v32();break;end end break;end end break;end end elseif (v325==(1 + 0)) then v327[7 -4 ]=v33();elseif (v325==(2 + 0)) then v327[3]=v33() -((3 -1)^(40 -24)) ;elseif (v325~=(1460 -(181 + 1276))) then else local v498=937 -(78 + 859) ;local v499;local v500;while true do if (v498~=(0 + 0)) then else v499=0 + 0 ;v500=nil;v498=104 -(29 + 74) ;end if (v498~=(3 -2)) then else while true do if (v499==(0 -0)) then v500=0 -0 ;while true do if (v500==(60 -(7 + 53))) then v327[2 + 1 ]=v33() -(2^(72 -56)) ;v327[4]=v32();break;end end break;end end break;end end end v376=562 -(154 + 407) ;end if (v376==(1 + 0)) then v324=2;break;end end break;end end end if (v324~=(635 -(547 + 85))) then else if (v30(v326,3 + 0 ,880 -(124 + 753) )~=(1 + 0)) then else v327[249 -(167 + 78) ]=v58[v327[3 + 1 ]];end v53[v132]=v327;break;end if (v324~=2) then else local v378=0 -0 ;while true do if (v378==0) then if (v30(v326,1,1 -0 )~=(2 -1)) then else v327[1146 -(654 + 490) ]=v58[v327[635 -(127 + 506) ]];end if (v30(v326,2,1 + 1 )==(1 -0)) then v327[8 -5 ]=v58[v327[3]];end v378=2 -1 ;end if (v378~=(1 + 0)) then else v324=7 -4 ;break;end end end if (v324==(212 -(101 + 111))) then local v379=0 -0 ;local v380;while true do if (v379~=(256 -(14 + 242))) then else v380=0 + 0 ;while true do if (v380==1) then v324=1 -0 ;break;end if (v380~=0) then else v325=v30(v134,2,630 -(322 + 305) );v326=v30(v134,4,6);v380=1450 -(1003 + 446) ;end end break;end end end end end break;end end end for v135=1,v33() do v54[v135-(2 -1) ]=v38();end v128=166 -(60 + 105) ;end end end if (v114~=(78 -(13 + 64))) then else local v129=0;while true do if (v129~=(1775 -(83 + 1692))) then else for v137=2 -1 ,v33() do v55[v137]=v33();end return v56;end end end break;end end end break;end end end if (v52~=(0 + 0)) then else local v115=0;local v116;while true do if (v115~=0) then else v116=1453 -(1325 + 128) ;while true do if (v116~=(1 + 1)) then else v52=3 -2 ;break;end if ((1 + 0)~=v116) then else v55={};v56={v53,v54,nil,v55};v116=2;end if (v116==0) then local v127=1847 -(172 + 1675) ;while true do if (v127==0) then v53={};v54={};v127=1 + 0 ;end if (v127==(1583 -(1339 + 243))) then v116=429 -(60 + 368) ;break;end end end end break;end end end v90=1 + 0 ;end if (v90~=(1 + 0)) then else if (v52~=(1 -0)) then else local v117=0 -0 ;while true do if ((1 + 0)==v117) then for v122=1,v57 do local v123=510 -(69 + 441) ;local v124;local v125;local v126;while true do if (v123~=(1360 -(991 + 369))) then else v124=0 + 0 ;v125=nil;v123=1 + 0 ;end if (v123~=1) then else v126=nil;while true do if (v124==(0 + 0)) then local v130=0 + 0 ;while true do if (v130==(0 -0)) then v125=v31();v126=nil;v130=184 -(51 + 132) ;end if (v130~=(2 -1)) then else v124=1;break;end end end if ((166 -(27 + 138))==v124) then if (v125==(4 -3)) then v126=v31()~=0 ;elseif (v125==(5 -3)) then v126=v34();elseif (v125==(1717 -(1001 + 713))) then v126=v35();end v58[v122]=v126;break;end end break;end end end v56[6 -3 ]=v31();v117=7 -5 ;end if ((0 + 0)==v117) then v57=v33();v58={};v117=1 + 0 ;end if ((1957 -(1706 + 249))==v117) then v52=1025 -(346 + 677) ;break;end end end break;end end end break;end end end;v39=nil;v27=7;end if (v27==5) then v36=v33;v37=nil;v37=function(...)return {...},v13("#",...);end;v27=6;end if (v27==1) then v30=nil;v30=function(v43,v44,v45)if v45 then local v82=(v43/((1512 -(328 + 1182))^(v44-(1 + 0))))%(((501 -(486 + 13)) + 0)^(((v45-(1 + 0)) -(v44-(2 -1))) + (880 -(614 + (405 -140))))) ;return v82-(v82%(1 + 0 + 0)) ;else local v83=((1524 -(1309 + 212)) -1)^(v44-(2 -1)) ;return (((v43%(v83 + v83))>=v83) and (3 -2)) or ((0 -0) -0) ;end end;v31=nil;v27=2;end if (v27==4) then v34=function()local v59=611 -(342 + 269) ;local v60;local v61;local v62;local v63;local v64;local v65;while true do if (v59==((1441 -(1346 + 94)) + 2)) then if (v64==(0 -0)) then if (v63==(0 -0)) then return v65 * (0 + 0) ;else v64=1;v62=0;end elseif (v64==(3090 -(605 + 438))) then return ((v63==(0 + 0)) and (v65 * ((2 -1)/(170 -(54 + 116))))) or (v65 * NaN) ;end return v9(v65,v64-(385 + 638) ) * (v62 + (v63/((3 -1)^(31 + 21)))) ;end if (v59==(415 -(24 + 391))) then v60=v33();v61=v33();v59=2 -(1076 -(645 + 430)) ;end if (v59==1) then v62=1 -0 ;v63=(v30(v61,1377 -(900 + 476) ,1115 -(366 + 729) ) * (2^(41 -(5 + 4)))) + v60 ;v59=2;end if (v59==(4 -(7 -5))) then v64=v30(v61,102 -81 ,135 -104 );v65=((v30(v61,136 -104 )==(1 -0)) and  -((3 -1) -1)) or (1 -0) ;v59=1 + 2 ;end end end;v35=nil;v35=function(v46)local v66=0 + 0 ;local v67;local v68;while true do if (v66==(0 + 0)) then v67=nil;if  not v46 then v46=v33();if (v46==(0 -0)) then return "";end end v66=965 -(856 + 108) ;end if (v66==2) then v68={};for v91=(3 -2) + 0 , #v67 do v68[v91]=v3(v2(v4(v67,v91,v91)));end v66=10 -7 ;end if (v66==(991 -(626 + 362))) then return v7(v68);end if (1==v66) then v67=v4(v17,v28,(v28 + v46) -(1 + 0) );v28=v28 + v46 ;v66=2;end end end;v27=5;end if (v27==3) then v33=nil;v33=function()local v69,v70,v71,v72=v2(v17,v28,v28 + 3 );v28=v28 + 4 ;return (v72 * (232086 + 16545130)) + (v71 * (227779 -162243)) + (v70 * (449 -193)) + v69 ;end;v34=nil;v27=4;end if (v27==0) then v28=1;v29=nil;v17=v5(v4(v17,5),"..",function(v47)if (v2(v47,2)==79) then local v84=0;while true do if (v84==0) then v29=v1(v4(v47,1,1));return "";end end else local v85=0;local v86;while true do if (v85==0) then v86=v3(v1(v47,16));if v29 then local v107=0;local v108;while true do if (v107==0) then v108=v6(v86,v29);v29=nil;v107=1;end if (v107==1) then return v108;end end else return v86;end break;end end end end);v27=1;end if (v27==2) then v31=function()local v73=v2(v17,v28,v28);v28=v28 + 1 ;return v73;end;v32=nil;v32=function()local v74,v75=v2(v17,v28,v28 + 2 + 0 );v28=v28 + (187 -(54 + 131)) ;return (v75 * 256) + v74 ;end;v27=3;end end end;vv10(),...);break;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==2) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (3==v0) then v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=4;end if (v0==4) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v0=5;end end end


local Success,Error = pcall(function()

	Update1 = "Complete backdoor/Executor redesign"
	Update2 = "New UI And Script Hub"
	Update3 = "Redid Script Execution System"
	ScriptVersion = "3.0A"

	-- Locals

local	UI =  game:GetObjects("rbxassetid://12773071270")[1]
	local Assets = UI.Assets
	local Base = UI.Base
	local TestingModules = UI.TestingModules
	local TabsManager,ExecutorManager,BackdoorModule,ListManager,TextTipManager,MessageBox,EditorFunctions,DragModule -- = require(TestingModules.TabsManager)



	local Branch = "stable"-- Latest,Stable

	local function import(file)
		local FormattedStr = string.format("https://raw.githubusercontent.com/HexerMaster1929/HexSS/%s/modules/%s.lua",Branch,file)
		print(FormattedStr)
		return loadstring(game:HttpGet(FormattedStr))()
	end
	EditorFunctions = import("HexSSEditorFunctions")
	TabsManager = import("TabsManager")
	ExecutorManager = import("ExecutorManager")
	BackdoorModule = import("BackdoorManager")
	ListManager = import("ListManager")
	TextTipManager = import("TextTipManager")
	MessageBox = import("MessageBoxManager")
	DragModule = import("Drag")




	local ExecutorFrame = Base.Body.Pages.Executor
	local AboutFrame = Base.Body.Pages.About
	local IntroFrame = Base.Body.Pages.Introductory
	local ScriptHubFrame = Base.Body.Pages.ScriptHub
	local AddedScriptFrame = Base.Body.Pages.SavedScripts
	local SettingsFrame = Base.Body.Pages.Settings

	local Exploit;
	if identifyexecutor then
		Exploit,Ver = identifyexecutor()
		if Ver then
			Exploit = Exploit..' '..tostring(Ver)
		end
	else
		Exploit = secure_load and "Sentinel" or pebc_execute and "ProtoSmasher" or is_sirhurt_closure and "Sirhurt" or (syn and not is_sirhurt_closure and not isexecutorclosure) and "Synapse X" or KRNL_LOADED and "Krnl"
	end

	local TweenService = game:GetService("TweenService")
	local RunService = game:GetService("RunService")
	local CoreGui = game:GetService("CoreGui")

	ScriptList = {
		{
			Name = "Topk3k V3",
			Description = "Topk3k V3 Lesgo bois",
			Code = 'require(2609384717).load("%username%")'
		},
		{
			Name = "Grab Knife V3",
			Description = "The Real Grab Knife V3?",
			Code = 'require(2959848162).knife"%username%"'
		},

	}





	local ScriptSettings = {
		BorderColor = Color3.fromRGB(43, 0, 255),
		RGBBorder = false,
		Invite = "ZjmX9hG3Mq",
		SaveSettings = false,
		FileSaving = {
			SaveFolder = "HexSS",
			SettingsFile = "ScriptSettings",
			ScriptSaveFile = "ScriptSaves",
			FileExtension = ".hex"
		},
	}

	function LoadConfiguration()
		if (isfolder) and (writefile) and (readfile) then
			if isfolder(ScriptSettings.FileSaving.SaveFolder) then
				if isfile(ScriptSettings.FileSaving.SaveFolder.."/"..ScriptSettings.FileSaving.ScriptSaveFile..ScriptSettings.FileSaving.FileExtension) then
					AddedScripts = game.HttpService:JSONDecode(readfile(ScriptSettings.FileSaving.SaveFolder.."/"..ScriptSettings.FileSaving.ScriptSaveFile..ScriptSettings.FileSaving.FileExtension)) 
				end
				if isfile(ScriptSettings.FileSaving.SaveFolder.."/"..ScriptSettings.FileSaving.SettingsFile..ScriptSettings.FileSaving.FileExtension) then
					ScriptSettings = game.HttpService:JSONDecode(readfile(ScriptSettings.FileSaving.SaveFolder.."/"..ScriptSettings.FileSaving.SettingsFile..ScriptSettings.FileSaving.FileExtension)) 
				end
			end
		else
			warn("Executor Does Not Support File Saving Functions")
		end
	end

	LoadConfiguration()


	-- Immediate Scripts

	local BottomStatusText = TextTipManager.Add(Base.Status)
	DragModule.Drag(Base,Base.Drag)



	-- Main Functions 

	function UpdateBorderColor(Col)
		if ScriptSettings.RGBBorder then return end
		UI.Base.Border.ImageColor3 = Col
		UI.Base.Border.Border.ImageColor3 = Col
		UI.Base.MessageBox.Border.ImageColor3 = Col
		for i, v in pairs(UI.Base.Prompts:GetChildren()) do
			if v.Name == "PromptShadow" then return end
			v:FindFirstChild("Border").ImageColor3 = Col
		end
	end

	function Execute(Str)
		BottomStatusText:Set("• Status: Waiting")
		BottomStatusText:Show()
		wait(.6)
		BottomStatusText:Set("• Status: Checking Modules")
		wait(.5)
		BottomStatusText:Set("• Status: Starting Backdoor Module")
		wait(.2)
		BottomStatusText:Set("• Status: Checking For Backdoors In Game")
		if BackdoorModule.IsGameInfected() then
			wait(.4)
			BottomStatusText:Set("• Status: Backdoors Found, Executing...")
			wait(.2)
			local Succ,Err = pcall(function()		
				BackdoorModule.Execute(Str)
			end)
			if Err then
				warn("why tf did this error bruh, heres the error ig: ",Err)
				BottomStatusText:Set("• Status: ERROR: "..Err)
				wait(.5)
				BottomStatusText:Hide()
			elseif Succ then
				BottomStatusText:Set("• Status: Successfully Executed!")
				wait(.5)
				BottomStatusText:Hide()
			end
		else
			wait(.2)
			BottomStatusText:Set("• Status: No Backdoors Found, Game Is Not Infected.")
			wait(.5)
			BottomStatusText:Hide()
		end
	end

	function SwitchPage(Name) 
		for i,v in pairs(Base.Body.Pages:GetChildren()) do
			if v:IsA("Frame") or v:IsA("ImageLabel") then
				v.Visible = false
			end
		end
		Base.Body.Pages:FindFirstChild(Name).Visible = true
	end

	function SaveScript(ScriptName,Script,AddedBy)
		if (readfile) and (writefile) then
			local DateTimeServ = DateTime.now()
			local InfoTable = {
				SavedBy = AddedBy,
				SavedOn = DateTimeServ:FormatLocalTime("LL", "en-us"),
			}
			if isfolder(ScriptSettings.FileSaving.ScriptSaveFile) then
				if isfile(ScriptName) then
					MessageBox.show({
						PopupFrame = Base.MessageBox,
						Title = "Error!",
						Message = "You already have a script saved with this name."
					})
				else
					writefile(ScriptSettings.FileSaving.SaveFolder.."/"..ScriptSettings.FileSaving.ScriptSaveFile.."/"..ScriptName..ScriptSettings.FileSaving.FileExtension,Script)
					writefile(ScriptSettings.FileSaving.SaveFolder.."/"..ScriptSettings.FileSaving.ScriptSaveFile.."/"..ScriptName.."_SCRIPTINFO"..ScriptSettings.FileSaving.FileExtension,game:GetService("HttpService"):JSONEncode(InfoTable))
					MessageBox.show({
						PopupFrame = Base.MessageBox,
						Title = "Success!",
						Message = "Saved Script Successfully!"
					})
				end
			else
				writefolder(ScriptSettings.FileSaving.ScriptSaveFile)
				writefile(ScriptSettings.FileSaving.SaveFolder.."/"..ScriptSettings.FileSaving.ScriptSaveFile.."/"..ScriptName..ScriptSettings.FileSaving.FileExtension,Script)
				writefile(ScriptSettings.FileSaving.SaveFolder.."/"..ScriptSettings.FileSaving.ScriptSaveFile.."/"..ScriptName.."_SCRIPTINFO"..ScriptSettings.FileSaving.FileExtension,game:GetService("HttpService"):JSONEncode(InfoTable))
			end

		else
			MessageBox.show({
				PopupFrame = Base.MessageBox,
				Title = "Error!",
				Message = "Your Executor Does Not Support Readfile"
			})
		end
	end

	function GetSavedScripts()
		local SavedScripts;
		if (listfiles) then
			SavedScripts = listfiles(ScriptSettings.FileSaving.ScriptSaveFile)

		else
			warn("Executor does not have list file")
		end
		return SavedScripts
	end

	-- Executor System

	local ExecutorParentFrame = ExecutorFrame.ExecutorTabs
	local TabSwitcher = ExecutorFrame.TabSwitcher
	local Buttons = ExecutorFrame.Buttons


	TabsManager.Add(TabSwitcher.Tabs,ExecutorParentFrame)

	TabSwitcher.NewTab.MouseButton1Down:Connect(function()
		TabsManager.Add(TabSwitcher.Tabs,ExecutorParentFrame)
	end)

	Buttons.Execute.MouseButton1Down:Connect(function()
		Execute(ExecutorManager.GetExecutorText(ExecutorParentFrame:FindFirstChild(TabsManager.GetOpenTab())))
	end)

	Buttons.Clear.MouseButton1Down:Connect(function()
		ExecutorManager.ClearText(ExecutorParentFrame:FindFirstChild(TabsManager.GetOpenTab()))
	end)

	Buttons.Save.MouseButton1Down:Connect(function()
		local Prompt = Base.Prompts.SaveScript
		Prompt.Visible = true
		wait(2)
		Prompt.Inner.Buttons.SetCancel.Save.MouseButton1Down:Connect(function()
			Prompt.Visible = false
			SaveScript(Prompt.Inner.Content.Value.Input.Text,ExecutorManager.GetExecutorText(ExecutorParentFrame:FindFirstChild(TabsManager.GetOpenTab())),game.Players.LocalPlayer.Name)
		end)
		Prompt.Parent.PromptShadow.MouseButton1Down:Connect(function()
			if Prompt.Visible then Prompt.Visible = false end
		end)
		Prompt.Inner.Buttons.SetCancel.Cancel.MouseButton1Down:Connect(function()
			if Prompt.Visible then Prompt.Visible = false end
		end)
	end)

	Buttons.R6.MouseButton1Down:Connect(function()
		Execute('require(6697419109):r6("%username%")')
	end)

	Buttons.R15.MouseButton1Down:Connect(function()
		Execute('require(6209331166):r15("%username%")')
	end)

	-- Script Hub System



	for i,v in pairs(ScriptList) do
		local NewTab = Assets.ScriptHubItm:Clone()
		NewTab.Title.Text = v.Name
		NewTab.Desc.Text = v.Description
		NewTab.Name = v.Name
		NewTab.Parent = ScriptHubFrame.List.Results.Clip.Content
		NewTab.Execute.MouseButton1Down:Connect(function()
			Execute(v.Code)
		end)
	end

	ScriptHubFrame.List.Query.Search:GetPropertyChangedSignal("Text"):Connect(function()
		ListManager.FilterList(ScriptHubFrame.List.Results.Clip.Content,ScriptHubFrame.List.Query.Search.Text)
	end)

	-- Added Script System


	if (isfolder) and isfolder(ScriptSettings.FileSaving.SaveFolder.."/"..ScriptSettings.FileSaving.ScriptSaveFile) and (readfile) then
		for i,v in pairs(GetSavedScripts()) do
			if string.match(tostring(v),"_SCRIPTINFO") then
				warn("Script info file insert fail")
				return
			end

			local SavedScripts = GetSavedScripts()

			local ThisScript = readfile(ScriptSettings.FileSaving.SaveFolder.."/"..ScriptSettings.FileSaving.ScriptSaveFile.."/"..tostring(v))
			local ThisScriptInfo = game:GetService("HttpService"):JSONDecode(readfile(ScriptSettings.FileSaving.SaveFolder.."/"..ScriptSettings.FileSaving.ScriptSaveFile.."/"..tostring(SavedScripts[v.."_SCRIPTINFO"])..ScriptSettings.FileSaving.FileExtension))



			local NewTab = Assets.ScriptHubItm:Clone()
			NewTab.Title.Text = tostring(v)
			NewTab.Desc.Text = "Added By: "..ThisScriptInfo.SavedOn
			NewTab.Name = tostring(v)
			NewTab.Parent = AddedScriptFrame.List.Results.Clip.Content
			NewTab.Execute.MouseButton1Down:Connect(function()
				Execute(v.Code)
			end)
		end


		AddedScriptFrame.List.Query.Search:GetPropertyChangedSignal("Text"):Connect(function()
			ListManager.FilterList(AddedScriptFrame.List.Results.Clip.Content,AddedScriptFrame.List.Query.Search.Text)
		end)

	end

	-- Page System

	for i,v in pairs(Base.Tabs.Container:GetChildren()) do
		if v:IsA("ImageButton") then
			v.MouseButton1Down:Connect(function()
				SwitchPage(v.Name)
			end)
			v.MouseEnter:Connect(function()
				BottomStatusText:Set(v.Name)
				BottomStatusText:Show()
			end)
			v.MouseLeave:Connect(function()

				BottomStatusText:Hide()
			end)
		end
	end

	-- Settings Page 


	local ColorPicker = SettingsFrame.Content.BorderColorPicker.ColorPicker
	local Background = ColorPicker.CPBackground
	local Display = Background.Display
	local Main = Background.MainCP
	local Slider = ColorPicker.ColorSlider

	ColorPicker.Parent.SelectedColor.ImageColor3 = ScriptSettings.BorderColor

	game:GetService("UserInputService").InputEnded:Connect(function(input, gameProcessed) if input.UserInputType == Enum.UserInputType.MouseButton1 then 
			mainDragging = false
			sliderDragging = false
		end end)
	Main.MouseButton1Down:Connect(function()

		mainDragging = true 

	end)
	Main.MainPoint.MouseButton1Down:Connect(function()

		mainDragging = true 

	end)
	Slider.MouseButton1Down:Connect(function()
		sliderDragging = true 
	end)
	Slider.SliderPoint.MouseButton1Down:Connect(function()
		sliderDragging = true 
	end)
	local h,s,v = ScriptSettings.BorderColor:ToHSV()
	local color = Color3.fromHSV(h,s,v) 
	local hex = string.format("#%02X%02X%02X",color.R*0xFF,color.G*0xFF,color.B*0xFF)
	local function setDisplay()
		--Main
		Main.MainPoint.Position = UDim2.new(s,-Main.MainPoint.AbsoluteSize.X/2,1-v,-Main.MainPoint.AbsoluteSize.Y/2)
		Main.MainPoint.ImageColor3 = Color3.fromHSV(h,s,v)
		Background.BackgroundColor3 = Color3.fromHSV(h,1,1)
		Display.BackgroundColor3 = Color3.fromHSV(h,s,v)
		ColorPicker.Parent.SelectedColor.ImageColor3 = Color3.fromHSV(h,s,v)
		--Slider 
		local x = h * Slider.AbsoluteSize.X
		Slider.SliderPoint.Position = UDim2.new(0,x-Slider.SliderPoint.AbsoluteSize.X/2,0.5,0)
		Slider.SliderPoint.ImageColor3 = Color3.fromHSV(h,1,1)
		local color = Color3.fromHSV(h,s,v) 
		local r,g,b = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
		ColorPicker.R.Inpt.Text = tostring(r)
		ColorPicker.G.Inpt.Text = tostring(g)
		ColorPicker.B.Inpt.Text = tostring(b)
		hex = string.format("#%02X%02X%02X",color.R*0xFF,color.G*0xFF,color.B*0xFF)

	end
	setDisplay()
--[[ColorPicker.HexInput.InputBox.FocusLost:Connect(function()
	if not pcall(function()
			local r, g, b = string.match(ColorPicker.HexInput.InputBox.Text, "^#?(%w%w)(%w%w)(%w%w)$")
			local rgbColor = Color3.fromRGB(tonumber(r, 16),tonumber(g, 16), tonumber(b, 16))
			h,s,v = rgbColor:ToHSV()
			hex = ColorPicker.HexInput.InputBox.Text
			setDisplay()
			ColorPickerSettings.Color = rgbColor
		end) 
	then 
		ColorPicker.HexInput.InputBox.Text = hex 
	end
	pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
	local r,g,b = math.floor((h*255)+0.5),math.floor((s*255)+0.5),math.floor((v*255)+0.5)
	ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
	SaveConfiguration()
end)]]--
	--RGB
	local function rgbBoxes(box,toChange)
		local value = tonumber(box.Text) 
		local color = Color3.fromHSV(h,s,v) 
		local oldR,oldG,oldB = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
		local save 
		if toChange == "R" then save = oldR;oldR = value elseif toChange == "G" then save = oldG;oldG = value else save = oldB;oldB = value end
		if value then 
			value = math.clamp(value,0,255)
			h,s,v = Color3.fromRGB(oldR,oldG,oldB):ToHSV()

			setDisplay()
		else 
			box.Text = tostring(save)
		end
		local r,g,b = math.floor((h*255)+0.5),math.floor((s*255)+0.5),math.floor((v*255)+0.5)
		ColorPicker.Parent.SelectedColor.ImageColor3 = Color3.fromHSV(h,s,v)
		pcall(function()
			UpdateBorderColor(Color3.fromHSV(h,s,v))
			ScriptSettings.BorderColor = Color3.fromHSV(h,s,v)
		end)
	end
	ColorPicker.R.Inpt.FocusLost:connect(function()
		rgbBoxes(ColorPicker.R.Inpt,"R")
		pcall(function()
			UpdateBorderColor(Color3.fromHSV(h,s,v))
			ScriptSettings.BorderColor = Color3.fromHSV(h,s,v)
		end)
	end)
	ColorPicker.G.Inpt.FocusLost:connect(function()
		rgbBoxes(ColorPicker.G.Inpt,"G")
		pcall(function()
			UpdateBorderColor(Color3.fromHSV(h,s,v))
			ScriptSettings.BorderColor = Color3.fromHSV(h,s,v)
		end)
	end)
	ColorPicker.B.Inpt.FocusLost:connect(function()
		rgbBoxes(ColorPicker.B.Inpt,"B")
		pcall(function()
			UpdateBorderColor(Color3.fromHSV(h,s,v))
			ScriptSettings.BorderColor = Color3.fromHSV(h,s,v)
		end)
	end)

	local mouse = game.Players.LocalPlayer:GetMouse()

	game:GetService("RunService").RenderStepped:connect(function()
		if mainDragging then 
			local localX = math.clamp(mouse.X-Main.AbsolutePosition.X,0,Main.AbsoluteSize.X)
			local localY = math.clamp(mouse.Y-Main.AbsolutePosition.Y,0,Main.AbsoluteSize.Y)
			Main.MainPoint.Position = UDim2.new(0,localX-Main.MainPoint.AbsoluteSize.X/2,0,localY-Main.MainPoint.AbsoluteSize.Y/2)
			s = localX / Main.AbsoluteSize.X
			v = 1 - (localY / Main.AbsoluteSize.Y)
			Display.BackgroundColor3 = Color3.fromHSV(h,s,v)
			Main.MainPoint.ImageColor3 = Color3.fromHSV(h,s,v)
			ColorPicker.Parent.SelectedColor.ImageColor3 = Color3.fromHSV(h,s,v)
			Background.BackgroundColor3 = Color3.fromHSV(h,1,1)
			local color = Color3.fromHSV(h,s,v) 
			local r,g,b = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
			ColorPicker.R.Inpt.Text = tostring(r)
			ColorPicker.G.Inpt.Text = tostring(g)
			ColorPicker.B.Inpt.Text = tostring(b)
			--ColorPicker.HexInput.InputBox.Text = string.format("#%02X%02X%02X",color.R*0xFF,color.G*0xFF,color.B*0xFF)
			pcall(function()
				UpdateBorderColor(Color3.fromHSV(h,s,v))
				ScriptSettings.BorderColor = Color3.fromHSV(h,s,v)
			end)
		end
		if sliderDragging then 
			local localX = math.clamp(mouse.X-Slider.AbsolutePosition.X,0,Slider.AbsoluteSize.X)
			h = localX / Slider.AbsoluteSize.X
			Display.BackgroundColor3 = Color3.fromHSV(h,s,v)
			Slider.SliderPoint.Position = UDim2.new(0,localX-Slider.SliderPoint.AbsoluteSize.X/2,0.5,0)
			Slider.SliderPoint.ImageColor3 = Color3.fromHSV(h,1,1)
			Background.BackgroundColor3 = Color3.fromHSV(h,1,1)
			Main.MainPoint.ImageColor3 = Color3.fromHSV(h,s,v)
			ColorPicker.Parent.SelectedColor.ImageColor3 = Color3.fromHSV(h,s,v)
			local color = Color3.fromHSV(h,s,v) 
			local r,g,b = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
			ColorPicker.R.Inpt.Text = tostring(r)
			ColorPicker.G.Inpt.Text = tostring(g)
			ColorPicker.B.Inpt.Text = tostring(b)
			pcall(function()
				UpdateBorderColor(Color3.fromHSV(h,s,v))
				ScriptSettings.BorderColor = Color3.fromHSV(h,s,v)
			end)
		end
	end)

	local SCL = SettingsFrame.Content

	-- rgb border toggle

	SCL.RGBBorder.Toggle.MouseButton1Down:Connect(function()
		--print("click")
		if ScriptSettings.RGBBorder then
			ScriptSettings.RGBBorder = false
			TweenService:Create(SCL.RGBBorder.Toggle.Label,TweenInfo.new(0.24,Enum.EasingStyle.Linear,Enum.EasingDirection.InOut),{TextTransparency = 1}):Play()
		else
			ScriptSettings.RGBBorder = true
			TweenService:Create(SCL.RGBBorder.Toggle.Label,TweenInfo.new(0.24,Enum.EasingStyle.Linear,Enum.EasingDirection.InOut),{TextTransparency = 0}):Play()
		end
	end)

	-- rgb border handler

	task.spawn(function()
		while wait() do
			if ScriptSettings.RGBBorder == true then
				Base.MessageBox.Border.ImageColor3 = Color3.new(255/255,0/255,0/255)
				Base.Border.ImageColor3 = Color3.new(255/255,0/255,0/255)
				Base.Border.Border.ImageColor3 = Color3.new(255/255,0/255,0/255)
				for i = 0,255,10 do
					wait()
					local Color = Color3.new(255/255,i/255,0/255)
					Base.MessageBox.Border.ImageColor3 = Color
					Base.Border.ImageColor3 = Color
					Base.Border.Border.ImageColor3 = Color
				end
				for i = 255,0,-10 do
					wait()

					local Color1 = Color3.new(i/255,255/255,0/255)
					Base.MessageBox.Border.ImageColor3 = Color1
					Base.Border.ImageColor3 = Color1
					Base.Border.Border.ImageColor3 = Color1
				end
				for i = 0,255,10 do
					wait()
					local Color2 = Color3.new(0/255,255/255,i/255)
					Base.MessageBox.Border.ImageColor3 = Color2
					Base.Border.ImageColor3 = Color2
					Base.Border.Border.ImageColor3 = Color2
				end
				for i = 255,0,-10 do
					wait()
					local Color4 = Color3.new(0/255,i/255,255/255)
					Base.MessageBox.Border.ImageColor3 = Color4
					Base.Border.ImageColor3 = Color4
					Base.Border.Border.ImageColor3 = Color4
				end
				for i = 0,255,10 do
					wait()
					local Color5 = Color3.new(i/255,0/255,255/255)
					Base.MessageBox.Border.ImageColor3 = Color5
					Base.Border.ImageColor3 = Color5
					Base.Border.Border.ImageColor3 = Color5
				end
				for i = 255,0,-10 do
					wait()
					local Color6 = Color3.new(255/255,0/255,i/255)
					Base.MessageBox.Border.ImageColor3 = Color6
					Base.Border.ImageColor3 = Color6
					Base.Border.Border.ImageColor3 = Color6
				end
			end
		end
	end)

	local ScreenPos

	UI.Base.Drag.Collapse.MouseButton1Down:Connect(function()
		ScreenPos = UI.Base.Position
		TweenService:Create(UI.Base,TweenInfo.new(0.76,Enum.EasingStyle.Quart,Enum.EasingDirection.Out),{Position = UDim2.new(1.5, 0,0.5, 0)}):Play()
		TweenService:Create(UI.OpenButtonHolder,TweenInfo.new(0.7,Enum.EasingStyle.Quart,Enum.EasingDirection.Out),{Position = UDim2.new(1, 0,1, 0)}):Play()
	end)

	UI.OpenButtonHolder.Open.MouseButton1Down:Connect(function()

		TweenService:Create(UI.Base,TweenInfo.new(0.76,Enum.EasingStyle.Quart,Enum.EasingDirection.Out),{Position = ScreenPos}):Play()
		TweenService:Create(UI.OpenButtonHolder,TweenInfo.new(1.4,Enum.EasingStyle.Quart,Enum.EasingDirection.Out),{Position = UDim2.new(1.32, 0,1, 0)}):Play()
	end)

	SCL.RGBBorder.Toggle.MouseButton1Down:Connect(function()
		--print("click")
		if ScriptSettings.RGBBorder then
			ScriptSettings.RGBBorder = false
			TweenService:Create(SCL.RGBBorder.Toggle.Label,TweenInfo.new(0.24,Enum.EasingStyle.Linear,Enum.EasingDirection.InOut),{TextTransparency = 1}):Play()
		else
			ScriptSettings.RGBBorder = true
			TweenService:Create(SCL.RGBBorder.Toggle.Label,TweenInfo.new(0.24,Enum.EasingStyle.Linear,Enum.EasingDirection.InOut),{TextTransparency = 0}):Play()
		end
	end)

	Base.Body.Pages.Settings.Content.Discord.Toggle.MouseButton1Down:Connect(function()
		local Prompt = Base.Prompts.JoinDiscord
		Prompt.Visible = true
		wait(2)
		Prompt.Inner.Content.Value.Title.Text = "discord.gg/"..tostring(ScriptSettings.Invite)
		Prompt.Inner.Content.Add.MouseButton1Down:Connect(function()
			Prompt.Visible = false
			print("Joining")
			local Request = http_request or syn and syn.request or request or nil
			--local CurrentDiscordInvite = isfile('Invite.DARKHUB') and readfile('Invite.DARKHUB') or nil
			if Request then
				local Invite =ScriptSettings.Invite or "ZjmX9hG3Mq"
			--[[local r = Request(
				{
					['Method'] = 'GET',
					['Headers'] = {
						['discordLinkRequest'] = "true"
					},
					['Url'] = 'https://api.darkhub.cloud/v3/discord/raw'
				})
			if r.StatusCode ~= 200 or not r.Successful then
				Invite = "darkhub"
			else
				Invite = r.Body
			end]]--

				Request(
					{
						['Method'] = 'POST',
						['Headers'] = {
							["origin"] = 'https://discord.com',
							["Content-Type"] = "application/json"
						},
						['Url'] = 'http://127.0.0.1:6463/rpc?v=1',
						['Body'] = game:GetService('HttpService'):JSONEncode({cmd="INVITE_BROWSER",args={code=Invite},nonce=game:GetService('HttpService'):GenerateGUID(false):lower()})
					}    
				)


			end
		end)
		Prompt.Parent.PromptShadow.MouseButton1Down:Connect(function()
			if Prompt.Visible then Prompt.Visible = false end
		end)
		Prompt.Inner.Buttons.Cancel.MouseButton1Down:Connect(function()
			if Prompt.Visible then Prompt.Visible = false end
		end)
	end)

	SCL.LoadConf.Toggle.MouseButton1Down:Connect(function()
		LoadConfiguration()
		MessageBox.show({
			MessageBox = Base.MessageBox,
			Title = "Success!",
			Message = "Loaded Configuration",

		})
	end)

	SCL.AutoSave.Toggle.MouseButton1Down:Connect(function()
		if (isfile) and (readfile) and (writefile) then
		ScriptSettings.SaveSettings = not ScriptSettings.SaveSettings
		else
			MessageBox.show({
				MessageBox = Base.MessageBox,
				Title = "Error!",
				Message = "Cannot Save Script Settings, Your Exploit does not support Readfile/Writefile"
			})
		end
	end)


	UpdateBorderColor(ScriptSettings.BorderColor)

	Base.Drag.Title.Text = "HexSS V"..ScriptVersion
	AboutFrame.Content.Ver.Text = Ver
	IntroFrame.Content.Ver.Text = Ver
	IntroFrame.Content.Update1.Text = "• "..Update1
	IntroFrame.Content.Update2.Text = "• "..Update2
	IntroFrame.Content.Update3.Text = "• "..Update3
	IntroFrame.Content.Exploit.Text = tostring(Exploit)
	AboutFrame.Content.Exploit.Text = tostring(Exploit)

	game.Players.PlayerRemoving:Connect(function(Playr)
		if Playr == game.Players.LocalPlayer then
			local SaveFile = game:GetService("HttpService"):JSONEncode(AddedScripts)
			local SettingsSaveFile = game:GetService("HttpService"):JSONEncode(SettingsFrame)
			if not isfolder(ScriptSettings.FileSaving.SaveFolder) then
				local Folder = writefolder(ScriptSettings.FileSaving.SaveFolder)
				--if not isfile(Folder.."/"..ScriptSettings.FileSaving.ScriptSaveFile..ScriptSettings.FileSaving.FileEXT) then

				if ScriptSettings.SaveSettings then
					writefile(ScriptSettings.FileSaving.SaveFolder.."/"..ScriptSettings.FileSaving.SettingsFile..ScriptSettings.FileSaving.FileExtension,SettingsSaveFile)
				end
				--end
			end
		end
	end)




	if not (writefile) and not (readfile) then
		--	wait(5)
		--	MessageBox.show({
		--	MessageBox = Base.MessageBox,
		--	Title = "Warning!",
		--	Message = "Your Exploit Does Not Support File Saving, Your Added Scripts Will Not Save!"
		--})
		warn("no filesystem functions with executor")
	end

	UI.Base.Visible = false
	UI.Loader.Visible = true

	if not RunService:IsStudio() then
		if gethui then
			UI.Parent = gethui()
		elseif syn.protect_gui then 
			syn.protect_gui(UI)
			UI.Parent = CoreGui
		elseif CoreGui:FindFirstChild("RobloxGui") then
			UI.Parent = CoreGui:FindFirstChild("RobloxGui")
		else
			UI.Parent = CoreGui
		end
	else
		UI.Parent = game.Players.LocalPlayer.PlayerGui
	end

	UI.Loader.Title.Text = "Loading Executor Module"
	wait(.2)
	UI.Loader.Title.Text = "Loading Saving Module"
	wait(.7)
	UI.Loader.Title.Text = "Loading Backdoor Module"
	wait(.9)
	UI.Loader.Title.Text = "Loading Luau Module"
	wait(.3)
	UI.Loader.Title.Text = "Cleaning Up"
	wait(.4)
	TweenService:Create(UI.Loader.Title,TweenInfo.new(0.2,Enum.EasingStyle.Quart,Enum.EasingDirection.Out),{TextTransparency = 1}):Play()
	TweenService:Create(UI.Loader.Icon,TweenInfo.new(0.2,Enum.EasingStyle.Quart,Enum.EasingDirection.Out),{ImageTransparency = 1}):Play()
	TweenService:Create(UI.Loader,TweenInfo.new(0.6,Enum.EasingStyle.Quart,Enum.EasingDirection.Out),{Size = Base.Size}):Play()
	wait(.61)
	UI.Loader:Destroy()
	Base.Visible = true

end)
if Error then
	warn(Error)
end
