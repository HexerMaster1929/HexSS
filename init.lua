--[[
  _   _                           _        __     ____   
 | | | | _____  ____ ___   ____ _| |_ ___  \ \   / / /_  
 | |_| |/ _ \ \/ / _` \ \ / / _` | __/ _ \  \ \ / / '_ \ 
 |  _  |  __/>  < (_| |\ V / (_| | ||  __/   \ V /| (_) |
 |_| |_|\___/_/\_\__,_| \_/ \__,_|\__\___|    \_/  \___/ 
      Lua Obfiscuator | Made By HexerMaster1929#5087                                                                      

]]--


do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==3) then v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=4;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (4==v0) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v0=5;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==2) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end if (v0==5) then v16=nil;v16=function(v25,v26,...)local v27=1;local v28;v25=v5(v4(v25,5),"..",function(v29)if (v2(v29,2)==79) then v28=v1(v4(v29,1,1));return "";else local v75=v3(v1(v29,16));if v28 then local v87=0;local v88;while true do if (v87==1) then return v88;end if (v87==0) then v88=v6(v75,v28);v28=nil;v87=1;end end else return v75;end end end);local function v30(v31,v32,v33)if v33 then local v76=(v31/((1 + (1 -0))^(v32-1)))%((1 + 1)^(((v33-((3 -2) + 0)) -(v32-(1 + 0))) + ((871 -(119 + 750)) -1))) ;return v76-(v76%(843 -(148 + 694))) ;else local v77=(1 + 1)^(v32-(1 + 0)) ;return (((v31%(v77 + v77))>=v77) and ((1 + 0) -(0 + 0))) or 0 ;end end local function v34()local v47=v2(v25,v27,v27);v27=v27 + 1 ;return v47;end local function v35()local v48,v49=v2(v25,v27,v27 + 1 + 1 );v27=v27 + (1498 -(171 + 1325)) ;return (v49 * (470 -214)) + v48 ;end local function v36()local v50,v51,v52,v53=v2(v25,v27,v27 + 3 );v27=v27 + 4 ;return (v53 * (10921226 + 5855990)) + (v52 * (105139 -39603)) + (v51 * (1583 -(758 + 569))) + v50 ;end local function v37()local v54=v36();local v55=v36();local v56=713 -(219 + 493) ;local v57=(v30(v55,1 + 0 ,1347 -(1272 + 55) ) * ((1 + 1)^(114 -82))) + v54 ;local v58=v30(v55,962 -(189 + 752) ,12 + 19 );local v59=((v30(v55,59 -27 )==(1 + 0)) and  -1) or (1021 -(722 + 19 + 279)) ;if (v58==((0 -0) + 0)) then if (v57==(1816 -(971 + 845))) then return v59 * (462 -(337 + (1481 -(148 + 1208)))) ;else v58=1583 -(1502 + 80) ;v56=0 -0 ;end elseif (v58==(2955 -(145 + (1570 -(718 + 89))))) then return ((v57==0) and (v59 * ((3 -2)/(0 -0)))) or (v59 * NaN) ;end return v9(v59,v58-(1001 + 22) ) * (v56 + (v57/(2^(396 -(22 + 322))))) ;end local function v38(v39)local v60;if  not v39 then local v78=1546 -(1538 + 8) ;while true do if (v78==(0 -0)) then v39=v36();if (v39==(0 -0)) then return "";end break;end end end v60=v4(v25,v27,(v27 + v39) -(1 + 0) );v27=v27 + v39 ;local v61={};for v73=(1557 -(596 + 960)) -0 , #v60 do v61[v73]=v3(v2(v4(v60,v73,v73)));end return v7(v61);end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v62=1048 -(74 + 974) ;local v63;local v64;local v65;local v66;local v67;local v68;while true do if (v62~=1) then else local v79=0 -0 ;while true do if (v79==1) then v68={};v62=2;break;end if (v79==(0 + 0)) then local v104=0;while true do if (v104~=(0 -0)) then else v66={v63,v64,nil,v65};v67=v36();v104=1419 -(300 + 1118) ;end if (v104~=(2 -1)) then else v79=1;break;end end end end end if (v62~=(333 -(125 + 205))) then else local v80=0 -0 ;local v81;while true do if (v80==0) then v81=0;while true do if ((1787 -(1055 + 731))==v81) then return v66;end if (v81==(0 -0)) then for v120=1 + 0 ,v36() do v64[v120-(1407 -(312 + 1094)) ]=v42();end for v122=1 + 0 ,v36() do v65[v122]=v36();end v81=1 + 0 ;end end break;end end end if (v62==2) then local v82=0;while true do if (v82~=(78 -(54 + 24))) then else local v105=0 + 0 ;while true do if (v105~=(2 -1)) then else v82=1;break;end if (v105==(1268 -(97 + 1171))) then for v124=1,v67 do local v125=1018 -(58 + 960) ;local v126;local v127;local v128;while true do if (v125==0) then v126=0 -0 ;v127=nil;v125=1;end if (v125==(1 + 0)) then v128=nil;while true do if (v126~=(0 -0)) then else v127=v34();v128=nil;v126=948 -(298 + 649) ;end if (v126==1) then if (v127==(1 -0)) then v128=v34()~=(0 + 0) ;elseif (v127==(1 + 1)) then v128=v37();elseif (v127~=(7 -4)) then else v128=v38();end v68[v124]=v128;break;end end break;end end end v66[545 -(231 + 311) ]=v34();v105=1;end end end if (v82==(1 + 0)) then for v110=1,v36() do local v111=0;local v112;local v113;local v114;while true do if (v111==(15 -(10 + 4))) then v114=nil;while true do if (v112==1) then while true do if (v113~=(544 -(20 + 524))) then else v114=v34();if (v30(v114,63 -(34 + 28) ,2 -1 )~=0) then else local v134=0;local v135;local v136;local v137;local v138;while true do if (v134==(2 + 0)) then while true do if (v135==(0 -0)) then local v187=864 -(384 + 480) ;while true do if (v187==(1 -0)) then v135=1;break;end if (v187==0) then v136=v30(v114,1 + 1 ,5 -2 );v137=v30(v114,4,6);v187=1;end end end if (v135~=1) then else local v188=0;while true do if (v188==(1519 -(319 + 1199))) then v135=2;break;end if (v188~=(0 + 0)) then else local v267=0 + 0 ;while true do if (v267==(0 -0)) then v138={v35(),v35(),nil,nil};if (v136==0) then local v329=0;local v330;while true do if (0==v329) then v330=0;while true do if (v330~=0) then else v138[7 -4 ]=v35();v138[1 + 3 ]=v35();break;end end break;end end elseif (v136==1) then v138[3 + 0 ]=v36();elseif (v136==(782 -(484 + 296))) then v138[926 -(583 + 340) ]=v36() -(2^16) ;elseif (v136==3) then local v357=0 -0 ;local v358;local v359;while true do if (v357==(457 -(210 + 246))) then while true do if (v358~=0) then else v359=0;while true do if (v359~=0) then else v138[3]=v36() -(2^16) ;v138[987 -(183 + 800) ]=v35();break;end end break;end end break;end if (v357~=(497 -(116 + 381))) then else v358=0;v359=nil;v357=649 -(180 + 468) ;end end end v267=1;end if (1==v267) then v188=1;break;end end end end end if (v135==(8 -5)) then if (v30(v137,7 -4 ,3)~=(1 + 0)) then else v138[7 -3 ]=v68[v138[705 -(308 + 393) ]];end v63[v110]=v138;break;end if (v135==(172 -(121 + 49))) then local v190=0;while true do if (v190~=1) then else v135=2 + 1 ;break;end if (v190==(0 + 0)) then if (v30(v137,2 -1 ,1 + 0 )==1) then v138[2]=v68[v138[904 -(342 + 560) ]];end if (v30(v137,4 -2 ,8 -6 )==(1 + 0)) then v138[3]=v68[v138[3]];end v190=1 + 0 ;end end end end break;end if (v134~=0) then else v135=0 -0 ;v136=nil;v134=3 -2 ;end if (v134==(2 -1)) then v137=nil;v138=nil;v134=2;end end end break;end end break;end if (v112~=(0 + 0)) then else local v130=0;while true do if (v130~=0) then else v113=146 -(66 + 80) ;v114=nil;v130=1;end if (v130==(1 + 0)) then v112=1 -0 ;break;end end end end break;end if (v111==(0 + 0)) then v112=0 -0 ;v113=nil;v111=1;end end end v62=10 -7 ;break;end end end if (v62==0) then local v83=0;while true do if (v83==(1 + 0)) then v65={};v62=1 + 0 ;break;end if ((1964 -(284 + 1680))==v83) then v63={};v64={};v83=1;end end end end end local function v43(v44,v45,v46)local v69=0;local v70;local v71;local v72;while true do if (v69==1) then v72=v44[3];return function(...)local v89=1;local v90= -1;local v91={...};local v92=v13("#",...) -1 ;local function v93()local v94=v70;local v95=v71;local v96=v72;local v97=v41;local v98={};local v99={};local v100={};for v106=1121 -(1120 + 1) ,v92 do if (((12096 -8953)==3143) and (v106>=v96)) then v98[v106-v96 ]=v91[v106 + (1 -0) ];else v100[v106]=v91[v106 + 1 + 0 ];end end local v101=(v92-v96) + (1 -(0 + 0)) ;local v102;local v103;while true do local v107=0 + 0 ;local v108;while true do if ((v107==0) or (3030<(50 + 1637))) then v108=854 -(297 + (904 -347)) ;while true do if (((12689 -10134)>((2193 -(427 + 562)) -549)) and (0==v108)) then local v129=0;while true do if ((v129==(0 + 0)) or ((4502 + 0)<(252 + 1330))) then v102=v94[v89];v103=v102[(3583 -2401) -(785 + (873 -477)) ];v129=1 -0 ;end if (((2666 -(1066 + 404))<(364 + 4622)) and (v129==(1944 -(453 + 1490)))) then v108=1 -0 ;break;end end end if (((1445 + 1360)>=(1905 -781)) and (v108==1)) then if ((v103<=(4 + (29 -13))) or ((6755 -2697)==(880 + 432))) then if ((v103<=(6 + 3)) or (((3647 -(53 + 120)) + 1314)<=((1531 -722) + 3432))) then if ((3684>=(4553 -2000)) and (v103<=(7 -3))) then if (((4171 -(339 + 486))==3346) and (v103<=(1 -0))) then if (((1492 + 437 + 165)<(292 + 3844)) and (v103>(0 -(0 -0)))) then v100[v102[2]]= #v100[v102[2 + 1 + 0 ]];else local v140=(3292 -(604 + 844)) -(1675 + 13 + 156) ;local v141;local v142;while true do if ((v140==(1295 -(433 + 861))) or ((22 + 99)>(937 + 789))) then while true do if (((1233 + 1578)>=((30630 -20966) -7399)) and ((0 + 0)==v141)) then v142=v102[(2369 -1843) -(109 + 415) ];do return v14(v100,v142,v90);end break;end end break;end if ((v140==0) or ((288 -168)>=(5432 -2975))) then v141=0;v142=nil;v140=1;end end end elseif (((2214 -(240 + 34))<=3190) and (v103<=(6 -4))) then do return;end elseif ((v103>(3 + 0)) or ((2693 -1859)>(4541 -((1707 -(1088 + 334)) + 590)))) then local v191=0;local v192;local v193;local v194;local v195;while true do if (((6406 -(265 + 1225))>(1263 -(931 + 191))) and ((0 + 0)==v191)) then v192=0;v193=nil;v191=1 + 0 ;end if ((v191==((1853 -1373) -((814 -(70 + 344)) + 78))) or ((12647 -7965)==(5107 -(796 + 502)))) then while true do if (((2680 + 1449)>(461 + 1905)) and ((1352 -(1003 + (2170 -(1403 + 419))))==v192)) then v195=v100[v193 + 2 + 0 + 0 ];if ((v195>0) or ((2427 + 1994)==3928)) then if ((3304>(2173 -(966 + 681))) and (v194>v100[v193 + (1 -0) ])) then v89=v102[3];else v100[v193 + 3 ]=v194;end elseif ((1309<=(6357 -(1437 + 348))) and (v194<v100[v193 + (655 -(207 + 76 + 371)) ])) then v89=v102[268 -(145 + 120) ];else v100[v193 + 3 ]=v194;end break;end if ((v192==(773 -(329 + 140 + 304))) or ((3329 + 1409)<=(3853 + 609))) then v193=v102[1 + 1 ];v194=v100[v193];v192=(935 -341) -(157 + (2130 -(1339 + 355))) ;end end break;end if ((v191==(544 -(525 + 18))) or (2356==(8218 -5082))) then v194=nil;v195=nil;v191=6 -4 ;end end else local v196=0 -(0 -0) ;local v197;while true do if (((4145 -1780)>(1681 -879)) and (v196==(693 -(631 + 62)))) then v197=v102[3 -1 ];v100[v197]=v100[v197]();break;end end end elseif ((v103<=(1 + 5)) or ((10081 -6812)<=(1692 -(219 + 661)))) then if ((v103==5) or ((698 + 2118)==775)) then v100[v102[695 -(370 + 323) ]]=v100[v102[3]] -v102[5 -1 ] ;else v100[v102[2]]=v45[v102[3]];end elseif ((((5453 + 749) -2988)==((1430 -(150 + 128)) + (2898 -(82 + 754)))) and (v103<=(1445 -(1136 + 302)))) then v100[v102[4 -(2 + 0) ]]=v100[v102[598 -(177 + 418) ]]%v100[v102[4]] ;elseif ((v103>(26 -18)) or ((114 + 558)>=2589)) then v100[v102[6 -4 ]]=v100[v102[4 -1 ]] + v102[713 -(696 + 13) ] ;elseif ((v100[v102[2]]==v102[4]) or ((71 -(16 + 12))>(15527 -11023))) then v89=v89 + 1 ;else v89=v102[976 -(564 + 409) ];end elseif (((364 + 561)>=787) and (v103<=(1905 -(502 + 1389)))) then if (((2220 -(343 + 28))>=(304 + 1083)) and (v103<=(686 -(169 + 269 + 237)))) then if ((v103>(1556 -(257 + 1289))) or ((1024 + 3012)==((1338 -(7 + 3)) -575))) then local v147=378 -(178 + 200) ;local v148;local v149;while true do if ((v147==((1400 + 168) -(62 + 1505))) or ((1669 -(1167 + 129))==(2783 + 662))) then while true do if ((v148==0) or ((433 -278)==3654)) then v149=v102[3 -1 ];v100[v149]=v100[v149](v100[v149 + (848 -(662 + 185)) ]);break;end end break;end if ((v147==0) or ((5479 -2647)>(11645 -7175))) then v148=0;v149=nil;v147=244 -(181 + 62) ;end end else local v150=(0 -0) -0 ;local v151;local v152;local v153;while true do if ((v150==(1954 -(863 + 1090))) or (3516<3450)) then v153={};v152=v11({},{__index=function(v242,v243)local v254=0;local v255;local v256;local v257;while true do if ((v254==(0 -0)) or (1088>(5282 -(196 + 892)))) then v255=0;v256=nil;v254=1042 -((231 -152) + 962) ;end if ((v254==(1496 -(1061 + 434))) or (((38803 -28489) -7402)>=(11942 -7315))) then v257=nil;while true do if ((v255==(2 -1)) or ((1980 + 2751)<=(639 + 22))) then while true do if ((416==(414 + 2)) and (v256==0)) then local v348=0;local v349;while true do if (((2076 + 2797)>=2314) and (v348==(0 + 0))) then v349=0 -0 ;while true do if ((v349==(0 + 0)) or (1086<937)) then local v368=0 -0 ;while true do if ((v368==(0 -(0 + 0))) or ((3825 -(93 + 1638))>=((6999 -3736) + (1244 -(204 + 552))))) then v257=v153[v243];return v257[237 -(224 + 12) ][v257[1913 -(1403 + 508) ]];end end end end break;end end end end break;end if ((v255==(0 -0)) or ((8021 -6356)>(3189 + 1666))) then local v331=0;while true do if ((v331==((79 + 515) -(380 + 214))) or ((2187 -(73 + (527 -343)))<(1117 -(696 + 321)))) then v256=0 + 0 ;v257=nil;v331=714 -(656 + 57) ;end if (((5268 -(368 + 390))<(10149 -5577)) and (v331==1)) then v255=1231 -(940 + 290) ;break;end end end end break;end end end,__newindex=function(v242,v243,v244)local v258=0;local v259;local v260;while true do if ((v258==(44 -(28 + (42 -27)))) or (((526 + 3796) -(896 + 124))<=(1805 + 862))) then while true do if ((v259==(0 + 0)) or ((20 + 66 + 74)>=743)) then v260=v153[v243];v260[1 + 0 ][v260[3 -1 ]]=v244;break;end end break;end if ((v258==(0 + 0)) or ((5925 -3548)<=237)) then v259=1388 -(412 + 976) ;v260=nil;v258=4 -3 ;end end end});v150=2;end if (((4326 -(69 + 871))>=(1213 + 799)) and (v150==0)) then local v245=0 + 0 ;while true do if ((v245==(4 -3)) or ((456 + (4605 -2421))<=(2527 -(885 + 124)))) then v150=1;break;end if ((v245==(0 + 0)) or ((4090 -(501 + 467))>(1320 + 2551))) then v151=v95[v102[3 + 0 ]];v152=nil;v245=(2235 -(108 + 141)) -(1811 + 174) ;end end end if (((839 + 3439)>(921 -(79 + 7))) and (v150==2)) then for v261=(59 -(44 + 14)) + 0 ,v102[6 -2 ] do local v262=0;local v263;while true do if ((v262==(1 + 0)) or (999>(10939 -(4942 + 1358)))) then if ((v263[1 + 0 ]==(150 -(97 + 11))) or ((5469 -3397)>=3788)) then v153[v261-(1 + 0 + 0) ]={v100,v263[1462 -(563 + 896) ]};else v153[v261-(1 + 0) ]={v45,v263[3]};end v99[ #v99 + 1 + 0 ]=v153;break;end if (((14450 -10453)>=(290 + 2023)) and (0==v262)) then v89=v89 + 1 + 0 ;v263=v94[v89];v262=1 + 0 ;end end end v100[v102[2]]=v43(v151,v152,v46);break;end end end elseif (((7086 -3984)>=(645 -(260 + 192))) and (v103<=(1941 -(1316 + 613)))) then local v154=0 + 0 ;local v155;while true do if (((1862 -(782 + 63))==(955 + 62)) and (v154==(1969 -(773 + 1196)))) then v155=v102[6 -4 ];do return v100[v155](v14(v100,v155 + 1 ,v102[1 + 2 + 0 + 0 ]));end break;end end elseif ((1567>873) and (v103>(23 -10))) then local v199=0;local v200;local v201;while true do if (((1 -(282 -(235 + 47)))==v199) or (2038==((1001 -(12 + 200)) + 453))) then while true do if ((v200==(0 + 0)) or ((5877 -3448)>=(4655 -(791 + 613)))) then v201=v102[(113 -41) -((1925 -(165 + 1705)) + 15) ];v100[v201](v100[v201 + (1 -0) ]);break;end end break;end if ((v199==(0 -0)) or ((6458 -4807)<=828)) then v200=706 -(338 + 368) ;v201=nil;v199=(437 + 1461) -(868 + 437 + 592) ;end end else local v202=0 -0 ;local v203;local v204;while true do if ((v202==(0 + 0)) or (4965<=(2911 -(490 + 433)))) then v203=0 -0 ;v204=nil;v202=1 -0 ;end if ((v202==1) or ((1474 -860)>3954)) then while true do if ((v203==(1060 -(258 + 802))) or ((13729 -9089)<=(5863 -3000))) then v204=v100[v102[8 -4 ]];if ( not v204 or (1090>(2781 + 1034))) then v89=v89 + (1 -0) ;else local v334=0;local v335;while true do if ((v334==(0 + 0 + 0)) or (4558==(13976 -9185))) then v335=831 -(564 + 267) ;while true do if ((((11779 -7668) + (1633 -1145))>=(12169 -(10746 -(287 + 1537)))) and ((0 + 0)==v335)) then v100[v102[2]]=v204;v89=v102[2 + 1 ];break;end end break;end end end break;end end break;end end end elseif ((v103<=(23 -6)) or (1479==(492 -(21 + 187)))) then if ((v103<=((18 + 32) -35)) or ((819 + 179)>=(3361 -(694 + 1255)))) then local v156=0;local v157;local v158;local v159;while true do if ((v156==(12 -(9 + (3 -1)))) or ((4841 -3127)>(645 + 1988))) then v159=nil;while true do if (((3 -(1 + 1))==v157) or ((2413 -1639)>=(79 + 1717))) then v100[v158 + (325 -(287 + 37)) ]=v159;v100[v158]=v159[v102[14 -10 ]];break;end if (((4562 -((2104 -(140 + 415)) + 151))>=(3630 -1670)) and (v157==0)) then v158=v102[1 + 1 ];v159=v100[v102[3]];v157=1;end end break;end if (((10687 -5954)>=(18466 -14594)) and (v156==(499 -(203 + 118 + 178)))) then v157=0 + 0 ;v158=nil;v156=1 + 0 ;end end elseif ((v103>((16 + 4) -4)) or ((5903 -2950)<204)) then if (((7028 -4176)>=(2080 -(23 + 1544))) and (v102[1948 -(591 + 1355) ]==v100[v102[4]])) then v89=v89 + (1303 -(340 + 962)) ;else v89=v102[1830 -(1303 + 524) ];end else v100[v102[2]]=v46[v102[5 -2 ]];end elseif (((3868 -(1029 + 214))<((9203 + 1485) -8008)) and (v103<=18)) then local v160=1981 -((805 -247) + 1423) ;local v161;local v162;while true do if ((((3146 -(1197 + 13)) -(277 + 278))<(630 + 3103)) and (v160==(0 -0))) then local v248=0;while true do if ((4624>=(6995 -4255)) and (v248==(0 -0))) then v161=0 -0 ;v162=nil;v248=1 -0 ;end if ((v248==(1 + (340 -(93 + 247)))) or ((2830 -938)>(1606 + 683 + (3727 -1667)))) then v160=1 + 0 ;break;end end end if ((v160==1) or ((8650 -(6387 -(369 + 1324)))<=(3058 -1394))) then while true do if (((3126 -(860 + 656))<(3548 -(736 + 626))) and (v161==(0 -0))) then v162=v102[2];v100[v162]=v100[v162](v14(v100,v162 + ((350 + 164) -(78 + 435)) ,v102[1347 -(1011 + 333) ]));break;end end break;end end elseif (((1299 + 2049)>(1469 + 632)) and (v103>(1075 -(958 + (161 -(49 + 14)))))) then local v207=0 -(0 -0) ;local v208;local v209;local v210;local v211;local v212;while true do if ((v207==(2 -1)) or ((8440 -5474)<=2615)) then v210=nil;v211=nil;v207=5 -3 ;end if ((2602>2166) and (v207==(0 -0))) then v208=0 + 0 + 0 ;v209=nil;v207=1657 -(1177 + 479) ;end if ((v207==(2 -0)) or (936==((2957 -1225) + 905))) then v212=nil;while true do if (((2870 -(273 + 645))==(9128 -(21949 -14773))) and (v208==(716 -(471 + 244)))) then v90=(v211 + v209) -1 ;v212=0 -0 ;v208=(2 -0) + 0 ;end if ((2155==((4949 -(418 + 544)) -1832)) and (v208==(2 + 0))) then for v317=v209,v90 do local v318=0;while true do if (((3160 -(423 + 158))<=(5773 -1493)) and (v318==(0 -0))) then v212=v212 + 1 ;v100[v317]=v210[v212];break;end end end break;end if ((v208==(181 -(37 + 144))) or ((14784 -11692)>=(5682 -(478 + 1107)))) then v209=v102[3 -1 ];v210,v211=v97(v100[v209](v14(v100,v209 + ((2386 -1583) -(502 + 300)) ,v102[1681 -(147 + 1531) ])));v208=1 + 0 ;end end break;end end else v100[v102[649 -(573 + 74) ]]();end elseif ((3592<=(171 + 4595)) and (v103<=((21 -13) + 23))) then if ((v103<=25) or ((3677 -1731)>(5033 -(907 + 713)))) then if ((4452>=(5512 -4216)) and (v103<=(60 -38))) then if (((217 + 61)>=(718 -((1050 -612) + 100))) and (v103>(5 + 16))) then if (v100[v102[2]] or ((1341 -857)>=(1500 -(381 + 401)))) then v89=v89 + (1041 -(1024 + 16)) ;else v89=v102[6 -3 ];end elseif (((2137 + 2124)==(597 + 415 + 3249)) and (v100[v102[1795 -(339 + 1454) ]]~=v102[1 + 3 ])) then v89=v89 + 1 ;else v89=v102[3];end elseif ((v103<=(70 -47)) or ((1242 + 150)==(4690 -2542))) then local v163=0 + 0 ;local v164;local v165;while true do if ((v163==1) or ((1527 -(208 + 38 + 66))==(464 + 516))) then while true do if ((2693<=(2543 + 791)) and (v164==(0 + 0))) then v165=v102[(3 + 0) -1 ];v100[v165]=v100[v165](v14(v100,v165 + ((1618 -(1339 + 276)) -(2 + 0)) ,v90));break;end end break;end if (((445 + 1773)<2471) and (v163==(0 -0))) then v164=0;v165=nil;v163=1 + 0 ;end end elseif (((5178 -(980 + 594))==(9450 -5846)) and (v103>(8 + 16))) then if (((134 + 169)<=4684) and  not v100[v102[1180 -((308 -205) + 1075) ]]) then v89=v89 + 1 + 0 ;else v89=v102[3 + 0 ];end else v100[v102[1 + 1 ]]={};end elseif (((9302 -(1142 + 3794))>=(131 + 401)) and (v103<=(612 -(290 + 294)))) then if ((v103<=(1 + 0 + 25)) or (((509 -372) -(101 + 9))>=4537)) then v100[v102[1612 -((1114 -(412 + 411)) + 1319) ]][v100[v102[(1450 -(148 + 1296)) -3 ]]]=v100[v102[4]];elseif ((364==(910 -546)) and (v103==(53 -26))) then v46[v102[3]]=v100[v102[5 -3 ]];else v100[v102[1892 -(256 + 1634) ]]=v100[v102[3]][v102[4]];end elseif ((v103<=29) or ((1422 + 2817)<(2669 + 615))) then for v185=v102[1 + 1 ],v102[1859 -(1428 + 428) ] do v100[v185]=nil;end elseif ((3927>=(4523 -(943 + 725))) and (v103>(61 -(522 -(436 + 55))))) then local v220=1441 -(1189 + 252) ;local v221;local v222;while true do if (((3377 + 1367)>=(2899 -1902)) and (v220==((544 -378) -(118 + 47)))) then while true do if (((2771 -(78 + 222 + 750))<2780) and (v221==(1029 -((564 -(152 + 14)) + 631)))) then v222=v100[v102[19 -15 ]];if (v222 or ((6143 -(67 + 1285))<(6929 -4106))) then v89=v89 + (2 -1) ;else local v336=(0 + 0) -0 ;local v337;while true do if (((4071 -(96 + 53))==3922) and (v336==(0 + 0))) then v337=0;while true do if ((v337==(0 -0)) or ((5626 -(400 + 582))<=(4519 -(1712 + 284)))) then v100[v102[1 + 1 ]]=v222;v89=v102[7 -4 ];break;end end break;end end end break;end end break;end if (((3814 -(1050 + 366))==(8589 -(550 + 5641))) and (v220==(858 -(752 + 106)))) then v221=0 + 0 ;v222=nil;v220=1;end end else v100[v102[5 -3 ]]=v43(v95[v102[2 + 1 ]],nil,v46);end elseif ((v103<=(10 + 26)) or ((1689 + 2498)<=((6009 -2273) -(136 + 654)))) then if ((v103<=(30 + 3)) or ((2956 -(1461 + 106))==(2116 -634))) then if ((v103==(87 -55)) or (838>4354)) then v89=v102[3];else local v169=0;local v170;local v171;while true do if (((5321 -(1836 + 13 + 30))==(1995 + 1447)) and (v169==(1392 -(417 + 974)))) then for v266=v170 + 1 ,v102[4] do v171=v171   .. v100[v266] ;end v100[v102[1 + 1 ]]=v171;break;end if (((721 + 2135)<(4346 -1385)) and (v169==(0 + 0))) then local v250=512 -(24 + 488) ;while true do if (((6293 -4169)>(1843 -(197 + 632))) and (v250==(974 -(262 + 711)))) then v169=1;break;end if ((3906>(30 + 2177)) and (v250==(0 + (0 -0)))) then v170=v102[521 -(42 + 476) ];v171=v100[v170];v250=2 -1 ;end end end end end elseif (((4765 -(44 + 114))>(2843 -(956 + 202))) and (v103<=(54 -(17 + (9 -6))))) then local v172=426 -(102 + 324) ;local v173;local v174;local v175;local v176;local v177;while true do if (((2526 + 885)<=4193) and (v172==(2 -1))) then v175=nil;v176=nil;v172=2 -0 ;end if ((v172==(1 + 1)) or (4866<=(1128 + 383))) then v177=nil;while true do if ((v173==(19 -(13 + 5))) or (2512<2423)) then local v287=0;while true do if ((v287==(0 -0)) or ((252 -128)>(5632 -1967))) then v176=v102[4];v177=1447 -(5 + 1442) ;v287=1;end if ((619==619) and (v287==1)) then v173=2;break;end end end if ((2902<(6871 -(176 + 1768))) and (v173==(1515 -(351 + 1164)))) then local v288=0 -0 ;while true do if (((4591 -2554)==(2257 -(27 + 193))) and (v288==(0 -0))) then v174=v102[1 + 1 ];v175={v100[v174]()};v288=934 -(219 + 714) ;end if (((5374 -(1375 + 183))>(1450 + 645)) and (v288==(1 -(0 -0)))) then v173=1;break;end end end if ((v173==(1 + 1)) or (1306==(2200 -1437))) then for v297=v174,v176 do local v298=0 + 0 ;local v299;local v300;while true do if (((6037 -(436 + 1316))>(734 + 315)) and (v298==(1 + 0))) then while true do if ((v299==(0 -0)) or ((276 + 190)>(2489 + 129))) then v300=666 -(514 + 152) ;while true do if ((3213<(6489 -(796 + 908))) and (v300==(0 -0))) then v177=v177 + 1 ;v100[v297]=v175[v177];break;end end break;end end break;end if (((919 -657)<3088) and (v298==(0 -0))) then v299=309 -(193 + 116) ;v300=nil;v298=1 + 0 ;end end end break;end end break;end if ((v172==0) or ((2768 -(4822 -3081))==((2577 + 1148) -(7 + 9)))) then v173=0 -0 ;v174=nil;v172=1256 -(665 + 590) ;end end elseif (((4190 + 130)>=(3532 -(37 + 66 + 367))) and (v103==(70 -35))) then local v224=0 -0 ;local v225;local v226;local v227;while true do if (((1864 -((1911 -1105) + 1058))==v224) or ((1237 -(22 + 18))>=(4872 -(312 + 1592)))) then local v270=0 + 0 ;while true do if ((1==v270) or ((996 -717)>(213 + 782))) then v224=(957 -(477 + 477)) -2 ;break;end if ((v270==(0 + 0)) or ((3782 -(406 + 68))<(5937 -(4314 -(1015 + 481))))) then v225=v102[1994 -(1280 + 712) ];v226=v100[v225 + 1 + (1 -0) ];v270=1944 -(1211 + 732) ;end end end if (((110 + 101)==((785 -331) -243)) and (v224==(142 -(61 + 80)))) then v227=v100[v225] + v226 ;v100[v225]=v227;v224=(2598 -(37 + 791)) -((2331 -660) + 97) ;end if (((38 -26)<3793) and (v224==((3 -1) + 0))) then if ((((926 + 342) -395)==(2903 -2030)) and (v226>((771 -(592 + 179)) -0))) then if ((v227<=v100[v225 + (1122 -(138 + 983)) ]) or ((1989 + 664)<=1752)) then local v321=0;local v322;while true do if ((v321==(654 -(374 + 280))) or ((4465 + 314)<((10789 -(45 + 1846)) -5292))) then v322=0;while true do if ((v322==(0 + 0)) or ((2445 + 751)>((9471 -3725) -(821 + 477)))) then v89=v102[2 + 1 ];v100[v225 + 3 ]=v227;break;end end break;end end end elseif (((3945 -(1479 + 15))>(765 -(585 + 73))) and (v227>=v100[v225 + 1 + 0 ])) then local v323=0 + 0 ;local v324;while true do if ((v323==(0 -(0 -0))) or (((6093 -1724) -1737)<(2328 -(51 + 167 + 41)))) then v324=0 + 0 ;while true do if (((528 + (75 -20))>((7826 -5874) -(1786 + 122))) and (v324==0)) then v89=v102[1 + 2 ];v100[v225 + (10 -7) ]=v227;break;end end break;end end end break;end end else local v228=1481 -(1062 + 419) ;local v229;local v230;while true do if (((292 -((369 -172) + 94))==v228) or ((3685 -(1162 + 552))==(37 + 514))) then while true do if (((1422 -(307 + 462))<(13341 -(6337 + 2472))) and (v229==(0 -0))) then v230=v102[9 -7 ];v100[v230](v14(v100,v230 + (250 -(184 + 65)) ,v90));break;end end break;end if (((9097 -6952)>(301 -181)) and (v228==0)) then v229=894 -(763 + 131) ;v230=nil;v228=1 -0 ;end end end elseif ((v103<=(400 -(36 + 325))) or ((4209 -(1312 + 268))<=(3523 -1547))) then if (((5650 -2641)==(3288 -(46 + 233))) and (v103<=(1565 -(1156 + 372)))) then local v178=1037 -(893 + 144) ;local v179;local v180;local v181;local v182;local v183;while true do if ((v178==(3 -2)) or ((4131 -((2374 -1530) + 552))>((4506 -(21 + 331)) -(103 + 391)))) then v181=nil;v182=nil;v178=1 + 1 ;end if ((v178==(2 + 0)) or (2281>=(1475 + 1660))) then v183=nil;while true do if ((v179==(4 -2)) or ((5751 -(983 + 894))>=((37071 -25516) -7451))) then for v301=v180,v90 do local v302=0 + 0 ;while true do if (((8791 -4556)>=2523) and (v302==0)) then v183=v183 + 1 + 0 ;v100[v301]=v181[v183];break;end end end break;end if (((2815 -(104 + 5))>=(3438 -1920)) and (v179==0)) then v180=v102[2];v181,v182=v97(v100[v180](v14(v100,v180 + (1385 -(1270 + 114)) ,v90)));v179=(1001 -(37 + 962)) -1 ;end if ((v179==(2 -1)) or (3064==(1752 -(216 + 947)))) then local v290=0 + 0 ;while true do if ((v290==(1 + 0)) or ((6398 -(1503 + 313))<=(2798 -(510 + 1306)))) then v179=1776 -(25 + 1749) ;break;end if (((4107 + 345)>=(7645 -(3770 + 1913))) and ((0 -0)==v290)) then v90=(v182 + v180) -(2 -1) ;v183=827 -(154 + 673) ;v290=(2787 -(1295 + 655)) -(284 + 552) ;end end end end break;end if ((v178==(1222 -(144 + 676 + 402))) or ((2854 -(989 + 554))>(3519 -(657 + (983 -762))))) then v179=619 -((532 -335) + 422) ;v180=nil;v178=1 -0 ;end end elseif ((2464>(1821 -(553 + 193))) and (v103>((222 + 350) -(166 + 117 + 251)))) then local v231=0 -0 ;local v232;local v233;local v234;local v235;local v236;while true do if ((1622<=(4442 -(178 + 230))) and (v231==(1 + 1))) then v236=nil;while true do if (((1054 + (8247 -5069))>(786 -565)) and ((5 -3)==v232)) then for v325=v233,v90 do local v326=0;local v327;local v328;while true do if ((v326==(1 + 0)) or ((943 + 342)>(1341 + 2248))) then while true do if ((v327==(1430 -(1132 + 298))) or ((164 -(79 + 35))>=(4415 -(482 + 235)))) then v328=0 + 0 ;while true do if ((((9157 -5885) -1845)<2255) and (v328==(0 + 0 + 0))) then v236=v236 + ((3450 -(1505 + 72)) -(1064 + 808)) ;v100[v325]=v234[v236];break;end end break;end end break;end if ((v326==(0 + 0)) or ((3167 -1593)>=(3519 -(839 + 880)))) then v327=(2776 -1246) -((1536 -785) + 779) ;v328=nil;v326=763 -((969 -633) + 426) ;end end end break;end if ((v232==((0 -0) -0)) or ((1171 + 827)>=(5005 -(970 + 840)))) then local v313=0 -0 ;while true do if ((v313==((115 + 869) -(400 + 583))) or ((1249 -(175 + (2134 -1332)))>(3282 + 597))) then v232=3 -2 ;break;end if ((v313==(292 -(178 + 114))) or ((155 + 253)==(9010 -5147))) then v233=v102[2 + 0 ];v234,v235=v97(v100[v233](v100[v233 + (1 -0) ]));v313=1 + 0 + 0 ;end end end if ((v232==(1 + 0)) or (2169>(199 + 3832))) then local v314=1117 -(39 + 1078) ;while true do if ((v314==0) or ((3409 -2500)>=(16668 -12467))) then v90=(v235 + v233) -1 ;v236=0 + 0 ;v314=4 -3 ;end if (((202 + 1752)<=(9692 -6380)) and (v314==(1 + 0))) then v232=2 + 0 ;break;end end end end break;end if ((v231==(777 -(761 + 15))) or ((268 -92)>=(2561 -(167 + 144)))) then v234=nil;v235=nil;v231=1 + 1 ;end if ((4306==(5552 -(359 + 887))) and (v231==(0 -0))) then v232=0 + 0 ;v233=nil;v231=1;end end else v100[v102[2 + 0 ]]=v102[(6 + 457) -(152 + 308) ];end elseif ((((711 + 380) -645)<2920) and (v103<=((155 + 215) -(50 + 280)))) then v100[v102[2 -0 ]]=v100[v102[(2920 -2212) -(231 + 474) ]]%v102[4] ;elseif ((v103==(193 -152)) or ((6057 -3891)<(958 -670))) then v100[v102[1 + 1 ]]=v102[3] + v100[v102[(3156 -2087) -(433 + 632) ]] ;else v100[v102[1829 -(1451 + 376) ]]=v100[v102[3]];end v89=v89 + (1798 -(65 + 1732)) ;break;end end break;end end end end A,B=v41(v12(v93));if  not A[1] then local v109=v44[4][v89] or "?" ;error("Script error at ["   .. v109   .. "]:"   .. A[2] );else return v14(A,2,B);end end;end if (v69==0) then v70=v44[1];v71=v44[2];v69=1;end end end return v43(v42(),{},v26)(...);end;v16("LOL!",v10(),...);break;end end end
