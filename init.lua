--[[
  _   _                           _        __     ____   
 | | | | _____  ____ ___   ____ _| |_ ___  \ \   / / /_  
 | |_| |/ _ \ \/ / _` \ \ / / _` | __/ _ \  \ \ / / '_ \ 
 |  _  |  __/>  < (_| |\ V / (_| | ||  __/   \ V /| (_) |
 |_| |_|\___/_/\_\__,_| \_/ \__,_|\__\___|    \_/  \___/ 
      Lua Obfiscuator | Made By HexerMaster1929#5087                                                                      

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v30=nil;v30=function(v31,v32,v33)local v39=0;local v40;local v41;local v42;while true do if (v39==0) then v40=v31[1];v41=v31[2];v39=1;end if (1==v39) then v42=v31[3];return function(...)local v76=1;local v77= -1;local v78={...};local v79=v12("#",...) -1 ;local function v80()local v81=v40;local v82=v41;local v83=v42;local v84=v28;local v85={};local v86={};local v87={};for v91=0,v79 do if (((5433 -(1719 -(24 + 11)))>3296) and (v91>=v83)) then v85[v91-v83 ]=v78[v91 + (176 -(70 + 105)) ];else v87[v91]=v78[v91 + (1894 -(626 + 1267)) ];end end local v88=(v79-v83) + 1 ;local v89;local v90;while true do local v92=0;while true do if ((v92==(253 -(98 + (905 -(317 + 434))))) or (2782>=3940)) then if ((v90<=(64 -44)) or ((13100 -8392)==((475 + 6047) -3264))) then if (((360 + 1578)<=(10179 -6019)) and (v90<=9)) then if (((2044 -(1125 + 585))<=(1791 + 877)) and (v90<=4)) then if ((1501<=(6338 -4344)) and (v90<=(3 -2))) then if ((3700<=(2711 + 1687 + 318)) and (v90==(0 + 0))) then local v126=0;local v127;while true do if (((435 -101)==(786 -452)) and (v126==0)) then v127=v89[2];v87[v127]=v87[v127](v87[v127 + 1 + 0 ]);break;end end else local v128=0;local v129;local v130;local v131;local v132;while true do if ((v128==(2 -0)) or ((5084 -(723 + 1196))==(1280 -552))) then for v238=v129,v77 do local v239=0 + 0 ;while true do if (((1599 -(656 + 255))>148) and (v239==(0 -0))) then v132=v132 + 1 ;v87[v238]=v130[v132];break;end end end break;end if (((6864 -3613)>=(327 + 2413)) and (v128==(1 + 0))) then v77=(v131 + v129) -(1262 -(451 + 810)) ;v132=0 + (0 -0) ;v128=427 -((372 -222) + 275) ;end if ((v128==0) or (((10126 -6615) -(1299 + 228))>(3096 -(362 + 572)))) then local v234=0 + 0 ;while true do if (((1192 -465)<(13 + 1562)) and (v234==(1 + 0))) then v128=1 + 0 ;break;end if (((5014 -(974 + 776))>(2934 -1924)) and (v234==(1925 -(1796 + 129)))) then v129=v89[(707 + 439) -(9 + 1135) ];v130,v131=v84(v87[v129](v87[v129 + 1 + 0 ]));v234=209 -(116 + 92) ;end end end end end elseif ((v90<=(6 -4)) or ((921 + 283)>=(16108 -(11557 -(7 + 148))))) then local v133=0 + 0 ;local v134;local v135;local v136;local v137;local v138;while true do if ((2767>=(2959 -(269 + 1310))) and (v133==(829 -(398 + 430)))) then v136=nil;v137=nil;v133=1 + 1 ;end if ((v133==(0 + 0)) or ((2867 -1499)==(3347 -(416 + 981)))) then v134=0 + 0 ;v135=nil;v133=1 + 0 ;end if (((339 + 3671)>=2794) and (v133==(592 -(257 + 333)))) then v138=nil;while true do if ((((6001 -2533) -(889 + 456))>=1312) and (v134==(1562 -((845 -469) + 1186)))) then local v258=0 -0 ;while true do if (((71 + 706)>=(299 -89)) and ((400 -(364 + 35))==v258)) then v134=1 + 0 ;break;end if ((v258==(0 + (0 -0))) or ((749 + 814)>=3821)) then v135=1950 -(59 + 1627 + 264) ;v136=nil;v258=(2343 -(610 + 353)) -(711 + 668) ;end end end if ((v134==(2 -1)) or (((20101 -(1123 + 496)) -14166)<=(6 + 163))) then local v259=1002 -((2558 -1690) + 134) ;while true do if ((v259==1) or ((906 + 1247)==(6246 -(1538 + 453)))) then v134=1333 -(641 + 690) ;break;end if (((527 + 2812)==(10659 -7320)) and (v259==(0 + 0))) then v137=nil;v138=nil;v259=1 + 0 ;end end end if (((11928 -7460)>=(4011 -(58 + 655))) and (v134==(118 -(29 + 87)))) then while true do if ((v135==(1 + 1)) or ((2201 + 1207)<=(3097 -(96 + 1342)))) then for v308=1 + 0 ,v89[(2478 -(652 + 222)) -(1119 + 251 + 230) ] do local v309=0 -0 ;local v310;local v311;while true do if ((v309==(1 + (513 -(59 + 454)))) or ((4630 -3463)<(1658 -(328 + 767)))) then while true do if ((v310==0) or ((2811 + 1211)>(2359 + 2155))) then v76=v76 + 1 + 0 ;v311=v81[v76];v310=1 + 0 ;end if ((v310==(1 + 0)) or ((2662 + 24)>(4700 -(235 + 140)))) then if ((v311[418 -(285 + 132) ]==(17 + 19)) or ((3414 -(403 + 1484))==(1840 + 830))) then v138[v308-(1 + 0) ]={v87,v311[3]};else v138[v308-(1 -0) ]={v32,v311[1908 -(757 + 1148) ]};end v86[ #v86 + 1 ]=v138;break;end end break;end if (((2640 + 986)>=(511 + 2009)) and (v309==(0 + 0))) then v310=0 -0 ;v311=nil;v309=2 -1 ;end end end v87[v89[(34 -27) -5 ]]=v30(v136,v137,v33);break;end if ((v135==(1462 -(815 + 646))) or ((4444 -(1352 + 440))>=(21233 -16454))) then local v283=0 + 0 ;local v284;while true do if ((v283==(1847 -(556 + 1291))) or ((7368 -5445)==(1578 + 1247))) then v284=646 -(628 + 18) ;while true do if ((1866<=(7495 -4714)) and (v284==(1 + 0))) then v135=3 -1 ;break;end if ((v284==(0 + 0)) or ((3951 + 557)==649)) then v138={};v137=v10({},{__index=function(v337,v338)local v355=0;local v356;while true do if (((2069 + 2730)>=(1625 -(605 + (1688 -1003)))) and (v355==(0 -0))) then local v377=0 + 0 ;while true do if ((v377==0) or ((1267 + 964)>(4483 -(307 + 1665)))) then v356=v138[v338];return v356[(995 -(399 + 594)) -1 ][v356[(1273 -(291 + 981)) + 1 ]];end end end end end,__newindex=function(v337,v338,v339)local v357=(1934 -(819 + 400)) -(171 + 544) ;local v358;local v359;while true do if (((3905 -1119)<(5642 -(1373 + 487))) and (v357==((0 -0) + 0))) then v358=0 -0 ;v359=nil;v357=890 -(876 + 13) ;end if (((4619 -(866 + 348))<(10079 -5824)) and ((2 -1)==v357)) then while true do if ((1549<(11249 -6612)) and (0==v358)) then v359=v138[v338];v359[1 -(0 -0) ][v359[2 -0 ]]=v339;break;end end break;end end end});v284=1 + 0 ;end end break;end end end if (((2423 -(4 + 434))<=(8103 -6017)) and (v135==0)) then local v285=0 -0 ;while true do if ((v285==(1 + 0)) or ((2564 -((1540 -1117) + 374))==4131)) then v135=3 -2 ;break;end if (((5380 -4183)==1197) and (v285==(0 -0))) then local v329=0 + 0 ;while true do if ((v329==(947 -(817 + 130))) or ((1311 + 797)>4725)) then v136=v82[v89[6 -3 ]];v137=nil;v329=1;end if (((13426 -(10108 -(153 + 1188)))>4073) and (v329==1)) then v285=1 + 0 ;break;end end end end end end break;end end break;end end elseif ((v90==(2 + 1)) or (2166>=(7929 -3091))) then if ((((14982 -(1792 + 95)) -9924)==((9411 -(202 + 1092)) -4946)) and v87[v89[2]]) then v76=v76 + 1 + 0 ;else v76=v89[13 -10 ];end else v87[v89[978 -((498 -237) + (1569 -(11 + 843))) ]]=v87[v89[3 + 0 ]]%v87[v89[(826 + 1035) -(766 + 1091) ]] ;end elseif ((v90<=(6 + 0)) or ((6650 -4018)>=(5526 -(113 + 1267)))) then if ((v90==5) or (394>=(1316 + 180))) then v87[v89[6 -4 ]]();else local v139=681 -(291 + 390) ;local v140;local v141;local v142;local v143;while true do if ((v139==(0 -0)) or ((1431 + 283)>(622 + 2502))) then v140=0 + 0 ;v141=nil;v139=1 -0 ;end if ((v139==(3 -1)) or (1767>2264)) then while true do if ((1121<(2825 -(257 + (1931 -(348 + 654))))) and (v140==(279 -(274 + 5)))) then local v260=0;while true do if ((v260==(0 -0)) or ((950 + 160)==(3118 + 75))) then v141=0 + 0 ;v142=nil;v260=367 -(143 + 223) ;end if ((4131>(4009 -(387 + (163 -50)))) and ((2 -1)==v260)) then v140=1 + 0 ;break;end end end if (((6248 -(487 + 714 + 741))>(4380 -((2272 -(482 + 757)) + 147 + 0))) and (v140==(1 -0))) then v143=nil;while true do if (((3751 -(80 + 751))<=3743) and ((471 -(222 + 248))==v141)) then v87[v142 + (104 -(85 + 18)) ]=v143;v87[v142]=v143[v89[4 + 0 ]];break;end if ((v141==(0 + 0)) or (3908<=(1956 -(223 + 947)))) then local v289=0;local v290;while true do if ((v289==(289 -(240 + 24 + 25))) or ((3248 -(523 + 905))<(472 + 1211))) then v290=0;while true do if (((429 + 4487)==(7886 -2970)) and (v290==(0 -0))) then local v341=1519 -(990 + (2523 -1994)) ;while true do if ((v341==(2 -1)) or ((606 -362)>(4891 -(1204 + 769)))) then v290=1 + 0 ;break;end if ((v341==(0 + 0)) or ((2326 + 146)<(224 -(49 + 54)))) then v142=v89[2];v143=v87[v89[8 -(2 + 3) ]];v341=1 + 0 ;end end end if ((((1468 -(783 + 684)) + 0)==v290) or ((12910 -8921)<=(4114 -(4567 -1868)))) then v141=1239 -(166 + 1072) ;break;end end break;end end end end break;end end break;end if ((v139==(1335 -(945 + 389))) or ((478 + 1114)>=(5881 -((1234 -(839 + 27)) + 857)))) then v142=nil;v143=nil;v139=169 -(109 + 58) ;end end end elseif ((v90<=(1675 -(801 + 867))) or ((4313 -3067)>(4361 + 533))) then local v144=0;local v145;local v146;local v147;local v148;local v149;local v150;while true do if ((v144==(1859 -(77 + 890 + 890))) or ((1696 + 357)>=(8440 -5302))) then v149=nil;v150=nil;v144=3;end if ((3874==(4727 -(364 + 489))) and (v144==1)) then v147=nil;v148=nil;v144=2;end if ((v144==(3 + 0)) or ((8721 -(10200 -4140))<=(2870 -((548 -326) + 240)))) then while true do if (((2991 -1968)<=(1986 -(304 + 576))) and (v145==(0 + 0))) then local v261=1732 -((2511 -(566 + 605)) + 392) ;while true do if (((3449 -1048)>(196 + 363)) and (v261==1)) then v145=1833 -(1342 + 490) ;break;end if ((v261==0) or (4976<153)) then v146=0 + 0 ;v147=nil;v261=1 + 0 ;end end end if (((1 + 1)==v145) or (1585<(958 -(555 + 268)))) then v150=nil;while true do if (((2854 + 1636)>2632) and (v146==(1 + 0))) then local v291=740 -(275 + 465) ;local v292;while true do if ((((4230 -(257 + 108)) -2815)<(241 + 1087)) and (v291==(0 -0))) then v292=982 -(192 + 790) ;while true do if ((v292==1) or ((524 + 1136)<(2122 -1430))) then v146=2 -0 ;break;end if ((v292==(1599 -(346 + 1253))) or ((439 + 410)<((2669 -893) -(780 + 221)))) then v77=(v149 + v147) -((6 -3) -2) ;v150=0 -0 ;v292=1 + 0 ;end end break;end end end if (((13348 -9860)>((689 -264) -(94 + 136))) and (v146==(0 -0))) then local v293=748 -(47 + 141 + 560) ;local v294;while true do if ((v293==0) or ((1143 + 303)>=(2536 + 1416))) then v294=0;while true do if ((v294==(0 -0)) or ((1050 + 1588)<=748)) then v147=v89[530 -((510 -376) + 394) ];v148,v149=v84(v87[v147](v13(v87,v147 + ((1280 -(16 + 1263)) -0) ,v89[3])));v294=1723 -(570 + 1152) ;end if ((v294==1) or ((6685 -4096)>(4864 -(204 + 604)))) then v146=191 -(28 + 10 + 152) ;break;end end break;end end end if (((2676 -1864)>=760) and (v146==(1412 -(268 + 1142)))) then for v312=v147,v77 do local v313=0 + 0 ;local v314;while true do if (((2864 -(873 + 759 + 24))<=(16526 -12220)) and ((0 -(0 -0))==v313)) then v314=0 -0 ;while true do if ((v314==(0 + 0)) or ((4822 -(48 + 828))<(4218 -1210))) then v150=v150 + 1 ;v87[v312]=v148[v150];break;end end break;end end end break;end end break;end if ((1==v145) or ((3008 -(1467 + 195))>=(3075 -(63 + 136)))) then v148=nil;v149=nil;v145=2 -0 ;end end break;end if ((v144==(0 -0)) or ((6221 -(5342 -3306))==1403)) then v145=0;v146=nil;v144=1920 -(1401 + 518) ;end end elseif (((1020 + 2244 + 294)>=2585) and (v90>(1056 -(746 + 302)))) then local v186=1406 -(112 + 1294) ;local v187;local v188;while true do if (((78 -41)<=(136 + 1589)) and (v186==(1865 -(898 + 967)))) then v187=1216 -(866 + 350) ;v188=nil;v186=1;end if (((1841 -1288)<(620 + 142)) and (v186==(258 -(198 + 59)))) then while true do if (((5886 -(472 + (1745 -685)))>(5307 -2234)) and (v187==0)) then v188=v89[4 -2 ];v87[v188](v87[v188 + 1 + 0 ]);break;end end break;end end else for v235=v89[755 -(623 + 130) ],v89[1 + 2 ] do v87[v235]=nil;end end elseif (((1415 -859)<=(2876 -(188 + 234))) and (v90<=14)) then if ((v90<=11) or ((528 + 2144)<=(3429 -(19 + 156 + 1009)))) then if ((v90>(3 + 7)) or ((199 + 2872)==(3095 -(422 + 918)))) then v87[v89[1 + 1 ]]=v87[v89[3]][v89[6 -2 ]];else local v153=1761 -(1477 + 284) ;local v154;while true do if ((v153==(0 -0)) or ((5708 -4563)>=(4155 -(807 + 85)))) then v154=v89[2 -0 ];do return v87[v154](v13(v87,v154 + (1568 -(1125 + 442)) ,v89[3 + 0 ]));end break;end end end elseif (((62 + (446 -(7 + 157)))<=1183) and (v90<=(33 -(1367 -(273 + 1073))))) then local v155=951 -(115 + 836) ;local v156;local v157;while true do if (((913 + 863)<=4785) and (v155==0)) then v156=1931 -(748 + (2499 -(412 + 904))) ;v157=nil;v155=(1 + 1) -1 ;end if ((v155==1) or ((4731 -(33 + 794))<=(705 + 768))) then while true do if ((v156==(0 + 0 + 0)) or ((510 -315)==(11566 -7610))) then v157=v89[(478 -(459 + 18)) + 1 + 0 ];v87[v157]=v87[v157]();break;end end break;end end elseif (((1527 + 890)<(1941 + 865)) and (v90>(2 + (22 -11)))) then v87[v89[2 + 0 ]]=v87[v89[8 -5 ]] -v89[4] ;else v87[v89[2]]=v87[v89[1 + 2 ]]%v89[4 -0 ] ;end elseif ((v90<=(78 -(50 + 11))) or (3319>(3794 -(9 + 0 + 152)))) then if ((2953>642) and (v90<=(297 -(145 + 137)))) then local v158=889 -(34 + 855) ;local v159;local v160;local v161;local v162;local v163;local v164;while true do if ((v158==(4 -2)) or ((6646 -(2437 + 1035))>=((6020 -(1027 + 64)) -(39 + 16)))) then v163=nil;v164=nil;v158=3;end if (((6881 -2670)>=(4151 -3289)) and (v158==(0 + 0))) then v159=0;v160=nil;v158=2 -1 ;end if ((3394>=2839) and (((4 + 5) -6)==v158)) then while true do if (((5291 -(250 + 893))==(9962 -5814)) and (v159==2)) then v164=nil;while true do if (((14664 -(20262 -8553))>=(2086 -1295)) and (v160==(1 -0))) then local v295=(80 + 361) -(150 + 291) ;local v296;while true do if (((1461 -(982 + 479))==v295) or ((3291 -(297 + 1127))<(915 -555))) then v296=0 + 0 ;while true do if ((v296==0) or ((2300 + 1320)<=(130 + (42 -20)))) then local v343=0 + 0 + 0 ;while true do if (((5534 -(1256 + 412))>2421) and (v343==0)) then v77=(v163 + v161) -(1 + 0) ;v164=1181 -(442 + 739) ;v343=2 -1 ;end if ((((6694 -(1550 + 184)) -(755 + 874))>(5552 -2764)) and (v343==(3 -2))) then v296=1;break;end end end if (((3 -2)==v296) or (((13694 -10218) + 321)>(5721 -(19 + 1250)))) then v160=1391 -(1064 + 325) ;break;end end break;end end end if (((997 + 984)<=(6783 -4000)) and (v160==(25 -(11 + 12)))) then for v315=v161,v77 do local v316=0 -0 ;while true do if ((4842==(20127 -15285)) and ((0 + 0)==v316)) then v164=v164 + 1 ;v87[v315]=v162[v164];break;end end end break;end if ((2373<3901) and (v160==(0 -0))) then local v297=808 -(760 + 48) ;local v298;while true do if ((v297==(1265 -(722 + 543))) or ((4905 -(260 + 13))>=((11617 -(170 + 973)) -(9001 -3237)))) then v298=0;while true do if (((5779 -2591)>794) and (v298==(0 -0))) then local v344=1331 -(511 + 820) ;while true do if (((6749 -3521)>(3297 -(1103 + 637))) and (v344==(571 -(9 + 562)))) then v161=v89[2];v162,v163=v84(v87[v161](v13(v87,v161 + (2 -(287 -(222 + 64))) ,v77)));v344=2 -1 ;end if (((8812 -5297)==3515) and (v344==(1 + 0))) then v298=2 -1 ;break;end end end if (((4464 -1430)==3034) and (v298==(798 -(323 + 474)))) then v160=1;break;end end break;end end end end break;end if ((v159==1) or ((17395 -12452)==3901)) then v162=nil;v163=nil;v159=7 -5 ;end if ((v159==0) or ((3422 -(1602 + 427))>((1309 + 9890) -(8905 -(991 + 495))))) then v160=0 -0 ;v161=nil;v159=571 -(157 + 413) ;end end break;end if (((73 + 4391)==4464) and (v158==(531 -(318 + (240 -(20 + 8)))))) then v161=nil;v162=nil;v158=2;end end elseif ((3882==(8026 -4144)) and (v90==16)) then v87[v89[5 -3 ]]={};else local v192=366 -(262 + 104) ;local v193;local v194;while true do if (((3977 -(319 + 1309))<=(741 + 3610)) and (v192==(1716 -(137 + 1579)))) then v193=0 + 0 + 0 ;v194=nil;v192=1 + 0 ;end if (((17030 -12771)>=(4362 -(259 + 1068))) and (v192==(1 -0))) then while true do if (((17010 -12807)>=(1756 -(13 + 5 + 0))) and (v193==(0 + 0))) then v194=v89[2 + 0 + 0 ];v87[v194]=v87[v194](v13(v87,v194 + ((1 -0) -0) ,v77));break;end end break;end end end elseif (((2211 -(693 + 172))<=(335 + 1625)) and (v90<=(1394 -(1315 + 61)))) then v87[v89[2]]=v89[1054 -(897 + 154) ] + v87[v89[2 + 2 ]] ;elseif (((9446 -5398)>(1358 -(725 + 548))) and (v90==19)) then v87[v89[1872 -(1734 + 136) ]]=v87[v89[7 -4 ]] + v89[4] ;elseif (((5790 -(3 + 599 + 614))>=(1763 + 1264)) and (v87[v89[1 + 1 ]]~=v89[(1280 + 419) -(955 + 740) ])) then v76=v76 + (210 -(109 + 100)) ;else v76=v89[3];end elseif (((180 + 1077)<(32 + 2777)) and (v90<=31)) then if ((v90<=25) or ((1421 + 1239)>=(5045 -((253 -106) + 388)))) then if (((12700 -8418)>=160) and (v90<=(17 + 5))) then if ((3230>=((2425 -(4 + 17)) -(519 + 154))) and (v90>21)) then local v166=0;local v167;local v168;while true do if ((v166==(0 + 0)) or ((1667 -(617 + 441))>=(1771 + 600))) then v167=1495 -(663 + 832) ;v168=nil;v166=1 + 0 ;end if ((v166==(1 + 0)) or (3846>=(11786 -6849))) then while true do if (((3058 + 822)>=(5225 -(521 + 1035))) and (v167==(0 -(0 + 0)))) then v168=v89[1 + 1 ];do return v13(v87,v168,v77);end break;end end break;end end else v87[v89[2]][v87[v89[2 + 1 ]]]=v87[v89[16 -12 ]];end elseif (((4510 -2049)<((10232 -6968) + 898)) and (v90<=(10 + 13))) then if ((v87[v89[3 -1 ]]==v89[2 + 2 ]) or ((1695 -827)>(694 + 1748))) then v76=v76 + 1 + 0 ;else v76=v89[1 + 2 ];end elseif (((6824 -(1093 + 820))>=(2405 + (6478 -4759))) and (v90>(288 -(115 + 149)))) then v87[v89[2 + 0 ]]=v33[v89[3]];else v76=v89[3];end elseif ((v90<=(63 -35)) or ((244 -75)>=(3513 -(72 + 367)))) then if ((v90<=(24 + 2)) or (1066>=(11 + 1338))) then v87[v89[2]]=v32[v89[748 -(86 + 659) ]];elseif (((1011 + 1477)<3675) and (v90>(1029 -(411 + 591)))) then v87[v89[992 -(484 + 506) ]]=v30(v82[v89[2 + 1 ]],nil,v33);else local v201=0 -0 ;local v202;local v203;local v204;local v205;local v206;while true do if ((v201==(1 -(0 + 0))) or ((7770 -4511)>=(2717 + 1349))) then v204=nil;v205=nil;v201=1 + 1 ;end if ((v201==(0 + 0)) or (2484<(2551 -(177 + 1015)))) then v202=0;v203=nil;v201=1 + 0 ;end if ((699<(5545 -(72 + 628))) and (v201==2)) then v206=nil;while true do if (((4298 -1931)>=(1663 -((165 -117) + 900))) and (v202==(2 + (45 -(32 + 13))))) then while true do if ((2690<=(5495 -(103 + 789))) and (v203==2)) then if (((2054 + 271)<3400) and (v205>((0 -0) -0))) then if ((2083>(423 + 123)) and (v206<=v87[v204 + (716 -(576 + 139)) ])) then local v345=0 -0 ;local v346;local v347;while true do if ((v345==(2 -(3 -2))) or (438>=((5265 -3642) -1160))) then while true do if (((0 + 0)==v346) or ((3106 -(1102 + 745))>(5177 -(362 + 475)))) then v347=0;while true do if ((1185<=(1321 + 383)) and ((625 -(93 + (2126 -1594)))==v347)) then v76=v89[8 -5 ];v87[v204 + 3 ]=v206;break;end end break;end end break;end if ((4311>(101 + 2923)) and (v345==((2308 -1381) -(756 + 171)))) then v346=0 + 0 ;v347=nil;v345=330 -(26 + 303) ;end end end elseif ((v206>=v87[v204 + (3 -2) ]) or (((1489 -(289 + 269)) + 1557)>=(10637 -6255))) then local v348=0;local v349;local v350;while true do if ((v348==1) or (4811<=(4533 -(46 + 108)))) then while true do if (((3127 -(1683 + 44 + 98))<=(1760 + 1251)) and ((0 -0)==v349)) then v350=0 + 0 ;while true do if (((5129 -(399 + 682))>=2272) and (v350==((0 -0) + 0))) then v76=v89[272 -(226 + 43) ];v87[v204 + 3 + 0 ]=v206;break;end end break;end end break;end if ((3838==(3943 -((167 -107) + 45))) and (v348==(1926 -(814 + 381 + 731)))) then v349=0 -0 ;v350=nil;v348=1826 -((598 -(173 + 45)) + 1445) ;end end end break;end if ((((1997 -(114 + 265)) -1023)<(3670 -(1642 + 48))) and (v203==(0 -0))) then local v319=0;local v320;while true do if ((v319==(0 + 0)) or (2511<(977 -(81 + 7)))) then v320=0 + (0 -0) ;while true do if (((1116 -(463 + 517))<(4742 -((1348 -(223 + 73)) + 782))) and (v320==(0 + 0))) then local v369=0;while true do if (((2817 -890)<(1124 + 1194)) and (v369==(0 + (47 -(17 + 30))))) then v204=v89[2];v205=v87[v204 + (1779 -(211 + 79 + 1487)) ];v369=2 -1 ;end if ((v369==(806 -(791 + 14))) or ((765 + 230)>=(2672 -(656 + 154)))) then v320=1;break;end end end if ((v320==(1 + 0)) or ((3205 -(22 + 237))==(80 -38))) then v203=1;break;end end break;end end end if ((v203==((307 -(6 + 298)) -2)) or (4410<=(8966 -6088))) then local v321=1046 -(844 + 202) ;local v322;while true do if ((v321==0) or ((3484 + 75)<(297 + 65))) then v322=1107 -(893 + 214) ;while true do if ((496<(6617 -1985)) and (v322==1)) then v203=2 + 0 ;break;end if (((3932 -(1210 + 359))==(3027 -((1624 -(663 + 378)) + 81))) and ((0 + 0)==v322)) then local v370=0;while true do if (((0 + (0 -0))==v370) or (((1643 -917) -374)>(3347 + 1055))) then v206=v87[v204] + v205 ;v87[v204]=v206;v370=212 -(208 + 3) ;end if (((2759 -(526 + 529))<(3916 + 826)) and (v370==(1 + 0))) then v322=1 + 0 ;break;end end end end break;end end end end break;end if ((v202==0) or (3979>(16083 -11971))) then local v276=697 -(80 + 617) ;while true do if ((((2018 -(455 + 514)) + 2536)==((3343 -(788 + 571)) + 1601)) and (v276==1)) then v202=(1747 -594) -(1114 + 38) ;break;end if ((v276==(748 -(450 + 298))) or ((1898 -(219 + 242))>((6892 -(1147 + 428)) -3865))) then v203=0;v204=nil;v276=1 + 0 ;end end end if (((3928 -((6680 -5262) + 392))<(392 + 314 + 2187)) and (v202==1)) then local v277=0 + 0 ;while true do if ((v277==(0 -0)) or ((5611 -(814 + 34))<(1559 + 611))) then v205=nil;v206=nil;v277=709 -(388 + (620 -(18 + 282))) ;end if (((2260 -(1004 + 341))>=384) and (v277==(1 -0))) then v202=2 + 0 ;break;end end end end break;end end end elseif ((v90<=((26 + 33) -30)) or ((9791 -7414)==(335 + 978))) then if (((670 + 2016)>(6457 -4018)) and  not v87[v89[6 -4 ]]) then v76=v76 + 1 ;else v76=v89[(1842 -(438 + 1403)) + 2 ];end elseif ((v90==((529 -(207 + 297)) + 5)) or (3631<(2851 + (1081 -(572 + 122))))) then local v208=0 -0 ;local v209;while true do if ((4704>(552 + 660)) and (v208==(0 + 0))) then v209=v87[v89[525 -(411 + 110) ]];if (((859 -(192 + 310))==(881 -(124 + 400))) and v209) then v76=v76 + (771 -(606 + 164)) + (1633 -(218 + 1415)) ;else local v268=0 + 0 ;local v269;local v270;while true do if ((v268==((1296 -776) -(269 + 250))) or (1355>=(6025 -4461))) then while true do if (((1652 + 1185)>(1350 -(32 + (618 -(150 + 464))))) and (v269==(0 -0))) then v270=0;while true do if (((4532 -((717 -(123 + 89)) + 884))>=(678 -381)) and (v270==(0 -0))) then v87[v89[2]]=v209;v76=v89[1 + 2 ];break;end end break;end end break;end if (((3825 + 98)==3923) and (v268==(0 + 0))) then v269=1951 -(351 + 1600) ;v270=nil;v268=143 -(6 + 136) ;end end end break;end end else local v210=0 + 0 ;local v211;local v212;local v213;while true do if ((0==v210) or (2562>(3944 -(378 + 266)))) then local v244=0 -(857 -(147 + 710)) ;while true do if ((4943>(5448 -(957 + 25))) and (v244==(1 -0))) then v210=36 -(5 + 30) ;break;end if ((v244==0) or ((7200 -3906)==(9046 -6914))) then v211=v89[1 + 1 + 0 ];v212=v87[v211];v244=3 -2 ;end end end if (((40 + 2802)==2842) and (v210==1)) then v213=v87[v211 + (1469 -(144 + (2822 -1499))) ];if (((1236 + 2112)>2836) and (v213>(0 -0))) then if ((v212>v87[v211 + 1 ]) or ((11372 -8937)<(135 + 1210))) then v76=v89[1425 -(456 + 966) ];else v87[v211 + (1144 -(156 + 482 + 503)) ]=v212;end elseif (((13519 -(14079 -3932))>(2900 -((1184 -(1056 + 31)) + 75))) and (v212<v87[v211 + 1 + 0 ])) then v76=v89[3];else v87[v211 + 3 ]=v212;end break;end end end elseif ((v90<=(184 -(39 + 109))) or ((1774 + 3189)<=637)) then if ((4590==(5820 -(178 + 1052))) and (v90<=(981 -(885 + 63)))) then if ((v90>(25 + 7)) or ((5580 -(538 + (141 -92)))<=1764)) then v87[v89[1 + 0 + (1959 -(1646 + 312)) ]]=v89[3 + 0 ];else do return;end end elseif (((4716 -(140 + 87))==(5481 -(45 + 947))) and (v90<=34)) then local v175=243 -(28 + 215) ;local v176;local v177;local v178;while true do if (((3563 -(70 + 501))>=(952 + 1538)) and ((1974 -((1761 -1257) + 1469))==v175)) then v178=nil;while true do if (((442 + 218 + 2409)==(4749 -(663 + 1017))) and (v176==(0 + 0))) then v177=0 + 0 ;v178=nil;v176=3 -2 ;end if (((4056 -(131 + (1793 -871)))<=(10842 -6304)) and (v176==(2 -1))) then while true do if (((110 + 2964)<=(2219 + 1259)) and (v177==(0 + 0))) then v178=v87[v89[3 + 1 ]];if ( not v178 or ((82 + (1865 -(163 + 1135)))>=1603)) then v76=v76 + 1 ;else local v323=1420 -(653 + 767) ;while true do if (((3990 -(10 + 1283))<(8421 -4174)) and (v323==0)) then v87[v89[161 -(45 + 114) ]]=v178;v76=v89[6 -3 ];break;end end end break;end end break;end end break;end if (((3754 -(762 + 1036))>(84 -15)) and (v175==(0 -0))) then v176=0 -0 ;v177=nil;v175=2 -1 ;end end elseif ((v90==(34 + 1)) or ((4153 -(584 + 492))<(772 + 77 + 317))) then local v214=0;local v215;local v216;local v217;while true do if ((v214==0) or (3536<=(202 + 1981))) then v215=0 + 0 ;v216=nil;v214=624 -((1783 -(1691 + 33)) + 564) ;end if ((v214==1) or (3271>=(12629 -(8998 -(760 + 114))))) then v217=nil;while true do if (((1 + 0)==v215) or ((4024 + 968)<(4024 -(331 + 102)))) then while true do if (((237 + (625 -(135 + 404)))<(7565 -3233)) and (v216==(0 -0))) then v217=v89[1 + 1 ];v87[v217]=v87[v217](v13(v87,v217 + (76 -(74 + 1 + 0)) ,v89[3 -0 ]));break;end end break;end if ((v215==(0 -0)) or ((741 + 949 + (2197 -(60 + 288)))<547)) then v216=0 + 0 ;v217=nil;v215=1 -0 ;end end break;end end else v87[v89[5 -3 ]]=v87[v89[1868 -((4815 -3041) + 91) ]];end elseif ((v90<=(17 + 22)) or ((2194 -(575 + 909))>(381 + 2363))) then if ((v90<=(17 + 20)) or (3344<(464 + 1225))) then local v179=0;local v180;local v181;local v182;while true do if (((134 + 197 + 23)==(205 + 149)) and (v179==1)) then v182=nil;while true do if ((v180==((106 + 1533) -(1471 + 168))) or ((56 + 17)>=789)) then v181=(33 + 95) -(89 + 39) ;v182=nil;v180=1859 -(217 + 1641) ;end if ((v180==(2 -1)) or ((795 + 700)>(4944 -(1601 + 264)))) then while true do if ((v181==(0 -0)) or ((21567 -17040)==(2002 + 270))) then v182=v89[1307 -(14 + 0 + 1291) ];v87[v182](v13(v87,v182 + 1 + 0 ,v77));break;end end break;end end break;end if ((v179==(1880 -(1264 + 616))) or ((6701 -3526)<=253)) then v180=(1287 -(1110 + 177)) + 0 ;v181=nil;v179=1 + 0 ;end end elseif (((485 + 485)<(2108 + 257)) and (v90>(8 + 30))) then local v220=1701 -((716 -429) + 1414) ;local v221;local v222;local v223;local v224;local v225;while true do if ((v220==((16 -12) -3)) or (2028>((6497 -(70 + 1877)) -(1213 + 412)))) then v223=nil;v224=nil;v220=5 -3 ;end if (((11693 -6773)<=(3444 + 1506)) and (v220==(1 + (3 -2)))) then v225=nil;while true do if ((1==v221) or (1381>=(8395 -4316))) then local v280=0 + 0 ;while true do if (((1819 -757)<=(5076 -(50 + 439))) and (v280==(2 -1))) then v221=1224 -(377 + 845) ;break;end if ((((3931 -2152) + 2383)>=(3143 -((3177 -2328) + (376 -279)))) and (v280==((0 -0) -0))) then v224=v89[1928 -(1240 + 684) ];v225=0;v280=1 + 0 ;end end end if (((2895 + 1540)>(2880 -(34 + 55 + 50))) and (v221==2)) then for v305=v222,v224 do local v306=0 + 0 ;local v307;while true do if (((5244 -(94 + 471))>=1437) and (v306==(0 -0))) then v307=0;while true do if ((4796==(821 + 3975)) and (v307==(288 -(131 + 157)))) then v225=v225 + (2 -1) ;v87[v305]=v223[v225];break;end end break;end end end break;end if ((1741>(1685 -(569 + (1147 -531)))) and (v221==((285 -(188 + 97)) -0))) then v222=v89[7 -5 ];v223={v87[v222]()};v221=1;end end break;end if ((v220==0) or ((5650 -(366 + 554))<=(2 + (4 -3)))) then v221=273 -(113 + 160) ;v222=nil;v220=197 -(59 + 137) ;end end else local v226=(1902 -(320 + 1582)) + 0 ;local v227;local v228;while true do if ((v226==(1 + 0)) or ((11896 -7334)>(4912 -(37 + 101)))) then for v265=v227 + 1 + 0 ,v89[4] do v228=v228   .. v87[v265] ;end v87[v89[3 -1 ]]=v228;break;end if ((1260<(5569 -(568 + 89))) and (v226==((1859 -(1374 + 364)) -(53 + 68)))) then v227=v89[5 -2 ];v228=v87[v227];v226=1 -0 ;end end end elseif ((v90<=((119 -64) -15)) or (1135>=2302)) then v87[v89[2 -(0 -0) ]]= #v87[v89[3 + 0 ]];elseif (((3410 -(1221 + 192))>(995 -310)) and (v90==((68 -39) + (66 -(41 + 13))))) then v33[v89[3 + 0 ]]=v87[v89[2]];elseif ((2336==(3378 -(802 + 161 + 79))) and (v89[2]==v87[v89[4]])) then v76=v76 + (2 -1) ;else v76=v89[2 + 1 ];end v76=v76 + 1 + 0 ;break;end if ((((524 -208) + 257)==(1949 -1376)) and (v92==(0 + 0))) then local v109=0 -0 ;while true do if ((v109==(0 -0)) or ((11175 -8132)==(1634 -(4202 -3108)))) then v89=v81[v76];v90=v89[(3 -2) + 0 ];v109=1718 -(747 + 970) ;end if ((1157<(1826 + 2985)) and (v109==(1659 -(70 + 1588)))) then v92=1 + 0 ;break;end end end end end end A,B=v28(v11(v80));if  not A[1] then local v93=v31[4][v76] or "?" ;error("Script error at ["   .. v93   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end end end;return v30(v29(),{},v17)(...);end if (v18==3) then v25=function()local v43=v24();local v44=v24();local v45=1;local v46=(v21(v44,(311 -(284 + 24)) -2 ,832 -(739 + 73) ) * ((1619 -(698 + 919))^(145 -113))) + v43 ;local v47=v21(v44,14 + 7 ,1849 -(309 + 626 + 883) );local v48=((v21(v44,25 + 7 )==(2 -1)) and  -(1964 -(1629 + 334))) or (3 -2) ;if (v47==(1076 -(163 + 913))) then if (v46==(0 + 0)) then return v48 * (0 -0) ;else v47=576 -(570 + 5) ;v45=0 + (0 -0) ;end elseif (v47==(2988 -(3839 -2898))) then return ((v46==(0 -0)) and (v48 * (1/(133 -(96 + 37))))) or (v48 * NaN) ;end return v8(v48,v47-1023 ) * (v45 + (v46/((1057 -((1184 -787) + 658))^(17 + 35)))) ;end;v26=nil;v26=function(v34)local v49;if  not v34 then v34=v24();if (v34==(0 + 0)) then return "";end end v49=v3(v16,v19,(v19 + v34) -(2 -1) );v19=v19 + v34 ;local v50={};for v66=4 -3 , #v49 do v50[v66]=v2(v1(v3(v49,v66,v66)));end return v6(v50);end;v27=v24;v18=4;end if (v18==2) then v23=function()local v51,v52=v1(v16,v19,v19 + 2 + 0 );v19=v19 + (6 -4) ;return (v52 * (45 + 211)) + v51 ;end;v24=nil;v24=function()local v53,v54,v55,v56=v1(v16,v19,v19 + 2 + 1 );v19=v19 + (13 -9) ;return (v56 * (16777987 -(475 + 296))) + (v55 * (244564 -(145641 + 33387))) + (v54 * 256) + v53 ;end;v25=nil;v18=3;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v35)if (v1(v35,2)==79) then v20=v0(v3(v35,1,1));return "";else local v69=0;local v70;while true do if (v69==0) then v70=v2(v0(v35,16));if v20 then local v95=0;local v96;while true do if (v95==1) then return v96;end if (0==v95) then v96=v5(v70,v20);v20=nil;v95=1;end end else return v70;end break;end end end end);v21=nil;v18=1;end if (4==v18) then v28=nil;v28=function(...)return {...},v12("#",...);end;v29=nil;v29=function()local v57=0;local v58;local v59;local v60;local v61;local v62;local v63;while true do local v68=0;while true do if (v68==0) then if (v57==1) then local v94=0 + 0 ;while true do if (v94==1) then for v111=1 -0 ,v62 do local v112=0;local v113;local v114;local v115;while true do if (v112~=0) then else v113=0 + 0 ;v114=nil;v112=152 -(80 + 71) ;end if (v112==1) then v115=nil;while true do if (v113==0) then local v124=0 -0 ;while true do if (v124==(397 -(204 + 193))) then local v184=0 + 0 ;while true do if (v184~=(696 -(667 + 28))) then else v124=1;break;end if (v184==0) then v114=v22();v115=nil;v184=1;end end end if (v124~=(1 + 0)) then else v113=1;break;end end end if (v113==(1531 -(474 + 1056))) then if (v114==1) then v115=v22()~=(0 + 0) ;elseif (v114==(4 -2)) then v115=v25();elseif (v114==3) then v115=v26();end v63[v111]=v115;break;end end break;end end end v61[3]=v22();v94=2;end if (v94==(1 + 1)) then v57=2;break;end if (v94==(1715 -(444 + 1271))) then v62=v24();v63={};v94=1;end end end if (v57==(1017 -(198 + 817))) then for v97=1,v24() do local v98=0 + 0 ;local v99;local v100;while true do if (1==v98) then while true do if ((0 + 0)==v99) then v100=v22();if (v21(v100,1,1 -0 )==(0 -0)) then local v118=0;local v119;local v120;local v121;local v122;local v123;while true do if (v118==1) then v121=nil;v122=nil;v118=6 -4 ;end if (v118~=(2 -0)) then else v123=nil;while true do if (v119==2) then while true do if (v120==0) then local v249=1010 -(863 + 147) ;local v250;while true do if (v249==(1856 -(1594 + 262))) then v250=0;while true do if (v250~=1) then else v120=1 + 0 ;break;end if (v250==(925 -(683 + 242))) then local v327=0 -0 ;local v328;while true do if (v327~=0) then else v328=0 + 0 ;while true do if (v328~=1) then else v250=2 -1 ;break;end if (v328==0) then local v371=0;while true do if (v371~=0) then else v121=v21(v100,2 + 0 ,1777 -(584 + 1190) );v122=v21(v100,1144 -(964 + 176) ,6);v371=1550 -(677 + 872) ;end if (v371==(1800 -(223 + 1576))) then v328=1418 -(15 + 1402) ;break;end end end end break;end end end end break;end end end if (v120==3) then if (v21(v122,6 -3 ,1135 -(1016 + 116) )==(1817 -(25 + 1791))) then v123[14 -10 ]=v63[v123[4]];end v58[v97]=v123;break;end if (v120~=1) then else local v252=0 -0 ;while true do if (v252==(0 + 0)) then v123={v23(),v23(),nil,nil};if (v121==(0 -0)) then local v317=0;local v318;while true do if (v317==0) then v318=1988 -(1129 + 859) ;while true do if ((0 -0)~=v318) then else v123[804 -(331 + 470) ]=v23();v123[4]=v23();break;end end break;end end elseif (v121==(1144 -(697 + 446))) then v123[199 -(45 + 151) ]=v24();elseif (v121==2) then v123[11 -8 ]=v24() -(2^16) ;elseif (v121~=(7 -4)) then else local v366=0;local v367;local v368;while true do if (v366==(1 + 0)) then while true do if ((0 -0)~=v367) then else v368=0 -0 ;while true do if (v368~=(1523 -(1342 + 181))) then else v123[1 + 2 ]=v24() -((1 + 1)^(1762 -(1669 + 77))) ;v123[129 -(93 + 32) ]=v23();break;end end break;end end break;end if ((0 -0)==v366) then v367=0;v368=nil;v366=1;end end end v252=1 + 0 ;end if ((1 + 0)~=v252) then else v120=913 -(857 + 54) ;break;end end end if (v120==2) then local v253=0 -0 ;local v254;local v255;while true do if (v253==(0 -0)) then v254=0;v255=nil;v253=1;end if (v253==(823 -(398 + 424))) then while true do if (v254==(173 -(45 + 128))) then v255=0 + 0 ;while true do if (v255==(1409 -(1250 + 158))) then v120=1694 -(914 + 777) ;break;end if ((1200 -(849 + 351))~=v255) then else local v336=0 + 0 ;while true do if (v336==(897 -(505 + 392))) then if (v21(v122,2 -1 ,1)~=1) then else v123[2]=v63[v123[2]];end if (v21(v122,2,2 + 0 )~=(4 -3)) then else v123[3]=v63[v123[2 + 1 ]];end v336=1139 -(346 + 792) ;end if (v336==(1 + 0)) then v255=1;break;end end end end break;end end break;end end end end break;end if (v119==1) then local v231=0 + 0 ;while true do if (v231==(1 + 0)) then v119=4 -2 ;break;end if (v231==(0 + 0)) then local v256=1050 -(954 + 96) ;while true do if (v256==(0 + 0)) then v122=nil;v123=nil;v256=1 -0 ;end if (v256~=(1 + 0)) then else v231=1;break;end end end end end if (v119~=0) then else v120=0 + 0 ;v121=nil;v119=1;end end break;end if (v118==(0 + 0)) then v119=0 -0 ;v120=nil;v118=1;end end end break;end end break;end if (v98==(0 + 0)) then v99=0;v100=nil;v98=442 -(361 + 80) ;end end end for v101=1,v24() do v59[v101-1 ]=v29();end for v103=2 -1 ,v24() do v60[v103]=v24();end return v61;end v68=1;end if (1==v68) then if ((1250 -(131 + 1119))==v57) then v58={};v59={};v60={};v61={v58,v59,nil,v60};v57=1;end break;end end end end;v18=5;end if (v18==1) then v21=function(v36,v37,v38)if v38 then local v71=(v36/(((1313 -518) -(218 + 575))^(v37-(1 -0))))%(((3080 -1757) -(243 + 1078))^(((v38-(2 -1)) -(v37-(4 -3))) + (11 -(6 + 4)))) ;return v71-(v71%(1 -0)) ;else local v72=(1 + 1)^(v37-(1 + 0)) ;return (((v36%(v72 + v72))>=v72) and (1 + 0)) or (0 -0) ;end end;v22=nil;v22=function()local v64=0;local v65;while true do if (v64==(340 -(39 + 301))) then v65=v1(v16,v19,v19);v19=v19 + 1 ;v64=1526 -((1686 -(113 + 836)) + 788) ;end if (v64==(1 -0)) then return v65;end end end;v23=nil;v18=2;end end end vv9(),...);end
