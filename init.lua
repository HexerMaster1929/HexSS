--[[
  _   _                           _        __     ____   
 | | | | _____  ____ ___   ____ _| |_ ___  \ \   / / /_  
 | |_| |/ _ \ \/ / _` \ \ / / _` | __/ _ \  \ \ / / '_ \ 
 |  _  |  __/>  < (_| |\ V / (_| | ||  __/   \ V /| (_) |
 |_| |_|\___/_/\_\__,_| \_/ \__,_|\__\___|    \_/  \___/ 
      Lua Obfiscuator | Made By HexerMaster1929#5087                                                                      

]]--


do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==2) then v9=math.ldexp;v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=3;end if (v0==3) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v16=nil;v0=4;end if (1==v0) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==4) then v16=function(v25,v26,...)local v27=1;local v28;v25=v5(v4(v25,5),"..",function(v29)if (v2(v29,2)==79) then local v84=0;while true do if (0==v84) then v28=v1(v4(v29,1,1));return "";end end else local v85=v3(v1(v29,16));if v28 then local v91=0;local v92;while true do if (v91==1) then return v92;end if (v91==0) then v92=v6(v85,v28);v28=nil;v91=1;end end else return v85;end end end);local function v30(v31,v32,v33)if v33 then local v86=1816 -(922 + 894) ;local v87;while true do if (v86==(1308 -((61 -16) + 1263))) then v87=(v31/((298 -(166 + 130))^(v32-(1 -0))))%((1 + 1)^(((v33-(212 -(195 + 16))) -(v32-((1 + 1) -(1 + 0)))) + ((434 + 426) -(388 + 471)))) ;return v87-(v87%(221 -(62 + 158))) ;end end else local v88=0;local v89;while true do if (v88==((0 -0) + 0)) then v89=((147 -(9 + 135)) -(1 + 0))^(v32-(1 + 0)) ;return (((v31%(v89 + v89))>=v89) and ((1 -0) -0)) or (0 -0) ;end end end end local function v34()local v47=0 + 0 ;local v48;while true do if (v47==1) then return v48;end if (v47==(0 -(0 -0))) then v48=v2(v25,v27,v27);v27=v27 + (146 -(135 + 10)) ;v47=1;end end end local function v35()local v49,v50=v2(v25,v27,v27 + 1 + 1 );v27=v27 + (162 -(37 + 123)) ;return (v50 * (11 + 245)) + v49 ;end local function v36()local v51=1201 -(12 + 1189) ;local v52;local v53;local v54;local v55;while true do if (v51==(1839 -((7538 -5758) + 59))) then v52,v53,v54,v55=v2(v25,v27,v27 + 3 );v27=v27 + (752 -(338 + 410)) ;v51=(1276 + 413) -(395 + 1293) ;end if (v51==((403 + 437) -(92 + 747))) then return (v55 * 16777216) + (v54 * (48435 + 17101)) + (v53 * 256) + v52 ;end end end local function v37()local v56=0 -0 ;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==(552 -(37 + (1300 -(255 + 533))))) then if (v61==(0 + 0)) then if (v60==(0 + 0)) then return v62 * (0 + 0) ;else local v110=0;while true do if (v110==(883 -(321 + 562))) then v61=(2 -1) -0 ;v59=1817 -(604 + 1213) ;break;end end end elseif (v61==(169 + 1878)) then return ((v60==(0 -0)) and (v62 * ((1 + 0 + 0)/((423 -(182 + 241)) -(0 + 0))))) or (v62 * NaN) ;end return v9(v62,v61-(2551 -(1499 + 29)) ) * (v59 + (v60/((1516 -(917 + 597))^(91 -(1939 -(768 + 1132)))))) ;end if (v56==((0 + 0) -0)) then v57=v36();v58=v36();v56=1 + 0 ;end if (v56==1) then v59=853 -(30 + 822) ;v60=(v30(v58,1 -0 ,35 -15 ) * (((933 -(341 + 590)) -(0 -0))^(2 + 30))) + v57 ;v56=2 + 0 ;end if (v56==(1504 -(174 + (2484 -(383 + 773))))) then v61=v30(v58,21,31);v62=((v30(v58,32)==(1803 -(394 + (5617 -4209)))) and  -(2 -1)) or (1 + 0) ;v56=5 -2 ;end end end local function v38(v39)local v63;if  not v39 then local v90=0 -0 ;while true do if (v90==(1077 -(950 + 127))) then v39=v36();if (v39==((0 -0) + (0 -0))) then return "";end break;end end end v63=v4(v25,v27,(v27 + v39) -(2 -1) );v27=v27 + v39 ;local v64={};for v76=(537 -262) -(161 + 113) , #v63 do v64[v76]=v3(v2(v4(v63,v76,v76)));end return v7(v64);end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v65=0;local v66;local v67;local v68;local v69;local v70;local v71;local v72;while true do if (v65==1) then v68=nil;v69=nil;v65=2;end if (v65==(2 + 0)) then v70=nil;v71=nil;v65=364 -(197 + 164) ;end if (v65~=(0 -0)) then else v66=0 + 0 ;v67=nil;v65=1;end if (v65~=3) then else v72=nil;while true do local v93=0 + 0 ;while true do if (1~=v93) then else if (v66==(0 -0)) then local v115=0;while true do if (0==v115) then local v122=0;while true do if (v122==1) then v115=1;break;end if (v122~=(0 + 0)) then else v67={};v68={};v122=1;end end end if (v115==(1 -0)) then v69={};v66=1 + 0 ;break;end end end if (1~=v66) then else v70={v67,v68,nil,v69};v71=v36();v72={};v66=1831 -(1578 + 251) ;end break;end if (v93==(404 -(13 + 391))) then if (v66==2) then local v116=1856 -(142 + 1714) ;local v117;while true do if (v116==0) then v117=0;while true do if (v117~=(1 -0)) then else for v125=1,v36() do local v126=1754 -(1295 + 459) ;local v127;local v128;while true do if (v126==(0 -0)) then v127=0;v128=nil;v126=1 -0 ;end if (v126==1) then while true do if (v127~=(0 -0)) then else v128=v34();if (v30(v128,1,1)==(0 + 0)) then local v143=0;local v144;local v145;local v146;local v147;local v148;while true do if (v143~=(0 + 0)) then else v144=1151 -(1122 + 29) ;v145=nil;v143=1;end if (v143==(2 + 0)) then v148=nil;while true do if (2==v144) then while true do if (v145==2) then local v294=0;local v295;while true do if (v294==(0 + 0)) then v295=581 -(565 + 16) ;while true do if (v295==(1 + 0)) then v145=3;break;end if (v295==(243 -(151 + 92))) then local v364=0;while true do if (1==v364) then v295=1;break;end if (v364==(0 + 0)) then if (v30(v147,1,1)~=1) then else v148[2]=v72[v148[3 -1 ]];end if (v30(v147,2,2 + 0 )~=1) then else v148[6 -3 ]=v72[v148[2 + 1 ]];end v364=1 -0 ;end end end end break;end end end if (v145==3) then if (v30(v147,3,1556 -(1398 + 155) )==(1 + 0)) then v148[4]=v72[v148[4]];end v67[v125]=v148;break;end if (1==v145) then local v297=1992 -(1524 + 468) ;local v298;local v299;while true do if (v297==0) then v298=0;v299=nil;v297=2 -1 ;end if (v297==1) then while true do if (v298~=0) then else v299=0;while true do if (v299~=0) then else local v378=0;while true do if (v378==(0 -0)) then v148={v35(),v35(),nil,nil};if (v146==(0 -0)) then local v395=0 -0 ;local v396;local v397;while true do if (v395==(3 -2)) then while true do if (v396~=0) then else v397=1060 -(657 + 403) ;while true do if (v397~=(0 + 0)) then else v148[3]=v35();v148[7 -3 ]=v35();break;end end break;end end break;end if (v395~=(0 -0)) then else v396=719 -(573 + 146) ;v397=nil;v395=3 -2 ;end end elseif (v146==1) then v148[3]=v36();elseif (v146==(6 -4)) then v148[3]=v36() -(2^16) ;elseif (v146~=3) then else local v402=0;local v403;while true do if (v402==0) then v403=0 + 0 ;while true do if (v403~=(0 + 0)) then else v148[3]=v36() -((2 + 0)^(1758 -(511 + 1231))) ;v148[4 + 0 ]=v35();break;end end break;end end end v378=1;end if (v378==(1956 -(911 + 1044))) then v299=1 + 0 ;break;end end end if (v299==1) then v145=2;break;end end break;end end break;end end end if (0~=v145) then else local v300=0;local v301;while true do if (v300~=(0 -0)) then else v301=0 + 0 ;while true do if (v301~=1) then else v145=2 -1 ;break;end if (v301~=0) then else v146=v30(v128,2,5 -2 );v147=v30(v128,9 -5 ,3 + 3 );v301=1;end end break;end end end end break;end if (v144==(1 + 0)) then local v261=0;local v262;while true do if (v261~=0) then else v262=0 -0 ;while true do if (v262~=1) then else v144=2;break;end if (v262~=(0 + 0)) then else v147=nil;v148=nil;v262=1 + 0 ;end end break;end end end if (v144==0) then local v263=0 + 0 ;while true do if (v263==(1075 -(256 + 819))) then v145=0 -0 ;v146=nil;v263=1;end if (v263==1) then v144=1;break;end end end end break;end if ((1 + 0)==v143) then v146=nil;v147=nil;v143=2 + 0 ;end end end break;end end break;end end end v66=3;break;end if (v117==(22 -(19 + 3))) then for v129=664 -(27 + 636) ,v71 do local v130=0 + 0 ;local v131;local v132;local v133;while true do if (v130~=0) then else local v135=1558 -(1531 + 27) ;while true do if (v135~=0) then else local v138=0 -0 ;while true do if (v138==1) then v135=1 + 0 ;break;end if (v138~=(563 -(394 + 169))) then else v131=0;v132=nil;v138=3 -2 ;end end end if ((1 + 0)==v135) then v130=1;break;end end end if (1==v130) then v133=nil;while true do if (v131~=(1723 -(840 + 883))) then else local v139=0 -0 ;local v140;local v141;while true do if (0~=v139) then else v140=0;v141=nil;v139=1 + 0 ;end if (v139~=(866 -(155 + 710))) then else while true do if (v140==0) then v141=0;while true do if (v141==0) then v132=v34();v133=nil;v141=106 -(65 + 40) ;end if (v141~=(1 -0)) then else v131=205 -(138 + 66) ;break;end end break;end end break;end end end if (v131==(4 -3)) then if (v132==1) then v133=v34()~=(1489 -(1049 + 440)) ;elseif (v132==2) then v133=v37();elseif (v132==(1 + 2)) then v133=v38();end v72[v129]=v133;break;end end break;end end end v70[946 -(863 + 80) ]=v34();v117=1;end end break;end end end if (v66==(2 + 1)) then for v118=1,v36() do v68[v118-(1 -0) ]=v42();end for v120=1,v36() do v69[v120]=v36();end return v70;end v93=171 -(167 + 3) ;end end end break;end end end local function v43(v44,v45,v46)local v73=v44[1];local v74=v44[2];local v75=v44[3];return function(...)local v78=0;local v79;local v80;local v81;local v82;local v83;while true do if (v78==0) then v79=1;v80= -1;v78=1;end if (v78==3) then A,B=v41(v12(v83));if  not A[1] then local v104=0;local v105;while true do if (v104==0) then v105=v44[4][v79] or "?" ;error("Script error at ["   .. v105   .. "]:"   .. A[2] );break;end end else return v14(A,2,B);end break;end if (2==v78) then v83=nil;v83=function()local v94=v73;local v95=v74;local v96=v75;local v97=v41;local v98={};local v99={};local v100={};for v106=820 -(668 + 152) ,v82 do if ((v106>=v96) or ((1004 + 928)>(5966 -(574 + 1275)))) then v98[v106-v96 ]=v81[v106 + 1 + 0 ];else v100[v106]=v81[v106 + 1 + 0 ];end end local v101=(v82-v96) + ((1 + 3) -3) ;local v102;local v103;while true do local v107=0 -0 ;local v108;local v109;while true do if ((0==v107) or (((729 + 151) -(74 + 782))>4445)) then v108=0 -0 ;v109=nil;v107=1 + (0 -0) ;end if ((v107==(914 -(888 + 25))) or (1331>(1872 + 1844))) then while true do if ((v108==(0 + 0)) or ((1608 -988)==(1708 + 1771))) then v109=1919 -(421 + (2472 -974)) ;while true do if ((v109==(1379 -(868 + 510))) or ((6981 -3540)<(11160 -8707))) then if (((1948 -(50 + 374))<(10009 -(1376 + 3713))) and (v103<=(50 -30))) then if (((2025 -(60 + 973))>(522 -341)) and (v103<=(16 -7))) then if (((979 + 305 + 111)>(398 -(244 + 125))) and (v103<=(3 + (2 -1)))) then if ((v103<=1) or ((4630 -1888)>(11070 -7746))) then if (((2070 -(414 + 792))<=4014) and (v103==(0 + (970 -(145 + 825))))) then local v149=0 -0 ;local v150;local v151;local v152;local v153;local v154;while true do if ((v149==(1806 -(23 + 1781))) or ((949 + 1224)<=(3041 -(243 + 1468)))) then v154=nil;while true do if ((v150==(2 + 0)) or (3310<(1940 + 361))) then for v287=v151,v80 do local v288=1895 -(791 + 1104) ;local v289;while true do if (((2454 -(1301 + 551))<=(11212 -6895)) and (v288==0)) then v289=813 -(685 + (173 -(41 + 4))) ;while true do if (((11612 -7668)>=(1110 + 1798)) and (v289==(1367 -(1124 + 243)))) then v154=v154 + 1 + 0 ;v100[v287]=v152[v154];break;end end break;end end end break;end if ((v150==1) or ((526 + 125)>(590 + 635))) then local v269=0;while true do if ((v269==((5 -3) -1)) or ((2154 -(142 + 953))>=(2552 -1004))) then v150=5 -3 ;break;end if ((v269==0) or ((6728 -2483)<(284 + 93 + 680))) then v80=(v153 + v151) -(630 -(112 + 517)) ;v154=0 -0 ;v269=2 -1 ;end end end if (((2589 + 2386)>4235) and (v150==(0 + 0))) then local v270=0 -0 ;local v271;while true do if ((v270==(0 -0)) or (3912>(2991 + 1001))) then v271=719 -(104 + 615) ;while true do if ((v271==(2 -1)) or ((4323 -(203 + 103 + 585))>=(5722 -(622 + 175)))) then v150=1;break;end if ((v271==(0 + 0)) or ((2368 -(241 + 429))<(689 -368))) then local v350=0 -0 ;while true do if ((v350==1) or (1683==(523 -(87 + 36)))) then v271=1 + 0 ;break;end if ((v350==(0 -0)) or (((617 + 2447) -((868 -(27 + 835)) + 36))<=(4652 -2782))) then v151=v102[1142 -(943 + 197) ];v152,v153=v97(v100[v151](v14(v100,v151 + (2 -(1 + 0)) ,v102[720 -(158 + 559) ])));v350=1;end end end end break;end end end end break;end if ((v149==(0 -0)) or ((716 -474)>(8470 -(14755 -9340)))) then local v251=1426 -((2890 -1859) + 395) ;while true do if ((4423>=3694) and (v251==(0 + 0))) then v150=901 -(81 + 820) ;v151=nil;v251=1 + 0 ;end if ((v251==(2 -1)) or (3749<=(5188 -3748))) then v149=1 -0 ;break;end end end if (((4895 -(94 + 48))>=(386 -270)) and (v149==(191 -(179 + 11)))) then v152=nil;v153=nil;v149=1 + 1 ;end end else v79=v102[5 -2 ];end elseif (((5995 -(1193 + 478))==(6138 -(1182 + 632))) and (v103<=(1145 -(324 + 386 + 433)))) then v100[v102[440 -(429 + 9) ]]=v100[v102[3]][v102[4]];elseif ((476<=(14235 -9567)) and (v103>(1 + 2))) then local v201=0 + 0 ;local v202;local v203;local v204;while true do if ((v201==(698 -(645 + 52))) or ((1661 + 1068)>=(3138 + 996))) then v204=nil;while true do if (((2689 + 1395)>(4778 -3318)) and (v202==(1 -0))) then for v316=v203 + (1452 -(1247 + 204)) ,v102[4] do v204=v204   .. v100[v316] ;end v100[v102[2]]=v204;break;end if ((v202==(0 + 0)) or ((66 + 2542)<329)) then local v303=0 -0 ;local v304;while true do if (((3659 -(508 + 2))>(5826 -3316)) and ((0 + (0 -0))==v303)) then v304=0;while true do if ((680<=(41 + 2360)) and (v304==(0 + 0))) then local v365=0;while true do if (((0 -0)==v365) or (((17840 -12271) -(834 + 2811))<=(5469 -(4202 -(328 + 82))))) then v203=v102[(1512 -(792 + 709)) -8 ];v204=v100[v203];v365=1 + 0 ;end if ((4137>2195) and (v365==(1 + 0))) then v304=1 + 0 + 0 ;break;end end end if (((553 + 1219)==(1769 + 3)) and (v304==(1054 -(765 + 288)))) then v202=1 + 0 ;break;end end break;end end end end break;end if (((6047 -(592 + 874))>(11143 -7886)) and (v201==(0 + 0))) then v202=0;v203=nil;v201=(3 -2) + 0 ;end end else v100[v102[3 -1 ]]=v100[v102[919 -(62 + 854) ]] + v102[10 -6 ] ;end elseif ((v103<=(1014 -(52 + 128 + 828))) or (2358>(10576 -6349))) then if (((1152 -(356 + 764))<=(3199 -(548 + 577))) and (v103==(1 + 4))) then if ((1744>(237 + 592)) and  not v100[v102[1 + 1 ]]) then v79=v79 + 1 + 0 ;else v79=v102[10 -7 ];end else do return;end end elseif (((5139 -(197 + 752))<=(8821 -3857)) and (v103<=(1298 -(20 + 1271)))) then local v158=1846 -(1416 + 430) ;local v159;local v160;local v161;while true do if ((v158==(0 + 0)) or ((8704 -4893)<=(824 -(130 + (310 -177))))) then v159=352 -(37 + 315) ;v160=nil;v158=3 -2 ;end if (((4581 -(64 + 622))>(3760 -2277)) and (v158==(3 -2))) then v161=nil;while true do if (((23296 -18468)>=((12640 -7157) -1555)) and (v159==(0 + 0))) then v160=v102[1918 -(1027 + 889) ];v161=v100[v102[3]];v159=3 -(1 + 1) ;end if ((2640>=420) and (v159==(41 -(34 + 6)))) then v100[v160 + 1 + 0 ]=v161;v100[v160]=v161[v102[1556 -(1279 + (1925 -(1349 + 303))) ]];break;end end break;end end elseif (((2535 -((276 -(124 + 10)) + 1188))<(2558 + 1131)) and (v103>(220 -(67 + 145)))) then local v207=0 + 0 ;local v208;local v209;local v210;local v211;local v212;while true do if ((v207==1) or (((2374 + 1917) -(1001 + 716))>3761)) then v210=nil;v211=nil;v207=(11 -7) -2 ;end if ((v207==(2 -(0 -0))) or (1422==3864)) then v212=nil;while true do if ((v208==(6 -4)) or ((465 + 47)>(4806 + 12))) then for v317=v209,v80 do local v318=0;local v319;local v320;while true do if (((2082 + 1513)==(5552 -(1708 + 151 + 98))) and (v318==(1876 -(1670 + 206)))) then v319=701 -(672 + (986 -(642 + 315))) ;v320=nil;v318=1 -0 ;end if (((9058 -(6739 -(1780 + 39)))>=(4852 -3570)) and (v318==(1 + 0))) then while true do if ((1635<2967) and (v319==(0 -0))) then v320=0 + 0 ;while true do if ((v320==(0 + 0)) or ((1308 -797)>(6421 -((1469 -(435 + 637)) + 1149)))) then v212=v212 + 1 + 0 ;v100[v317]=v210[v212];break;end end break;end end break;end end end break;end if (((0 -0)==v208) or ((1683 -491)<925)) then v209=v102[2 + 0 ];v210,v211=v97(v100[v209](v100[v209 + 1 ]));v208=1 -0 ;end if ((v208==1) or (625>4068)) then v80=(v211 + v209) -(1 + 0) ;v212=0 + 0 ;v208=2 + 0 ;end end break;end if ((v207==(0 -0)) or ((3482 -2020)>(3996 + 895))) then v208=0;v209=nil;v207=1 + 0 ;end end elseif (((8469 -3875)>=(11959 -8002)) and (v100[v102[4 -2 ]]~=v102[4])) then v79=v79 + (1711 -(269 + 1441)) ;else v79=v102[(2 + 1) -0 ];end elseif ((v103<=(36 -(4 + 18))) or ((4413 -(1125 + 684 + 72))==(5472 -(601 + 76)))) then if (((7625 -3356)>=(10151 -7447)) and (v103<=(766 -(269 + 486)))) then if ((v103>(1162 -(692 + 460))) or ((4184 -1527)<=(488 + 44))) then local v162=0;local v163;while true do if ((((2189 -1410) -(473 + 306))==v162) or ((5330 -(721 + 983))<=395)) then v163=v102[1 + 1 ];v100[v163]=v100[v163]();break;end end else local v164=0 -0 ;local v165;local v166;local v167;while true do if ((v164==(0 -0)) or (1277>2598)) then v165=376 -(8 + 368) ;v166=nil;v164=1 -0 ;end if ((v164==(1 -0)) or (1889<=(1933 -(209 + 590)))) then v167=nil;while true do if (((1373 + 384 + 815)>((13121 -9262) -(208 + 1388))) and ((1 + 0)==v165)) then while true do if ((v166==0) or (2479==(325 + 3242))) then v167=v102[2 + 0 ];v100[v167]=v100[v167](v100[v167 + (1677 -(534 + 1142)) ]);break;end end break;end if ((241<=(6817 -(5950 -(880 + 170)))) and (v165==(56 -(29 + 27)))) then local v277=0 + 0 + 0 + 0 ;while true do if ((v277==(1185 -(219 + 965))) or ((8015 -4715)<=1678)) then v165=872 -(752 + 119) ;break;end if ((v277==(0 + 0)) or ((8099 -4027)<(3470 -(652 + 456)))) then v166=0 + 0 ;v167=nil;v277=1 + 0 ;end end end end break;end end end elseif (((3415 -(1022 + 664))>(2912 -2066)) and (v103<=(26 -14))) then local v168=0;local v169;local v170;while true do if (((0 -0)==v168) or ((2561 -(106 + 710))==(2332 -(424 + 19 + 59)))) then v169=0 -0 ;v170=nil;v168=1126 -((760 -218) + 583) ;end if ((v168==(833 -(124 + 708))) or (((1041 + 1356) -1293)>=3351)) then while true do if (((606 + 112 + 942)<=((2422 -(83 + 1253)) + 2364)) and ((0 + 0)==v169)) then v170=v102[9 -7 ];v100[v170]=v100[v170](v14(v100,v170 + 1 ,v102[1155 -((2329 -1390) + (899 -686)) ]));break;end end break;end end elseif ((v103==(136 -(112 + 11))) or ((5869 -3644)<=(1688 -(1333 -425)))) then local v213=0 -0 ;local v214;local v215;local v216;while true do if ((v213==0) or (((16683 -13079) + 826)<(2015 -648))) then v214=0 + 0 ;v215=nil;v213=1661 -(565 + 1095) ;end if (((4265 -(267 + 246))>=(59 + 2851)) and (v213==(971 -(217 + 753)))) then v216=nil;while true do if (((2739 -(592 + 530))<(9233 -5787)) and (0==v214)) then local v306=0 -0 ;while true do if ((v306==(0 + 0)) or (3740==((12779 -9552) -(498 + 476)))) then v215=0;v216=nil;v306=1 + 0 ;end if (((666 -372)<(3813 -(816 + (1694 -965)))) and ((1 -0)==v306)) then v214=1397 -(618 + 778) ;break;end end end if ((v214==(1381 -(501 + 879))) or ((1459 -(172 + 267))>=(11195 -(8788 -(202 + 263))))) then while true do if ((v215==(0 + 0)) or (4896<(18121 -13857))) then v216=v100[v102[985 -(915 + 66) ]];if (v216 or ((14096 -(16276 -6494))>(6424 -(980 + 827)))) then v79=v79 + (1506 -(380 + 1125)) ;else local v357=0;local v358;while true do if (((2743 -1676)>(359 + 204 + 59)) and (v357==(1438 -(917 + 521)))) then v358=1968 -(1642 + 326) ;while true do if ((4279>=(7275 -4573)) and (v358==(0 + 0))) then v100[v102[2]]=v216;v79=v102[5 -2 ];break;end end break;end end end break;end end break;end end break;end end elseif ((625>(805 -(704 + 28))) and (v100[v102[8 -6 ]]==v102[1754 -(1095 + 655) ])) then v79=v79 + (875 -(765 + 109)) + 0 ;else v79=v102[3];end elseif ((v103<=17) or (2379>=3147)) then if ((42<=(4057 -(1070 + 71))) and (v103<=(18 -3))) then v100[v102[2 + 0 ]]=v45[v102[(3 -0) + 0 ]];elseif ((v103==16) or ((394 + 732)>=2667)) then local v217=1538 -(1340 + 16 + 182) ;local v218;local v219;local v220;local v221;local v222;while true do if (((1248 + 1377)<=(9140 -5675)) and (v217==(1984 -(179 + 1803)))) then v222=nil;while true do if ((v218==(1147 -(176 + 971))) or ((1297 + 1593 + 34)>=(1779 + 1261))) then local v307=0;while true do if (((2698 + 334)>(9867 -6986)) and (v307==((1040 -(829 + 210)) + (0 -0)))) then v218=1;break;end if (((1987 -(57 + 1519))<(4908 -(1061 + 417))) and ((0 -0)==v307)) then v219=v102[3 -(296 -(27 + 268)) ];v220={v100[v219]()};v307=355 -(343 + 11) ;end end end if (((2 + (1543 -(1153 + 390)))==v218) or ((517 + 1018)==(144 + 3702))) then for v323=v219,v221 do local v324=(301 + 118) -(192 + 227) ;local v325;while true do if ((340<(5831 -((1764 -(13 + 37)) + (414 -139)))) and (v324==(0 -0))) then v325=0 -(0 -0) ;while true do if ((v325==(0 + 0)) or ((1104 + 353)>=(7104 -2180))) then v222=v222 + (1357 -(866 + 490)) ;v100[v323]=v220[v222];break;end end break;end end end break;end if ((v218==(1 + 0 + 0)) or (2580>=(11496 -6970))) then v221=v102[8 -4 ];v222=172 -(153 + (56 -37)) ;v218=6 -4 ;end end break;end if ((v217==(0 + 0)) or ((5745 -1885)>4142)) then v218=134 -(121 + 13) ;v219=nil;v217=3 -(1 + 1) ;end if (((4434 + 231)>1169) and (v217==(1 + 0))) then v220=nil;v221=nil;v217=2 + 0 ;end end else v100[v102[86 -(19 + 65) ]]=v100[v102[3]]%v100[v102[4]] ;end elseif ((v103<=(61 -43)) or ((3819 -1673)>=(6185 -((3400 -2488) + 653)))) then v46[v102[(120 -(115 + 3)) + 1 ]]=v100[v102[2 + 0 ]];elseif ((v103>(53 -34)) or ((4555 -(1196 + 701))>=(4026 + 3))) then v100[v102[5 -3 ]]=v102[(4 -1) + 0 ];else v100[v102[1 + 1 ]]= #v100[v102[3 + 0 ]];end elseif (((805 -((568 -(432 + 77)) + 13))<=(1686 + 2523)) and (v103<=((162 -86) -(77 -32)))) then if ((v103<=(45 -20)) or (((6593 -(186 + 229)) -(1188 + 416))<=((1896 -(377 + 439)) + 757))) then if ((v103<=(16 + 6)) or ((2666 -(901 + 494))<=(969 -(298 + 615)))) then if ((v103==(43 -22)) or ((655 + 2636)<=536)) then local v175=0;local v176;while true do if ((1544<4859) and (v175==(0 -(0 + 0)))) then v176=v100[v102[3 + 1 ]];if (((3822 -(453 + 2345))<=(1080 + 2190)) and  not v176) then v79=v79 + (263 -(38 + 224)) ;else local v264=280 -(71 + 209) ;while true do if ((v264==((2731 -(139 + 674)) -(63 + 1855))) or ((4400 -(14 + 68 + 49))<=(3275 -2433))) then v100[v102[2]]=v176;v79=v102[1532 -(459 + 1070) ];break;end end end break;end end else local v177=0 -0 ;local v178;local v179;local v180;local v181;local v182;while true do if ((4917>(4325 -2369)) and (v177==(1 + 0))) then v180=nil;v181=nil;v177=2 + 0 + 0 ;end if ((((3010 -(1460 + 384)) + 2360)>=((297 -(57 + 113)) + 60)) and (v177==(284 -(206 + 77 + 1)))) then v178=0 -0 ;v179=nil;v177=1;end if ((v177==(1 + 1)) or ((3513 + 460)<(5472 -3568))) then v182=nil;while true do if ((v178==0) or ((1408 + 785)==1523)) then local v280=1779 -(177 + 882 + 720) ;while true do if (((6848 -(1751 + 206))==(14239 -9348)) and (v280==(0 -0))) then v179=320 -(46 + 189 + 85) ;v180=nil;v280=1 + 0 ;end if (((29 + 1888)==(6823 -4906)) and (v280==(3 -2))) then v178=1;break;end end end if (((1115 + 2865)>((2989 -(6 + 343)) + 387)) and (v178==(330 -(225 + (1000 -(449 + 448)))))) then while true do if ((3331>=(3024 -(71 + 891))) and ((0 -0)==v179)) then local v326=0 -0 ;local v327;while true do if ((v326==(0 + 0)) or ((1113 + (3478 -(1476 + 202)))==907)) then v327=0 + 0 ;while true do if (((3853 -(295 + 421))==((12802 -8057) -1608)) and (v327==(126 -(114 + 12)))) then v180=v102[833 -(199 + (1086 -454)) ];v181=v100[v180 + 2 ];v327=3 -2 ;end if (((11163 -8000)==((6411 -(255 + 142)) -2851)) and (v327==(3 -(1 + 1)))) then v179=(3333 -2124) -(343 + 289 + 576) ;break;end end break;end end end if ((v179==(3 -2)) or ((5141 -2029)<=(551 + 9 + 104))) then local v328=487 -(449 + 38) ;local v329;while true do if ((2834==(3333 -(375 + 124))) and (v328==(1035 -(485 + 550)))) then v329=371 -(182 + 189) ;while true do if (((17024 -13449)<=(11710 -6987)) and (v329==(0 -0))) then local v371=0 -0 ;while true do if ((v371==(0 + 0 + 0 + 0)) or ((3848 -(944 + 123))<1129)) then v182=v100[v180] + v181 ;v100[v180]=v182;v371=1 + 0 ;end if ((v371==(1 + 0)) or (1465>(5762 -4202))) then v329=(3903 -2383) -(1123 + 396) ;break;end end end if ((v329==(1 + 0)) or ((5880 -3219)<(2889 -((968 -640) + 472)))) then v179=7 -5 ;break;end end break;end end end if ((v179==(2 + 0)) or ((12861 -(9850 -(450 + 831)))<=(1522 -(538 + 104)))) then if (((430 -239)<(549 + (2106 -1495))) and (v181>((0 -0) -0))) then if (((415 + 712)<=(4036 -(535 + 924))) and (v182<=v100[v180 + 1 + 0 ])) then local v359=0;while true do if ((v359==(0 + 0)) or ((120 + 18 + 4424)<(3802 -(1337 + 37)))) then v79=v102[3];v100[v180 + (9 -6) ]=v182;break;end end end elseif (((78 + 162)<=(8819 -6299)) and (v182>=v100[v180 + 1 + 0 ])) then local v360=1759 -(1273 + 486) ;local v361;while true do if (((15217 -11746)<=(158 + 1831 + (2616 -968))) and (v360==(0 + 0))) then v361=0 -0 ;while true do if (((1650 -1023)<=(135 + 1538)) and (v361==(0 -0))) then v79=v102[4 -1 ];v100[v180 + 3 ]=v182;break;end end break;end end end break;end end break;end if ((v178==(1 + 0)) or ((2208 -(1875 + 87))>=(507 + 256))) then v181=nil;v182=nil;v178=1495 -(191 + 1302) ;end end break;end end end elseif (((1921 + 655)>=(573 + 958)) and (v103<=(22 + (1797 -(378 + 1418))))) then local v183=0;local v184;local v185;local v186;while true do if ((2005<(2252 + 534)) and (v183==1)) then v186=nil;while true do if (((122 + 4579)<(7370 -2464)) and (v184==(456 -(42 + 414)))) then v185=1664 -(1401 + 263) ;v186=nil;v184=1447 -(965 + 481) ;end if (((10997 -6329)>(3611 + 859)) and ((1 + 0)==v184)) then while true do if ((v185==(0 + 0)) or ((2595 -(1661 -435))>(5326 -(1594 + 9)))) then v186=v102[2 + 0 ];v100[v186](v14(v100,v186 + (1438 -(473 + (1914 -950))) ,v80));break;end end break;end end break;end if ((v183==(1125 -(885 + 240))) or ((1844 -(1111 + (307 -187)))>=(124 + 636))) then v184=0 -0 ;v185=nil;v183=1 + 0 ;end end elseif (((3996 -(662 + 605))>(2940 -895)) and (v103>24)) then local v227=815 -(219 + 596) ;local v228;local v229;local v230;local v231;while true do if ((v227==(619 -(418 + (482 -283)))) or ((2306 -(1462 -(9 + 7)))==(10201 -6726))) then while true do if ((v228==(1 + 0 + (281 -(100 + 181)))) or ((5481 -(4992 -(353 + 823)))>(3086 -(662 + 157)))) then v231=v100[v229 + (2 -(0 -0)) ];if ((v231>0) or ((2097 -1099)==(461 + (6001 -3746)))) then if ((v230>v100[v229 + (2 -1) ]) or ((8077 -5487)>(2475 + 523))) then v79=v102[892 -(213 + (1345 -669)) ];else v100[v229 + (960 -(716 + 241)) ]=v230;end elseif ((v230<v100[v229 + 1 ]) or ((7974 -5491)>(4350 -(389 + 148)))) then v79=v102[3 + 0 ];else v100[v229 + (402 -(395 + 4)) ]=v230;end break;end if ((2785==(3911 -(197 + 929))) and (v228==0)) then v229=v102[(52 + 145) -(162 + 33) ];v230=v100[v229];v228=1 + 0 ;end end break;end if ((324<=(567 + 113 + 351)) and (v227==(30 -(10 + 19)))) then v230=nil;v231=nil;v227=2;end if ((v227==((2507 -1838) -(45 + 624))) or ((4207 -(192 + 434))<=(819 -559))) then v228=0 -0 ;v229=nil;v227=1805 -(1424 + 380) ;end end else v100[v102[2]][v100[v102[7 -4 ]]]=v100[v102[5 -1 ]];end elseif (((1633 + 110)<(5200 -(713 + 373))) and (v103<=(28 + 0))) then if ((3898<(5549 -(318 + 1234))) and (v103<=(8 + 18))) then local v187=209 -(52 + (341 -184)) ;local v188;local v189;local v190;local v191;while true do if ((((5769 -4324) + 1632)>(980 -(407 + (1225 -778)))) and (v187==(1169 -(603 + 566)))) then local v255=(0 + 0) -0 ;while true do if (((2574 + 769)==3343) and (v255==(0 + 0))) then v188=0 -(0 -0) ;v189=nil;v255=1 -0 ;end if ((v255==(682 -(281 + (1397 -(182 + 815))))) or (3015==3678)) then v187=1 + 0 ;break;end end end if ((3317>=(3051 -1969)) and (v187==(451 -(56 + 393)))) then while true do if ((((6723 -3616) -(45 + 8))==(3496 -(375 + 67))) and (v188==(0 + 0))) then local v281=1505 -(156 + 1349) ;while true do if (((4250 -(135 + 321))<=(6087 -(908 + 4 + 940))) and (v281==(0 -0))) then v189=v95[v102[(33 -25) -5 ]];v190=nil;v281=1;end if (((821 -506)==(111 + (436 -232))) and (v281==(1661 -(1630 + 30)))) then v188=1130 -(873 + 256) ;break;end end end if ((v188==1) or ((4419 -(601 + 306))>(5132 -(146 + 56)))) then local v282=0 -0 ;while true do if ((v282==((2993 -(177 + 1086)) -(1090 + 639))) or (1413>(12805 -(24818 -15377)))) then v188=2 + 0 ;break;end if ((1318<(2211 + 1329)) and (v282==(0 -0))) then v191={};v190=v11({},{__index=function(v332,v333)local v339=0 + 0 ;local v340;local v341;local v342;while true do if ((v339==(0 -0)) or (3886==(6556 -3926))) then v340=0 -0 ;v341=nil;v339=1;end if (((3054 -((1091 -781) + 121))==2623) and (v339==(1 + 0))) then v342=nil;while true do if ((v340==(0 + 0)) or ((9134 -4509)==(3770 -2087))) then local v376=1607 -(1463 + 144) ;while true do if ((((2281 -(604 + 847)) + 757)<(2779 + 554)) and (v376==(1370 -(456 + (1223 -309))))) then v341=0 + 0 ;v342=nil;v376=1 + 0 ;end if ((v376==(4 -3)) or ((801 -((1194 -582) + (320 -227)))>(5693 -1583))) then v340=1;break;end end end if ((v340==(754 -(86 + 129 + (1584 -(242 + 804))))) or ((2644 -(150 + 816))>=(5480 -(227 + 560)))) then while true do if ((v341==(0 + 0)) or ((532 -187)>=3478)) then local v392=1369 -(177 + 1192) ;while true do if ((v392==0) or ((3887 -3040)>=(2403 + 162))) then local v398=(3354 -(1513 + 448)) -((3476 -2660) + 577) ;while true do if ((v398==(0 + 0)) or ((233 + 37)>=(2435 + 2091))) then v342=v191[v333];return v342[894 -(750 + 143) ][v342[1090 -(670 + 418) ]];end end end end end end break;end end break;end end end,__newindex=function(v332,v333,v334)local v343=812 -(82 + 730) ;local v344;local v345;local v346;while true do if (((1127 -(571 + 556))==v343) or ((1665 -(447 + 645))>=(1428 -(4 + 78)))) then v344=731 -(380 + (1477 -(734 + 392))) ;v345=nil;v343=2 -(1600 -(1130 + 469)) ;end if (((1 -0)==v343) or ((2872 -(1336 + 402))==(9751 -5959))) then v346=nil;while true do if (((8488 -5723)==(3908 -(163 + 980))) and (v344==0)) then v345=1485 -(434 + 65 + 986) ;v346=nil;v344=(3 -1) -1 ;end if ((v344==(2 -(878 -(124 + 753)))) or ((10797 -7303)==(324 + 100))) then while true do if ((v345==(0 + 0)) or ((3916 -(168 + 388))<=(2172 -872))) then v346=v191[v333];v346[1960 -(1745 + 214) ][v346[1 + 1 ]]=v334;break;end end break;end end break;end end end});v282=1;end end end if ((v188==(1 + 1)) or (3265<=(1529 + (1033 -(263 + 200))))) then for v290=271 -(30 + 240) ,v102[853 -(307 + 542) ] do local v291=0;local v292;local v293;while true do if ((((6086 -(1811 + 77)) -1642)<=3282) and (v291==1)) then while true do if ((v292==1) or ((5996 -((1862 -1223) + 410))<=(2019 + 696))) then if (((7884 -5725)==(3813 -(1480 + 174))) and (v293[1 + 0 ]==(24 + 5))) then v191[v290-(1 -0) ]={v100,v293[(23 -18) -2 ]};else v191[v290-(1 + 0) ]={v45,v293[3]};end v99[ #v99 + (1654 -(555 + 1098)) ]=v191;break;end if (((1154 + 2586 + 997)>((1720 -743) -(216 + 414))) and (v292==0)) then local v363=0 -0 ;while true do if ((v363==0) or ((3578 -(7 + 9))==(4188 -2527))) then v79=v79 + 1 ;v293=v94[v79];v363=739 -(389 + 349) ;end if (((2502 -(773 + 577))==(2080 -(678 + 250))) and (v363==(1 + 0))) then v292=3 -2 ;break;end end end end break;end if ((v291==(0 + 0)) or ((4982 -(203 + 129 + 74))<=(1899 + 501))) then v292=0 + 0 ;v293=nil;v291=1 -0 ;end end end v100[v102[2]]=v43(v189,v190,v46);break;end end break;end if (((5911 -(780 + 249))>((2188 -1737) + 126)) and (v187==(2 -1))) then v190=nil;v191=nil;v187=725 -(134 + 589) ;end end elseif ((4140>=((3478 -(198 + 298)) -(1507 + 83))) and (v103>(968 -(696 + 245)))) then for v256=v102[7 -(11 -6) ],v102[3] do v100[v256]=nil;end else local v234=0 + 0 ;local v235;while true do if ((v234==(0 + 0)) or ((3335 -1040)==4601)) then v235=v102[2];v100[v235]=v100[v235](v14(v100,v235 + (197 -(141 + 55)) ,v80));break;end end end elseif ((v103<=(1 + 28)) or (((7327 -(815 + 753)) -3679)==3638)) then v100[v102[5 -3 ]]=v100[v102[2 + 1 ]];elseif ((v103>(28 + 2)) or (998>=3661)) then v100[v102[1 + 1 ]]=v43(v95[v102[33 -(24 + 6) ]],nil,v46);else v100[v102[2]]();end elseif ((2640<(6685 -3790)) and (v103<=(99 -63))) then if ((((5888 -2308) -(92 + 192))>(68 + 201)) and (v103<=(16 + 17))) then if ((v103==32) or ((99 + 124)>=(1254 -(203 + 716)))) then v100[v102[2]]=v46[v102[3 -0 ]];elseif (((2571 + 61)>=(2892 -(730 + 1181))) and (v102[2]==v100[v102[1 + 0 + 3 ]])) then v79=v79 + 1 ;else v79=v102[3];end elseif ((v103<=(391 -(72 + 183 + 102))) or ((5999 -(702 + 1210))<(104 + 232 + 858))) then local v196=353 -(57 + (606 -(221 + 89))) ;local v197;local v198;while true do if (((2546 -(917 + 734))<=(3770 -(406 + 487))) and (v196==1)) then while true do if ((v197==(0 -0)) or ((1153 + 488)>=(590 + 4330))) then v198=v102[2 + 0 ];do return v100[v198](v14(v100,v198 + ((505 + 41) -(287 + 258)) ,v102[9 -6 ]));end break;end end break;end if (((1233 + 21 + 173)<=4551) and (v196==(1257 -(592 + 665)))) then v197=1299 -(632 + 667) ;v198=nil;v196=1 -0 ;end end elseif ((v103>(15 + 20)) or ((75 + 4142)<=(1323 -(1347 -822)))) then if ((3023<(645 + 2481)) and v100[v102[7 -5 ]]) then v79=v79 + 1 ;else v79=v102[1 + 2 ];end else local v238=0 -0 ;local v239;local v240;local v241;while true do if ((v238==(0 + (0 -0))) or ((9740 -7232)==3996)) then v239=0 -0 ;v240=nil;v238=1403 -(1292 + (1554 -(560 + 884))) ;end if ((v238==(1 + 0)) or ((1110 + 65)==(4297 -(74 + 44)))) then v241=nil;while true do if (((2106 -(367 + 252))>=(2554 -(769 + (2443 -(1267 + 237))))) and (v239==0)) then local v314=0;while true do if (((4336 -(238 + 9))>(2120 -((5115 -4083) + 867))) and ((3 -2)==v314)) then v239=1260 -(380 + 879) ;break;end if ((v314==0) or ((1517 + 520)<=(2734 -1187))) then v240=0;v241=nil;v314=3 -2 ;end end end if ((v239==(1145 -(387 + 757))) or ((345 -(55 + (1063 -800)))>=(1877 + 42 + 175))) then while true do if ((2771<=(2243 + 1072)) and (v240==0)) then v241=v102[2 + 0 + 0 ];do return v14(v100,v241,v80);end break;end end break;end end break;end end end elseif (((3599 -(80 + 811))>=(1482 -783)) and (v103<=((4 + 55) -20))) then if (((732 -(1265 -919))<=(5596 -(650 + 116))) and (v103<=((1734 -(28 + 37)) -(497 + 527 + (2400 -(1477 + 315)))))) then v100[v102[2]]=v102[4 -1 ] + v100[v102[3 + 1 ]] ;elseif ((v103==((12 -3) + 29)) or (((2938 + 12528) -11123)==(10464 -6263))) then local v242=792 -(175 + 617) ;local v243;while true do if (((24 + 35 + 3652)==(2011 + (3214 -(1158 + 356)))) and (v242==0)) then v243=v102[4 -(2 + 0) ];v100[v243](v100[v243 + 1 + 0 + 0 ]);break;end end else local v244=1529 -(731 + 798) ;local v245;local v246;local v247;local v248;while true do if (((3108 -(113 + 1248))>(228 -78)) and (v244==(449 -(170 + 277)))) then for v285=v245,v80 do local v286=0 -0 ;while true do if ((v286==((0 -0) -0)) or ((815 -(885 -(227 + 120)))>=(7536 -4740))) then v248=v248 + 1 ;v100[v285]=v246[v248];break;end end end break;end if ((v244==1) or ((1339 -(6 + 15))>(2043 + 1285))) then v80=(v247 + v245) -((161 + 59) -(20 + 199)) ;v248=0;v244=9 -7 ;end if ((((0 -0) + 0)==v244) or ((8709 -6143)>=(1066 + 330 + 1626))) then local v268=0;while true do if ((v268==(97 -(10 + 87))) or ((1822 + 1826)<(1162 -(714 -(280 + 2))))) then v245=v102[2];v246,v247=v97(v100[v245](v14(v100,v245 + 1 ,v80)));v268=4 -3 ;end if ((v268==1) or ((2111 + 686)<((611 + 966) -(935 + 219)))) then v244=1632 -(463 + 1168) ;break;end end end end end elseif ((v103<=(1185 -(634 + 511))) or ((9148 -6002)<=(1000 -(63 + 19)))) then v100[v102[2]]={};elseif ((610==(1402 -792)) and (v103>(38 + 3))) then v100[v102[2 + (0 -0) ]]=v100[v102[744 -((479 -(30 + 11)) + 303) ]] -v102[328 -(262 + 62) ] ;else v100[v102[4 -2 ]]=v100[v102[1425 -(642 + 337 + 443) ]]%v102[5 -1 ] ;end v79=v79 + (3 -2) + 0 ;break;end if ((v109==(1002 -(206 + 796))) or ((2894 -(714 + 1150))==1565)) then local v124=0;while true do if ((v124==(0 -0)) or (1095==(4222 -(429 + 10)))) then local v134=0 + 0 ;while true do if ((((4521 -(990 + 372)) -(107 + 153))>=(4567 -3622)) and ((1 + 0)==v134)) then v124=1 + 0 ;break;end if ((v134==(210 -(160 + (1094 -(851 + 193))))) or ((3923 -(930 + 668))<=(98 + 1345))) then v102=v94[v79];v103=v102[1 + 0 ];v134=437 -(86 + 350) ;end end end if ((v124==(1394 -(1141 + 252))) or ((2983 -(718 + 805))==((1559 + 1976) -(332 + (88 -36))))) then v109=1 + 0 ;break;end end end end break;end end break;end end end end;v78=3;end if (v78==1) then v81={...};v82=v13("#",...) -1 ;v78=2;end end end;end return v43(v42(),{},v26)(...);end;vv10(),...);break;end end end
